S32K14x_AMMCLIB_1.1.20
=======================
Revision 1.1.20
31-March-2020

RELEASE NOTES
=============
This is the NXP Service Release for rev 1.1.20 of the Automotive Math and Motor Control Library Set for NXP S32K14x devices, supporting the ARM M4 core based devices.

Installation instructions:
==========================
Run S32K14x_AMMCLIB_RTM_1_1_20.exe self executable file, in order to start the installation procedure and follow the instruction on the screen. The recommended destination path (the default one) is: C:\NXP\AMMCLIB\S32K14x_AMMCLIB_1.1.20

Important notes:
================
As the Automotive Math and Motor Control Library Set for NXP S32K14x devices supports the global configuration option, it is highly recommended to copy the SWLIBS_Config.h file to your local structure and refer the configuration to this local copy. This approach will prevent the incorrect setup of default configuration option, in case multiple projects with different default configuration are used.

The Automotive Math and Motor Control Library Set for NXP S32K14x devices is delivered without pre-selected default configuration option in the SWLIBS_Config.h file. The user is responsible to set the default configuration option according the application need, otherwise the error message is displayed and the compilation of the user application did not succeed.

To get correct results from macros FRAC32(x) and FRAC16(x), the compiler must support double precision floating-point constants. Make sure to set the compiler options according to the chapter "Pre-compiled library compilation options".

The bit-accurate models contain sources auto-generated by MATLAB(r). (c) 1984 - 2014 The MathWorks, Inc.

Known limitations and issues:
=============================

The library was built and tested using the following compilers:
===============================================================
- Green Hills MULTI v2017.1.4
- IAR ANSI C/C++ Compiler for ARM V8.11.2.13589
- S32 Design Studio for Arm based MCUs 2018.R1

What's new in 1.1.20:
====================
- (MCL-1091) Reworked all bit accurate models. Added TLC files for model-based code generation from Simulink.
- (MCL-1108) Corrected equations in the UG in GMCLIB_DecouplingPMSM function
- (MCL-1089) Removed unused variables.
- (MCL-1110) Fixed wrong calculation of fractional implementations of the GMCLIB_DecouplingPMSM function

Release history:
================
Rev 1.1.19
- (MCL-995) Improved performance of GDFLIB_FilterFIR_F16 on ARM Cortex-M cores.
- (MCL-1088) Added error message in case the default implementation is not selected in SWLIBS_Config.h.
- (MCL-1058) Added SetState functions for observers and integrator.

Rev 1.1.18
- (MCL-974) Added function GMCLIB_SvmU7n (space vector modulation with zero vector 111).
- (MCL-397) Added new function AMCLIB_Windmilling (detection of the spontaneous rotation of an unpowered PMSM).
- (MCL-971) Added function GMCLIB_SvmSci (space vector modulation with third harmonic injection).

Rev 1.1.17
- (MCL-1022) Improved accuracy of MLIB_ConvertPU function
- (MCL-1021) Improved accuracy of GFLIB_Lut2D_F32
- (MCL-972) Added function GMCLIB_PwmIct.
- (MCL-973) Added function GMCLIB_SvmU0n

Rev 1.1.16
- (MCL-902) Changed the BAM s-function interface of vector/matrix functions to support dynamic size.
- (MCL-976) Data type tBool is defined as enum.

Rev 1.1.15
- (MCL-121) Added function GFLIB_ControllerPIDpAW (PID controller in parallel form with anti-windup)
- (MCL-862) Changed the default installation path.
- (MCL-336) Corrected chapter GFLIB_Lut1D in User's Guide.
- (MCL-851) Improved accuracy of MLIB_Div_F32.
- (MCL-832) Reworked all chapters in User's Guide concerning trigonometric functions (Sin, Cos, Tan, Asin, Acos, Atan).

Rev 1.1.14
- (MCL-850) Improved chapters structure of the User's Guide. 
- (MCL-805) Updated documentation of GMCLIB_ElimDcBusRip.
- (MCL-841) Changed behavior of GFLIB_Ramp for negative input values.
- (MCL-846) Corrected BAMs for GFLIB_VMin.
- (MCL-803) Updated documentation of GMCLIB_SvmStd_FLT to specify the required normalization of input voltages.

Rev 1.1.13
- (MCL-284) Added support of S32 Design Studio for Arm based MCUs. For S32K14x and S32V234 standalone GCC compiler support has been deprecated.
- (MCL-120) Added SetState and Init functions to controllers and FilterMA.
- (MCL-712) Added inlined implementation of GFLIB_Sqrt_FLT to improve performance.
- (MCL-799) Improved the performance of GMCLIB_ElimDcBusRip_F16. Swapped the members of the GMCLIB_ElimDcBusRip state structures.
- (MCL-800) Improved performance of GMCLIB_SvmStd_F16.
- (MCL-791) Changed GFLIB_Ramp_F16 to GFLIB_Ramp_F32 in AMCLIB_Speed_Loop_F16 and AMCLIB_FWSpeed_Loop_F16.
- (MCL-829) Added documentation of accuracy criteria for GFLIB_VMin_FLT.
- (MCL-717) Corrected equations in User's Guide related to MLIB_Convert function.

Rev 1.1.12
- (MCL-551) Added function GFLIB_VMin.

Rev 1.1.11
- (MCL-461) Changed supported versions of several compilers.
- (MCL-359) Added new AMCLIB functions.
- (MCL-478) Improved performance of GFLIB_Ramp.

Rev 1.1.10
- (MCL-458) S32K14x AMMCLib tests now running at 80 MHz core clock.
- (MCL-346) Corrected overflowing lines of text in code examples in the User Guide.
- (MCL-473) Updated User's Guide chapters on compounded/vectorized functions to give a guidance on reaching the optimal performance.
- (MCL-466) Increased accuracy of GFLIB_Sin_FLT, GFLIB_Cos_FLT, GFLIB_SinCos_FLT, AMCLIB_BemfObsrvDQ_FLT in corner cases.

Rev 1.1.9
- (MCL-382) IAR compiler - optimization level in several functions had to be lowered as a workaround for a compiler bug.
- (MCL-367) Removed floating-point BAM blocks from ammclib_bam.mdl file for platforms which do not support the floating-point implementation.
- (MCL-374) Removed duplicated eq. 7 and 8 from the documentation of GMCLIB_SvmStd.
- (MCL-379) Changed supported IAR compiler version to v8.11.1.13263. Older versions contain an optimizer bug and are incompatible with new AMMCLib functions.
- (MCL-355) Added new scalar and vector base-10 logarithm functions - GFLIB_Log10_FLT, GFLIB_VLog10_FLT.

Rev 1.1.8
- (MCL-343) Repeated sections were merged into a common chapters in the User Guide. This approach was applied to all AMMCLIB functions.
- (MCL-345) The macro dispatcher names for default-configuration options of all AMCLIB_TrackObserver implementations was corrected.
- (MCL-354) Parentheses around the argument of the FRAC16 and FRAC32 macros were added.
- (MCL-353) GHS compiler options were added in the release notes.

Rev 1.1.7
- New advanced motor control functions AMCLIB_BemfObsrvDQ and AMCLIB_TrackObsrv were developed and added into AMMCLIB library set.
- (ENGR00384779) As per GPIS marketing decision the production ready SW term was replaced by automotive grade SW.

Rev 1.1.6
- (ENGR00380372) Performance of several GFLIB and GMCLIB library functions has been improved by assembly optimization.
- (ENGR00381792) Enabled use of intrinsic functions for signal processing engine. Certain compiler-supplied header files must be included during library compilation, see "library integration" chapter in the User Guide.
- (ENGR00382672) The GreenHills compiler does not inline functions declared as static __inline. The inline keyword in SWLIBS_Defines.h has been changed.
- (ENGR00382930) The fixed-point MLIB_Msu and MLIB_Mnac functions have been added to the precision table in user manual. All fixed-point implementations of these functions are nonsaturating.

Rev 1.1.5
- (ENGR00357322) Added information about possible exceptions in the User Guide.
- (ENGR00375386) The 16-bit fractional implementations of the MLIB_Mac, MLIB_MacSat, MLIB_Mnac, MLIB_Msu and MLIB_VMac functions were modified to calculate the intermediate results in full 32-bit precision.
- (ENGR00375549) Criteria for the floating point variants of the GFLIB_AtanYX and GFLIB_AtanYXShifted functions have been corrected. Error bounds of these functions have been updated as well.
- (ENGR00377411) The GFLIB_ControllerPIp_Eq4 equation for all implementations was corrected to reflect the Bilinear transformation of integral part.
- (ENGR00377712) The function precision table in User Guide was updated to reflect the MLIB_VMac_F16 maximum error 2LSB.
- (ENGR00377714) Precision of the 32-bit fractional implementation of the GMCLIB_Park function was improved by removing unnecessary shifts used for intermediate results calculation.
- (ENGR00377711) New MLIB_RndSat_F16F32 function was added. Accuracy of the 16-bit fractional implementations of the GMCLIB_Park and GFLIB_ControllerPIp functions was increased.
- (ENGR00377771) Implementation of fixed-point controllers has been changed to prevent undesirable saturation in cases when the coefficients are scaled to the full fractional range.
- (ENGR00375342) The example code for GFLIB_ControllerPIrAW_FLT and GFLIB_ControllerPIr_FLT functions were corrected in the AMMCLIB User Guides.
- (ENGR00379470) The equation of transfer function in GFLIB_ControllerPIr and GFLIB_ControllerPIrAW in User Guide was corrected.

Rev 1.1.4
- (ENGR00371353) Implementation of fix32-to-fix16 rounding error correction in the GFLIB_ControllerPIr_F16, GFLIB_ControllerPIrAW_F16, GFLIB_ConlrollerPIpAW_F16 and GFLIB_IntegratorTR_F16 functions was changed to respect the value on 15-bit position.
- (ENGR00372154) The "Matlab Integration" chapter in user guides was updated/corrected.
- (ENGR00374204) IAR compiler version was increased to version 7.50.3.10732.
- (ENGR00373704) The MLIB_Mul, MLIB_ShLSat and MLIB_VMac implementation for M4-ASM optimized version was chaned from ASM implementation to C-based implementation for GHS compiler.

Rev 1.1.3
- (ENGR00362922) New unified single library file ammclib_bam.mdl for all BAM models was created.
- (ENGR00368436) The organization of bam folder in the installation directory was synchronized with the arichitecture of the User Guide and single Matlab/Simulink library, thus all Bit Accurate Models are stored in the following structure: <Library module> - <Implementation> - <all BAM models from the same library module and implementation>
- (ENGR00369315) During the floating point precision documentation generation phase, presence of all applicable equations is checked by new script.
- (ENGR00369406) Adding support of GreenHills compiler, v2015.1.4 to the AMMCLib for S32K14x product line.
- (ENGR00369352) Critical MLIB functions in licensed version of the AMMCLib for S32K14x are now optimized using the Cortex M4 ASM.

Rev 1.1.2
- (ENGR00362902) New functions, GFLIB_SinCos, for all implementations added, calculating the Sine and Cosine from input angle.
- (ENGR00363338) A new document describing the accuracy of floating-point functions has been included into the release.
- (ENGR00365065) The installation package, quality pack and release notes filenames were synchronized with the rest of the FSL SW products. The naming convention is as follows:
    <Platform>_AMMCLIB_RTM_<MajorReleaseNumber>_<MinorReleaseNumber>_<BuildNumber>.exe
    <Platform>_AMMCLIB_RTM_<MajorReleaseNumber>_<MinorReleaseNumber>_<BuildNumber>_ReleaseNotes.txt
    <Platform>_AMMCLIB_RTM_<MajorReleaseNumber>_<MinorReleaseNumber>_<BuildNumber>QualityPackage.zip
    <Platform>_AMMCLIB_RTM_<MajorReleaseNumber>_<MinorReleaseNumber>_<BuildNumber>_EVAL.exe
    <Platform>_AMMCLIB_RTM_<MajorReleaseNumber>_<MinorReleaseNumber>_<BuildNumber>_EVAL_ReleaseNotes.txt
- Adding support of the S32K14x devices.
- (ENGR00365931) The description of GDFLIB_IntegratorTR_F32/GFLIB_IntegratorTR_F16 behavior in case of incorrect scaling added to the User Guide.
- (ENGR00365999) The BlackDuck open source scanning now covering all AMMCLIB platforms as well as free and paid variants. Output Bill of Material reports from BlackDuck scan are stored in the QualityPack in all installation packages.
- (ENGR00366864) The GCC compiler for ARM Cortex M4 compiles floating-point functions with unsafe optimizations in case the optimization option -Ofast is used. The optimization option -O3 instead have to be used to meet the precision expectations.

Rev 1.1.1
- Initial revision for the S32K14x devices.

Pre-compiled library compilation options:
=========================================
The Automotive Math and Motor Control Library Set for NXP S32K14x devices is delivered with pre-compiled libraries for all supported compilers. The following options were used to build these libraries:
S32 Design Studio for Arm based MCUs 6.3.1 20170509
    -mcpu=cortex-m4 \
    -mfloat-abi=hard -mfpu=fpv4-sp-d16 \
    -std=c99 \
    -mthumb \
    -O3 \
    -c \
    -ffunction-sections \
    -fmessage-length=0
    NOTE: NewLib must be selected as standard library
Green Hills MULTI v2017.1.4
    -cpu=cortexm4f \
    -fpu=vfpv4_d16 \
    -fsingle \
    -O3 -Otime \
    -ansi \
    -preprocess_assembly_files \
    --no_exceptions \
    -Wundef \
    -Wimplicit-int \
    -Wshadow \
    -Wtrigraphs \
    --no_commons \
    --gnu_asm

IAR ANSI C/C++ Compiler for ARM V8.11.2.13589
    --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp \
    -Ohs --use_c++_inline --silent \
    --thumb \
    --dlib_config $(call winpath,$(TOOLCHAIN_DIR)/arm/INC/c/DLib_Config_Normal.h)   
