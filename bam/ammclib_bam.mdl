Library {
  Name			  "ammclib_bam"
  Version		  9.3
  SavedCharacterEncoding  "windows-1252"
  DiagnosticSuppressor	  "on"
  LogicAnalyzerPlugin	  "on"
  NotesPlugin		  "on"
  SLCCPlugin		  "on"
  WebScopes_FoundationPlugin "on"
  LibraryType		  "BlockLibrary"
  EnableAccessToBaseWorkspace on
  ScopeRefreshTime	  0.035000
  OverrideScopeRefreshTime on
  DisableAllScopes	  off
  FPTRunName		  "Run 1"
  MaxMDLFileLineLength	  120
  LastSavedArchitecture	  "win64"
  Object {
    $PropName		    "BdWindowsInfo"
    $ObjectID		    1
    $ClassName		    "Simulink.BDWindowsInfo"
    WindowsInfo		    []
  }
  HideAutomaticNames	  on
  Created		  "Wed Apr 15 21:30:01 2020"
  Creator		  "ZCZ01vav01-svc"
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedByFormat	  "%<Auto>"
  LastModifiedBy	  "ZCZ01vav01-svc"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Wed Apr 15 21:30:24 2020"
  RTWModifiedTimeStamp	  508887022
  ModelVersionFormat	  "1.%<AutoIncrement:1>"
  SampleTimeColors	  off
  SampleTimeAnnotations	  off
  LibraryLinkDisplay	  "disabled"
  WideLines		  off
  ShowLineDimensions	  off
  ShowPortDataTypes	  off
  ShowAllPropagatedSignalLabels	off
  PortDataTypeDisplayFormat "AliasTypeOnly"
  ShowEditTimeErrors	  on
  ShowEditTimeWarnings	  on
  ShowEditTimeAdvisorChecks off
  ShowPortUnits		  off
  ShowDesignRanges	  off
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  ShowStorageClass	  off
  ShowTestPointIcons	  on
  ShowSignalResolutionIcons on
  ShowViewerIcons	  on
  SortedOrder		  off
  VariantCondition	  off
  ShowSubsystemDomainSpec off
  ExecutionContextIcon	  off
  ShowLinearizationAnnotations on
  ShowVisualizeInsertedRTB on
  ShowMarkup		  on
  BlockNameDataTip	  off
  BlockParametersDataTip  off
  BlockDescriptionStringDataTip	off
  BlockVariantConditionDataTip off
  ToolBar		  on
  StatusBar		  on
  BrowserShowLibraryLinks off
  FunctionConnectors	  off
  BrowserLookUnderMasks	  off
  MultiThreadCoSim	  on
  SimulationMode	  "normal"
  PauseTimes		  "5"
  NumberOfSteps		  1
  SnapshotBufferSize	  10
  SnapshotInterval	  10
  NumberOfLastSnapshots	  0
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  ExtModeBatchMode	  off
  ExtModeEnableFloating	  on
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigDurationFloating "auto"
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock on
  ShowModelReferenceBlockVersion off
  ShowModelReferenceBlockIO off
  OrderedModelArguments	  on
  Array {
    Type		    "Handle"
    Dimension		    1
    Simulink.ConfigSet {
      $ObjectID		      2
      Version		      "19.0.0"
      DisabledProps	      []
      Description	      ""
      Array {
	Type			"Handle"
	Dimension		10
	Simulink.SolverCC {
	  $ObjectID		  3
	  Version		  "19.0.0"
	  DisabledProps		  []
	  Description		  ""
	  Components		  []
	  StartTime		  "0.0"
	  StopTime		  "10.0"
	  AbsTol		  "auto"
	  AutoScaleAbsTol	  on
	  FixedStep		  "auto"
	  InitialStep		  "auto"
	  MaxOrder		  5
	  ZcThreshold		  "auto"
	  ConsecutiveZCsStepRelTol "10*128*eps"
	  MaxConsecutiveZCs	  "1000"
	  ExtrapolationOrder	  4
	  NumberNewtonIterations  1
	  MaxStep		  "auto"
	  MinStep		  "auto"
	  MaxConsecutiveMinStep	  "1"
	  RelTol		  "1e-3"
	  EnableMultiTasking	  off
	  ConcurrentTasks	  off
	  Solver		  "VariableStepAuto"
	  SolverName		  "VariableStepAuto"
	  SolverJacobianMethodControl "auto"
	  ShapePreserveControl	  "DisableAll"
	  ZeroCrossControl	  "UseLocalSettings"
	  ZeroCrossAlgorithm	  "Nonadaptive"
	  AlgebraicLoopSolver	  "TrustRegion"
	  SolverInfoToggleStatus  off
	  IsAutoAppliedInSIP	  off
	  SolverResetMethod	  "Fast"
	  PositivePriorityOrder	  off
	  AutoInsertRateTranBlk	  off
	  SampleTimeConstraint	  "Unconstrained"
	  InsertRTBMode		  "Whenever possible"
	  SampleTimeProperty	  []
	  DecoupledContinuousIntegration off
	  MinimalZcImpactIntegration off
	  SolverOrder		  3
	}
	Simulink.DataIOCC {
	  $ObjectID		  4
	  Version		  "19.0.0"
	  DisabledProps		  []
	  Description		  ""
	  Components		  []
	  Decimation		  "1"
	  ExternalInput		  "[t, u]"
	  FinalStateName	  "xFinal"
	  InitialState		  "xInitial"
	  LimitDataPoints	  off
	  MaxDataPoints		  "1000"
	  LoadExternalInput	  off
	  LoadInitialState	  off
	  SaveFinalState	  off
	  SaveOperatingPoint	  off
	  SaveFormat		  "Dataset"
	  SignalLoggingSaveFormat "Dataset"
	  SaveOutput		  on
	  SaveState		  off
	  SignalLogging		  on
	  DSMLogging		  on
	  InspectSignalLogs	  off
	  VisualizeSimOutput	  on
	  StreamToWorkspace	  off
	  StreamVariableName	  "streamout"
	  SaveTime		  on
	  ReturnWorkspaceOutputs  on
	  StateSaveName		  "xout"
	  TimeSaveName		  "tout"
	  OutputSaveName	  "yout"
	  SignalLoggingName	  "logsout"
	  DSMLoggingName	  "dsmout"
	  OutputOption		  "RefineOutputTimes"
	  OutputTimes		  "[]"
	  ReturnWorkspaceOutputsName "out"
	  Refine		  "1"
	  LoggingToFile		  off
	  DatasetSignalFormat	  "timeseries"
	  LoggingFileName	  "out.mat"
	  LoggingIntervals	  "[-inf, inf]"
	}
	Simulink.OptimizationCC {
	  $ObjectID		  5
	  Version		  "19.0.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    8
	    Cell		    "BooleansAsBitfields"
	    Cell		    "PassReuseOutputArgsAs"
	    Cell		    "PassReuseOutputArgsThreshold"
	    Cell		    "ZeroExternalMemoryAtStartup"
	    Cell		    "ZeroInternalMemoryAtStartup"
	    Cell		    "OptimizeModelRefInitCode"
	    Cell		    "NoFixptDivByZeroProtection"
	    Cell		    "UseSpecifiedMinMax"
	    PropName		    "DisabledProps"
	  }
	  Description		  ""
	  Components		  []
	  BlockReduction	  on
	  BooleanDataType	  on
	  ConditionallyExecuteInputs on
	  DefaultParameterBehavior "Tunable"
	  UseDivisionForNetSlopeComputation "off"
	  GainParamInheritBuiltInType off
	  UseFloatMulNetSlope	  off
	  DefaultUnderspecifiedDataType	"double"
	  UseSpecifiedMinMax	  off
	  InlineInvariantSignals  off
	  OptimizeBlockIOStorage  on
	  BufferReuse		  on
	  EnhancedBackFolding	  off
	  CachingGlobalReferences off
	  GlobalBufferReuse	  on
	  StrengthReduction	  off
	  AdvancedOptControl	  ""
	  ExpressionFolding	  on
	  BooleansAsBitfields	  off
	  BitfieldContainerType	  "uint_T"
	  EnableMemcpy		  on
	  MemcpyThreshold	  64
	  PassReuseOutputArgsAs	  "Structure reference"
	  PassReuseOutputArgsThreshold 12
	  ExpressionDepthLimit	  128
	  LocalBlockOutputs	  on
	  RollThreshold		  5
	  StateBitsets		  off
	  DataBitsets		  off
	  ActiveStateOutputEnumStorageType "Native Integer"
	  ZeroExternalMemoryAtStartup on
	  ZeroInternalMemoryAtStartup on
	  InitFltsAndDblsToZero	  off
	  NoFixptDivByZeroProtection off
	  EfficientFloat2IntCast  off
	  EfficientMapNaN2IntZero on
	  LifeSpan		  "auto"
	  MaxStackSize		  "Inherit from target"
	  BufferReusableBoundary  on
	  SimCompilerOptimization "off"
	  AccelVerboseBuild	  off
	  OptimizeBlockOrder	  "off"
	  OptimizeDataStoreBuffers on
	  BusAssignmentInplaceUpdate on
	  DifferentSizesBufferReuse off
	  OptimizationLevel	  "level2"
	  OptimizationPriority	  "Balanced"
	  OptimizationCustomize	  on
	  UseRowMajorAlgorithm	  off
	  LabelGuidedReuse	  off
	  MultiThreadedLoops	  off
	  DenormalBehavior	  "GradualUnderflow"
	}
	Simulink.DebuggingCC {
	  $ObjectID		  6
	  Version		  "19.0.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    1
	    Cell		    "UseOnlyExistingSharedCode"
	    PropName		    "DisabledProps"
	  }
	  Description		  ""
	  Components		  []
	  RTPrefix		  "error"
	  ConsistencyChecking	  "none"
	  ArrayBoundsChecking	  "none"
	  SignalInfNanChecking	  "none"
	  StringTruncationChecking "error"
	  SignalRangeChecking	  "none"
	  ReadBeforeWriteMsg	  "UseLocalSettings"
	  WriteAfterWriteMsg	  "UseLocalSettings"
	  WriteAfterReadMsg	  "UseLocalSettings"
	  AlgebraicLoopMsg	  "warning"
	  ArtificialAlgebraicLoopMsg "warning"
	  SaveWithDisabledLinksMsg "warning"
	  SaveWithParameterizedLinksMsg	"warning"
	  CheckSSInitialOutputMsg on
	  UnderspecifiedInitializationDetection	"Simplified"
	  MergeDetectMultiDrivingBlocksExec "error"
	  CheckExecutionContextPreStartOutputMsg off
	  CheckExecutionContextRuntimeOutputMsg	off
	  SignalResolutionControl "UseLocalSettings"
	  BlockPriorityViolationMsg "warning"
	  MinStepSizeMsg	  "warning"
	  TimeAdjustmentMsg	  "none"
	  MaxConsecutiveZCsMsg	  "error"
	  MaskedZcDiagnostic	  "warning"
	  IgnoredZcDiagnostic	  "warning"
	  SolverPrmCheckMsg	  "none"
	  InheritedTsInSrcMsg	  "warning"
	  MultiTaskDSMMsg	  "error"
	  MultiTaskCondExecSysMsg "error"
	  MultiTaskRateTransMsg	  "error"
	  SingleTaskRateTransMsg  "none"
	  TasksWithSamePriorityMsg "warning"
	  ExportedTasksRateTransMsg "none"
	  SigSpecEnsureSampleTimeMsg "warning"
	  CheckMatrixSingularityMsg "none"
	  IntegerOverflowMsg	  "warning"
	  Int32ToFloatConvMsg	  "warning"
	  ParameterDowncastMsg	  "error"
	  ParameterOverflowMsg	  "error"
	  ParameterUnderflowMsg	  "none"
	  ParameterPrecisionLossMsg "warning"
	  ParameterTunabilityLossMsg "warning"
	  FixptConstUnderflowMsg  "none"
	  FixptConstOverflowMsg	  "none"
	  FixptConstPrecisionLossMsg "none"
	  UnderSpecifiedDataTypeMsg "none"
	  UnnecessaryDatatypeConvMsg "none"
	  VectorMatrixConversionMsg "none"
	  InvalidFcnCallConnMsg	  "error"
	  FcnCallInpInsideContextMsg "error"
	  SignalLabelMismatchMsg  "none"
	  UnconnectedInputMsg	  "warning"
	  UnconnectedOutputMsg	  "warning"
	  UnconnectedLineMsg	  "warning"
	  UseOnlyExistingSharedCode "error"
	  SFcnCompatibilityMsg	  "none"
	  FrameProcessingCompatibilityMsg "error"
	  UniqueDataStoreMsg	  "none"
	  BusObjectLabelMismatch  "warning"
	  RootOutportRequireBusObject "warning"
	  AssertControl		  "UseLocalSettings"
	  AllowSymbolicDim	  on
	  RowMajorDimensionSupport off
	  ModelReferenceIOMsg	  "none"
	  ModelReferenceMultiInstanceNormalModeStructChecksumCheck "error"
	  ModelReferenceVersionMismatchMessage "none"
	  ModelReferenceIOMismatchMessage "none"
	  UnknownTsInhSupMsg	  "warning"
	  ModelReferenceDataLoggingMessage "warning"
	  ModelReferenceSymbolNameMessage "warning"
	  ModelReferenceExtraNoncontSigs "error"
	  StateNameClashWarn	  "none"
	  OperatingPointInterfaceChecksumMismatchMsg "warning"
	  NonCurrentReleaseOperatingPointMsg "error"
	  ChecksumConsistencyForSSReuse	"none"
	  PregeneratedLibrarySubsystemCodeDiagnostic "warning"
	  MatchCodeGenerationContextForUpdateDiagram "none"
	  InitInArrayFormatMsg	  "warning"
	  StrictBusMsg		  "ErrorLevel1"
	  BusNameAdapt		  "WarnAndRepair"
	  NonBusSignalsTreatedAsBus "none"
	  SymbolicDimMinMaxWarning "warning"
	  LossOfSymbolicDimsSimulationWarning "warning"
	  LossOfSymbolicDimsCodeGenerationWarning "error"
	  SymbolicDimsDataTypeCodeGenerationDiagnostic "error"
	  BlockIODiagnostic	  "none"
	  SFUnusedDataAndEventsDiag "warning"
	  SFUnexpectedBacktrackingDiag "error"
	  SFInvalidInputDataAccessInChartInitDiag "warning"
	  SFNoUnconditionalDefaultTransitionDiag "error"
	  SFTransitionOutsideNaturalParentDiag "warning"
	  SFUnreachableExecutionPathDiag "warning"
	  SFUndirectedBroadcastEventsDiag "warning"
	  SFTransitionActionBeforeConditionDiag	"warning"
	  SFOutputUsedAsStateInMooreChartDiag "error"
	  SFTemporalDelaySmallerThanSampleTimeDiag "warning"
	  SFSelfTransitionDiag	  "warning"
	  SFExecutionAtInitializationDiag "warning"
	  SFMachineParentedDataDiag "warning"
	  IntegerSaturationMsg	  "warning"
	  AllowedUnitSystems	  "all"
	  UnitsInconsistencyMsg	  "warning"
	  AllowAutomaticUnitConversions	on
	  RCSCRenamedMsg	  "warning"
	  RCSCObservableMsg	  "warning"
	  ForceCombineOutputUpdateInSim	off
	  UnitDatabase		  ""
	  UnderSpecifiedDimensionMsg "none"
	  DebugExecutionForFMUViaOutOfProcess off
	  ArithmeticOperatorsInVariantConditions "error"
	}
	Simulink.HardwareCC {
	  $ObjectID		  7
	  Version		  "19.0.0"
	  DisabledProps		  []
	  Description		  ""
	  Components		  []
	  ProdBitPerChar	  8
	  ProdBitPerShort	  16
	  ProdBitPerInt		  32
	  ProdBitPerLong	  32
	  ProdBitPerLongLong	  64
	  ProdBitPerFloat	  32
	  ProdBitPerDouble	  64
	  ProdBitPerPointer	  64
	  ProdBitPerSizeT	  64
	  ProdBitPerPtrDiffT	  64
	  ProdLargestAtomicInteger "Char"
	  ProdLargestAtomicFloat  "Float"
	  ProdIntDivRoundTo	  "Zero"
	  ProdEndianess		  "LittleEndian"
	  ProdWordSize		  64
	  ProdShiftRightIntArith  on
	  ProdLongLongMode	  off
	  ProdHWDeviceType	  "Intel->x86-64 (Windows64)"
	  TargetBitPerChar	  8
	  TargetBitPerShort	  16
	  TargetBitPerInt	  32
	  TargetBitPerLong	  32
	  TargetBitPerLongLong	  64
	  TargetBitPerFloat	  32
	  TargetBitPerDouble	  64
	  TargetBitPerPointer	  32
	  TargetBitPerSizeT	  32
	  TargetBitPerPtrDiffT	  32
	  TargetLargestAtomicInteger "Char"
	  TargetLargestAtomicFloat "None"
	  TargetShiftRightIntArith on
	  TargetLongLongMode	  off
	  TargetIntDivRoundTo	  "Undefined"
	  TargetEndianess	  "Unspecified"
	  TargetWordSize	  32
	  TargetPreprocMaxBitsSint 32
	  TargetPreprocMaxBitsUint 32
	  TargetHWDeviceType	  "Specified"
	  TargetUnknown		  off
	  ProdEqTarget		  on
	  UseEmbeddedCoderFeatures on
	  UseSimulinkCoderFeatures on
	  HardwareBoardFeatureSet "EmbeddedCoderHSP"
	}
	Simulink.ModelReferenceCC {
	  $ObjectID		  8
	  Version		  "19.0.0"
	  DisabledProps		  []
	  Description		  ""
	  Components		  []
	  UpdateModelReferenceTargets "IfOutOfDateOrStructuralChange"
	  EnableRefExpFcnMdlSchedulingChecks on
	  CheckModelReferenceTargetMessage "error"
	  EnableParallelModelReferenceBuilds off
	  ParallelModelReferenceErrorOnInvalidPool on
	  ParallelModelReferenceMATLABWorkerInit "None"
	  ModelReferenceNumInstancesAllowed "Multi"
	  PropagateVarSize	  "Infer from blocks in model"
	  ModelDependencies	  ""
	  ModelReferencePassRootInputsByReference on
	  ModelReferenceMinAlgLoopOccurrences off
	  PropagateSignalLabelsOutOfModel on
	  SupportModelReferenceSimTargetCustomCode off
	}
	Simulink.SFSimCC {
	  $ObjectID		  9
	  Version		  "19.0.0"
	  DisabledProps		  []
	  Description		  ""
	  Components		  []
	  SimCustomSourceCode	  ""
	  SimCustomHeaderCode	  ""
	  SimCustomInitializer	  ""
	  SimCustomTerminator	  ""
	  SimReservedNameArray	  []
	  SimUserSources	  ""
	  SimUserIncludeDirs	  ""
	  SimUserLibraries	  ""
	  SimUserDefines	  ""
	  SimCustomCompilerFlags  ""
	  SimCustomLinkerFlags	  ""
	  SFSimEcho		  on
	  SimCtrlC		  on
	  SimIntegrity		  on
	  SimUseLocalCustomCode	  on
	  SimParseCustomCode	  on
	  SimAnalyzeCustomCode	  off
	  SimBuildMode		  "sf_incremental_build"
	  SimGenImportedTypeDefs  off
	  ModelFunctionsGlobalVisibility "on"
	  CompileTimeRecursionLimit 50
	  EnableRuntimeRecursion  on
	  MATLABDynamicMemAlloc	  on
	  MATLABDynamicMemAllocThreshold 65536
	  CustomCodeFunctionArrayLayout	[]
	  DefaultCustomCodeFunctionArrayLayout "NotSpecified"
	}
	Simulink.RTWCC {
	  $BackupClass		  "Simulink.RTWCC"
	  $ObjectID		  10
	  Version		  "19.0.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    16
	    Cell		    "IncludeHyperlinkInReport"
	    Cell		    "GenerateTraceInfo"
	    Cell		    "GenerateTraceReport"
	    Cell		    "GenerateTraceReportSl"
	    Cell		    "GenerateTraceReportSf"
	    Cell		    "GenerateTraceReportEml"
	    Cell		    "PortableWordSizes"
	    Cell		    "GenerateWebview"
	    Cell		    "GenerateCodeMetricsReport"
	    Cell		    "GenerateCodeReplacementReport"
	    Cell		    "GenerateMissedCodeReplacementReport"
	    Cell		    "GenerateErtSFunction"
	    Cell		    "CreateSILPILBlock"
	    Cell		    "CodeExecutionProfiling"
	    Cell		    "CodeProfilingSaveOptions"
	    Cell		    "CodeProfilingInstrumentation"
	    PropName		    "DisabledProps"
	  }
	  SystemTargetFile	  "grt.tlc"
	  HardwareBoard		  "None"
	  ShowCustomHardwareApp	  off
	  ShowEmbeddedHardwareApp off
	  TLCOptions		  ""
	  GenCodeOnly		  off
	  MakeCommand		  "make_rtw"
	  GenerateMakefile	  on
	  PackageGeneratedCodeAndArtifacts off
	  PackageName		  ""
	  TemplateMakefile	  "grt_default_tmf"
	  PostCodeGenCommand	  ""
	  Description		  ""
	  GenerateReport	  off
	  RTWVerbose		  on
	  RetainRTWFile		  off
	  RTWBuildHooks		  []
	  ProfileTLC		  off
	  TLCDebug		  off
	  TLCCoverage		  off
	  TLCAssert		  off
	  RTWUseLocalCustomCode	  on
	  RTWUseSimCustomCode	  off
	  CustomSourceCode	  ""
	  CustomHeaderCode	  ""
	  CustomInclude		  ""
	  CustomSource		  ""
	  CustomLibrary		  ""
	  CustomDefine		  ""
	  CustomBLASCallback	  ""
	  CustomLAPACKCallback	  ""
	  CustomFFTCallback	  ""
	  CustomInitializer	  ""
	  CustomTerminator	  ""
	  Toolchain		  "Automatically locate an installed toolchain"
	  BuildConfiguration	  "Faster Builds"
	  CustomToolchainOptions  []
	  IncludeHyperlinkInReport off
	  LaunchReport		  off
	  PortableWordSizes	  off
	  CreateSILPILBlock	  "None"
	  CodeExecutionProfiling  off
	  CodeExecutionProfileVariable "executionProfile"
	  CodeProfilingSaveOptions "SummaryOnly"
	  CodeProfilingInstrumentation "off"
	  SILDebugging		  off
	  TargetLang		  "C"
	  IncludeBusHierarchyInRTWFileBlockHierarchyMap	off
	  GenerateTraceInfo	  off
	  GenerateTraceReport	  off
	  GenerateTraceReportSl	  off
	  GenerateTraceReportSf	  off
	  GenerateTraceReportEml  off
	  GenerateWebview	  off
	  GenerateCodeMetricsReport off
	  GenerateCodeReplacementReport	off
	  GenerateMissedCodeReplacementReport off
	  RTWCompilerOptimization "off"
	  ObjectivePriorities	  []
	  RTWCustomCompilerOptimizations ""
	  CheckMdlBeforeBuild	  "Off"
	  SharedConstantsCachingThreshold 1024
	  Array {
	    Type		    "Handle"
	    Dimension		    2
	    Simulink.CodeAppCC {
	      $ObjectID		      11
	      Version		      "19.0.0"
	      Array {
		Type			"Cell"
		Dimension		28
		Cell			"IgnoreCustomStorageClasses"
		Cell			"IgnoreTestpoints"
		Cell			"BlockCommentType"
		Cell			"InsertBlockDesc"
		Cell			"InsertPolySpaceComments"
		Cell			"SFDataObjDesc"
		Cell			"MATLABFcnDesc"
		Cell			"SimulinkDataObjDesc"
		Cell			"DefineNamingRule"
		Cell			"SignalNamingRule"
		Cell			"ParamNamingRule"
		Cell			"InternalIdentifier"
		Cell			"InlinedPrmAccess"
		Cell			"CustomSymbolStr"
		Cell			"CustomSymbolStrGlobalVar"
		Cell			"CustomSymbolStrType"
		Cell			"CustomSymbolStrField"
		Cell			"CustomSymbolStrFcn"
		Cell			"CustomSymbolStrModelFcn"
		Cell			"CustomSymbolStrFcnArg"
		Cell			"CustomSymbolStrBlkIO"
		Cell			"CustomSymbolStrTmpVar"
		Cell			"CustomSymbolStrMacro"
		Cell			"CustomSymbolStrUtil"
		Cell			"CustomSymbolStrEmxType"
		Cell			"CustomSymbolStrEmxFcn"
		Cell			"CustomUserTokenString"
		Cell			"ReqsInCode"
		PropName		"DisabledProps"
	      }
	      Description	      ""
	      Components	      []
	      Comment		      ""
	      ForceParamTrailComments off
	      GenerateComments	      on
	      CommentStyle	      "Auto"
	      IgnoreCustomStorageClasses on
	      IgnoreTestpoints	      off
	      MaxIdLength	      31
	      PreserveName	      off
	      PreserveNameWithParent  off
	      ShowEliminatedStatement off
	      OperatorAnnotations     off
	      SimulinkDataObjDesc     off
	      SFDataObjDesc	      off
	      MATLABFcnDesc	      off
	      MangleLength	      1
	      SharedChecksumLength    8
	      CustomSymbolStrGlobalVar "$R$N$M"
	      CustomSymbolStrType     "$N$R$M_T"
	      CustomSymbolStrField    "$N$M"
	      CustomSymbolStrFcn      "$R$N$M$F"
	      CustomSymbolStrModelFcn "$R$N"
	      CustomSymbolStrFcnArg   "rt$I$N$M"
	      CustomSymbolStrBlkIO    "rtb_$N$M"
	      CustomSymbolStrTmpVar   "$N$M"
	      CustomSymbolStrMacro    "$R$N$M"
	      CustomSymbolStrUtil     "$N$C"
	      CustomSymbolStrEmxType  "emxArray_$M$N"
	      CustomSymbolStrEmxFcn   "emx$M$N"
	      CustomUserTokenString   ""
	      CustomCommentsFcn	      ""
	      DefineNamingRule	      "None"
	      DefineNamingFcn	      ""
	      ParamNamingRule	      "None"
	      ParamNamingFcn	      ""
	      SignalNamingRule	      "None"
	      SignalNamingFcn	      ""
	      InsertBlockDesc	      off
	      InsertPolySpaceComments off
	      SimulinkBlockComments   on
	      BlockCommentType	      "BlockPathComment"
	      StateflowObjectComments off
	      MATLABSourceComments    off
	      EnableCustomComments    off
	      InternalIdentifierFile  ""
	      InternalIdentifier      "Shortened"
	      InlinedPrmAccess	      "Literals"
	      ReqsInCode	      off
	      UseSimReservedNames     off
	      ReservedNameArray	      []
	    }
	    Simulink.GRTTargetCC {
	      $BackupClass	      "Simulink.TargetCC"
	      $ObjectID		      12
	      Version		      "19.0.0"
	      Array {
		Type			"Cell"
		Dimension		16
		Cell			"IncludeMdlTerminateFcn"
		Cell			"SuppressErrorStatus"
		Cell			"ERTCustomFileBanners"
		Cell			"GenerateSampleERTMain"
		Cell			"ExistingSharedCode"
		Cell			"GenerateTestInterfaces"
		Cell			"ModelStepFunctionPrototypeControlCompliant"
		Cell			"GenerateAllocFcn"
		Cell			"PurelyIntegerCode"
		Cell			"SupportComplex"
		Cell			"SupportAbsoluteTime"
		Cell			"SupportContinuousTime"
		Cell			"SupportNonInlinedSFcns"
		Cell			"RemoveDisableFunc"
		Cell			"RemoveResetFunc"
		Cell			"PreserveStateflowLocalDataDimensions"
		PropName		"DisabledProps"
	      }
	      Description	      ""
	      Components	      []
	      TargetFcnLib	      "ansi_tfl_table_tmw.mat"
	      TargetLibSuffix	      ""
	      TargetPreCompLibLocation ""
	      GenFloatMathFcnCalls    "NOT IN USE"
	      TargetLangStandard      "C99 (ISO)"
	      CodeReplacementLibrary  "None"
	      UtilityFuncGeneration   "Auto"
	      MultiwordTypeDef	      "System defined"
	      MultiwordLength	      2048
	      DynamicStringBufferSize 256
	      GenerateFullHeader      on
	      InferredTypesCompatibility off
	      ExistingSharedCode      ""
	      GenerateSampleERTMain   off
	      GenerateTestInterfaces  off
	      ModelReferenceCompliant on
	      ParMdlRefBuildCompliant on
	      CompOptLevelCompliant   on
	      ConcurrentExecutionCompliant on
	      IncludeMdlTerminateFcn  on
	      GeneratePreprocessorConditionals "Use local settings"
	      CombineOutputUpdateFcns on
	      CombineSignalStateStructs	off
	      GroupInternalDataByFunction off
	      SuppressErrorStatus     off
	      IncludeFileDelimiter    "Auto"
	      ERTCustomFileBanners    off
	      SupportAbsoluteTime     on
	      LogVarNameModifier      "rt_"
	      MatFileLogging	      on
	      MultiInstanceERTCode    off
	      CodeInterfacePackaging  "Nonreusable function"
	      PurelyIntegerCode	      off
	      SupportNonFinite	      on
	      SupportComplex	      on
	      SupportContinuousTime   on
	      SupportNonInlinedSFcns  on
	      RemoveDisableFunc	      off
	      RemoveResetFunc	      off
	      SupportVariableSizeSignals off
	      ParenthesesLevel	      "Nominal"
	      CastingMode	      "Nominal"
	      PreserveStateflowLocalDataDimensions off
	      MATLABClassNameForMDSCustomization "Simulink.SoftwareTarget.GRTCustomization"
	      ModelStepFunctionPrototypeControlCompliant off
	      CPPClassGenCompliant    on
	      AutosarCompliant	      off
	      MDXCompliant	      off
	      GRTInterface	      off
	      GenerateAllocFcn	      off
	      UseToolchainInfoCompliant	on
	      GenerateSharedConstants on
	      CoderGroups	      []
	      AccessMethods	      []
	      LookupTableObjectStructAxisOrder "1,2,3,4,..."
	      LUTObjectStructOrderExplicitValues "Size,Breakpoints,Table"
	      LUTObjectStructOrderEvenSpacing "Size,Breakpoints,Table"
	      ArrayLayout	      "Column-major"
	      UnsupportedSFcnMsg      "error"
	      ERTHeaderFileRootName   "$R$E"
	      ERTSourceFileRootName   "$R$E"
	      ERTDataFileRootName     "$R_data"
	      UseMalloc		      off
	      ExtMode		      off
	      ExtModeStaticAlloc      off
	      ExtModeTesting	      off
	      ExtModeStaticAllocSize  1000000
	      ExtModeTransport	      0
	      ExtModeMexFile	      "ext_comm"
	      ExtModeMexArgs	      ""
	      ExtModeIntrfLevel	      "Level1"
	      RTWCAPISignals	      off
	      RTWCAPIParams	      off
	      RTWCAPIStates	      off
	      RTWCAPIRootIO	      off
	      GenerateASAP2	      off
	      MultiInstanceErrorCode  "Error"
	    }
	    PropName		    "Components"
	  }
	}
	SlCovCC.ConfigComp {
	  $ObjectID		  13
	  Version		  "19.0.0"
	  DisabledProps		  []
	  Description		  "Simulink Coverage Configuration Component"
	  Components		  []
	  Name			  "Simulink Coverage"
	  CovEnable		  off
	  CovScope		  "EntireSystem"
	  CovIncludeTopModel	  on
	  RecordCoverage	  off
	  CovPath		  "/"
	  CovSaveName		  "covdata"
	  CovCompData		  ""
	  CovMetricSettings	  "dwe"
	  CovFilter		  ""
	  CovHTMLOptions	  ""
	  CovNameIncrementing	  off
	  CovHtmlReporting	  off
	  CovForceBlockReductionOff on
	  CovEnableCumulative	  on
	  CovSaveCumulativeToWorkspaceVar off
	  CovSaveSingleToWorkspaceVar off
	  CovCumulativeVarName	  "covCumulativeData"
	  CovCumulativeReport	  off
	  CovSaveOutputData	  on
	  CovOutputDir		  "slcov_output/$ModelName$"
	  CovDataFileName	  "$ModelName$_cvdata"
	  CovShowResultsExplorer  on
	  CovReportOnPause	  on
	  CovModelRefEnable	  "off"
	  CovModelRefExcluded	  ""
	  CovExternalEMLEnable	  on
	  CovSFcnEnable		  on
	  CovBoundaryAbsTol	  1e-05
	  CovBoundaryRelTol	  0.01
	  CovUseTimeInterval	  off
	  CovStartTime		  0
	  CovStopTime		  0
	  CovMcdcMode		  "Masking"
	}
	hdlcoderui.hdlcc {
	  $ObjectID		  14
	  Version		  "19.0.0"
	  DisabledProps		  []
	  Description		  "HDL Coder custom configuration component"
	  Components		  []
	  Name			  "HDL Coder"
	  Array {
	    Type		    "Cell"
	    Dimension		    1
	    Cell		    " "
	    PropName		    "HDLConfigFile"
	  }
	  HDLCActiveTab		  "0"
	}
	PropName		"Components"
      }
      Name		      "Configuration"
      CurrentDlgPage	      "Solver"
      ConfigPrmDlgPosition    [ 0, 0, 0, 0 ]
      ExtraOptions	      ""
    }
    PropName		    "ConfigurationSets"
  }
  ExplicitPartitioning	  off
  BlockDefaults {
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
    HideAutomaticName	    on
    BlockRotation	    0
    BlockMirror		    off
  }
  AnnotationDefaults {
    HorizontalAlignment	    "left"
    VerticalAlignment	    "top"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    MarkupType		    "model"
    UseDisplayTextAsClickCallback off
    AnnotationType	    "note_annotation"
    FixedHeight		    off
    FixedWidth		    off
    Interpreter		    "off"
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  MaskDefaults {
    SelfModifiable	    "off"
    IconFrame		    "on"
    IconOpaque		    "opaque"
    RunInitForIconRedraw    "analyze"
    IconRotate		    "none"
    PortRotate		    "default"
    IconUnits		    "autoscale"
  }
  MaskParameterDefaults {
    Evaluate		    "on"
    Tunable		    "on"
    NeverSave		    "off"
    Internal		    "off"
    ReadOnly		    "off"
    Enabled		    "on"
    Visible		    "on"
    ToolTip		    "on"
  }
  BlockParameterDefaults {
    Block {
      BlockType		      Ground
    }
    Block {
      BlockType		      Inport
      Port		      "1"
      OutputFunctionCall      off
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: auto"
      LockScale		      off
      BusOutputAsStruct	      off
      Unit		      "inherit"
      PortDimensions	      "-1"
      VarSizeSig	      "Inherit"
      SampleTime	      "-1"
      SignalType	      "auto"
      SamplingMode	      "auto"
      LatchByDelayingOutsideSignal off
      LatchInputForFeedbackSignals off
      Interpolate	      on
    }
    Block {
      BlockType		      Outport
      Port		      "1"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: auto"
      LockScale		      off
      BusOutputAsStruct	      off
      Unit		      "inherit"
      PortDimensions	      "-1"
      VarSizeSig	      "Inherit"
      SampleTime	      "-1"
      SignalType	      "auto"
      SamplingMode	      "auto"
      EnsureOutportIsVirtual  off
      SourceOfInitialOutputValue "Dialog"
      OutputWhenDisabled      "held"
      InitialOutput	      "[]"
      MustResolveToSignalObject	off
      OutputWhenUnConnected   off
      OutputWhenUnconnectedValue "0"
      VectorParamsAs1DForOutWhenUnconnected off
    }
    Block {
      BlockType		      ResetPort
      ResetTriggerType	      "rising"
      PropagateVarSize	      "Only when resetting"
      ZeroCross		      on
    }
    Block {
      BlockType		      S-Function
      FunctionName	      "system"
      SFunctionModules	      "''"
      PortCounts	      "[]"
      MultiThreadCoSim	      "auto"
    }
    Block {
      BlockType		      SubSystem
      ShowPortLabels	      "FromPortIcon"
      Permissions	      "ReadWrite"
      PermitHierarchicalResolution "All"
      TreatAsAtomicUnit	      off
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      ScheduleAs	      "Sample time"
      SystemSampleTime	      "-1"
      RTWSystemCode	      "Auto"
      RTWFcnNameOpts	      "Auto"
      RTWFileNameOpts	      "Auto"
      FunctionInterfaceSpec   "void_void"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      SimViewingDevice	      off
      DataTypeOverride	      "UseLocalSettings"
      DataTypeOverrideAppliesTo	"AllNumericTypes"
      MinMaxOverflowLogging   "UseLocalSettings"
      Opaque		      off
      MaskHideContents	      off
      SFBlockType	      "NONE"
      VariantControlMode      "Expression"
      Variant		      off
      GeneratePreprocessorConditionals off
      AllowZeroVariantControls off
      PropagateVariantConditions off
      TreatAsGroupedWhenPropagatingVariantConditions on
      ContentPreviewEnabled   off
      IsWebBlock	      off
      IsObserver	      off
      Latency		      "0"
      AutoFrameSizeCalculation off
      IsWebBlockPanel	      off
    }
    Block {
      BlockType		      Terminator
    }
  }
  System {
    Name		    "ammclib_bam"
    Location		    [100, 100, 900, 600]
    Open		    off
    PortBlocksUseCompactNotation off
    SetExecutionDomain	    off
    ExecutionDomainType	    "Deduce"
    ModelBrowserVisibility  off
    ModelBrowserWidth	    200
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "usletter"
    PaperUnits		    "inches"
    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
    TiledPageScale	    1
    ShowPageBoundaries	    off
    ZoomFactor		    "100"
    ReportName		    "simulink-default.rpt"
    SIDHighWatermark	    "1175"
    SimulinkSubDomain	    "Simulink"
    Block {
      BlockType		      SubSystem
      Name		      "AMCLIB"
      SID		      "1"
      Ports		      []
      Position		      [0, 0, 100, 100]
      ZOrder		      1
      RequestExecContextInheritance off
      System {
	Name			"AMCLIB"
	Location		[100, 100, 900, 600]
	Open			off
	PortBlocksUseCompactNotation off
	SetExecutionDomain	off
	ExecutionDomainType	"Deduce"
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	SimulinkSubDomain	"Simulink"
	Block {
	  BlockType		  SubSystem
	  Name			  "F16"
	  SID			  "2"
	  Ports			  []
	  Position		  [0, 0, 100, 100]
	  ZOrder		  1
	  RequestExecContextInheritance	off
	  System {
	    Name		    "F16"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_BemfObsrvDQ_F16"
	      SID		      "3"
	      Ports		      [4, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 2, 260, 128]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		15
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_BemfObsrvDQ_F16"
		Description		"PMSM back-EMF observer DQ in 16-bit fixed-point fractional implementation. This block supports re-init"
		"ialization of the internal state during simulation. If the block is reset, the observer will align with the motor's "
		"position and speed measured in the next time step. This allows seamless on-the-fly transition to the closed-loop con"
		"trol. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16IGain'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16IGain'], 'Position');\n        orient = get_param( [gc"
		"b, '/f16IGain'], 'Orientation');\n        delete_block(       [gcb, '/f16IGain']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/f16IGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16UGain'],"
		" 'Position');\n        orient = get_param( [gcb, '/f16UGain'], 'Orientation');\n        delete_block(       [gcb, '/"
		"f16UGain']);\n        add_block('built-in/Ground', [gcb, '/f16UGain'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/f16WIGain'], 'Position');\n        orient = get_param( [gcb, '/f16WIGain'], 'Orie"
		"ntation');\n        delete_block(       [gcb, '/f16WIGain']);\n        add_block('built-in/Ground', [gcb, '/f16WIGai"
		"n'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16EGain'], 'Position');\n     "
		"   orient = get_param( [gcb, '/f16EGain'], 'Orientation');\n        delete_block(       [gcb, '/f16EGain']);\n      "
		"  add_block('built-in/Ground', [gcb, '/f16EGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_par"
		"am(    [gcb, '/s16Shift'], 'Position');\n        orient = get_param( [gcb, '/s16Shift'], 'Orientation');\n        de"
		"lete_block(       [gcb, '/s16Shift']);\n        add_block('built-in/Ground', [gcb, '/s16Shift'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb, '/f16CC1sc_D'], 'Position');\n        orient = get_param("
		" [gcb, '/f16CC1sc_D'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc_D']);\n        add_block('built"
		"-in/Ground', [gcb, '/f16CC1sc_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f"
		"16CC2sc_D'], 'Position');\n        orient = get_param( [gcb, '/f16CC2sc_D'], 'Orientation');\n        delete_block( "
		"      [gcb, '/f16CC2sc_D']);\n        add_block('built-in/Ground', [gcb, '/f16CC2sc_D'], 'Position', pos, 'Orientati"
		"on', orient);\n\n        pos = get_param(    [gcb, '/f16UpperLimit_D'], 'Position');\n        orient = get_param( [g"
		"cb, '/f16UpperLimit_D'], 'Orientation');\n        delete_block(       [gcb, '/f16UpperLimit_D']);\n        add_block"
		"('built-in/Ground', [gcb, '/f16UpperLimit_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param( "
		"   [gcb, '/f16LowerLimit_D'], 'Position');\n        orient = get_param( [gcb, '/f16LowerLimit_D'], 'Orientation');\n"
		"        delete_block(       [gcb, '/f16LowerLimit_D']);\n        add_block('built-in/Ground', [gcb, '/f16LowerLimit_"
		"D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16CC1sc_Q'], 'Position');\n   "
		"     orient = get_param( [gcb, '/f16CC1sc_Q'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc_Q']);\n"
		"        add_block('built-in/Ground', [gcb, '/f16CC1sc_Q'], 'Position', pos, 'Orientation', orient);\n\n        pos ="
		" get_param(    [gcb, '/f16CC2sc_Q'], 'Position');\n        orient = get_param( [gcb, '/f16CC2sc_Q'], 'Orientation');"
		"\n        delete_block(       [gcb, '/f16CC2sc_Q']);\n        add_block('built-in/Ground', [gcb, '/f16CC2sc_Q'], 'Po"
		"sition', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16UpperLimit_Q'], 'Position');\n      "
		"  orient = get_param( [gcb, '/f16UpperLimit_Q'], 'Orientation');\n        delete_block(       [gcb, '/f16UpperLimit_"
		"Q']);\n        add_block('built-in/Ground', [gcb, '/f16UpperLimit_Q'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/f16LowerLimit_Q'], 'Position');\n        orient = get_param( [gcb, '/f16LowerLimi"
		"t_Q'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimit_Q']);\n        add_block('built-in/Ground'"
		", [gcb, '/f16LowerLimit_Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/u16NShi"
		"ft'], 'Position');\n        orient = get_param( [gcb, '/u16NShift'], 'Orientation');\n        delete_block(       [g"
		"cb, '/u16NShift']);\n        add_block('built-in/Ground', [gcb, '/u16NShift'], 'Position', pos, 'Orientation', orien"
		"t);\n\n        pos = get_param(    [gcb, '/f32Acc_D'], 'Position');\n        orient = get_param( [gcb, '/f32Acc_D'],"
		" 'Orientation');\n        delete_block(       [gcb, '/f32Acc_D']);\n        add_block('built-in/Ground', [gcb, '/f32"
		"Acc_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16InErrK1_D'], 'Position')"
		";\n        orient = get_param( [gcb, '/f16InErrK1_D'], 'Orientation');\n        delete_block(       [gcb, '/f16InErr"
		"K1_D']);\n        add_block('built-in/Ground', [gcb, '/f16InErrK1_D'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/f32Acc_Q'], 'Position');\n        orient = get_param( [gcb, '/f32Acc_Q'], 'Orient"
		"ation');\n        delete_block(       [gcb, '/f32Acc_Q']);\n        add_block('built-in/Ground', [gcb, '/f32Acc_Q'],"
		" 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16InErrK1_Q'], 'Position');\n     "
		"   orient = get_param( [gcb, '/f16InErrK1_Q'], 'Orientation');\n        delete_block(       [gcb, '/f16InErrK1_Q']);"
		"\n        add_block('built-in/Ground', [gcb, '/f16InErrK1_Q'], 'Position', pos, 'Orientation', orient);\n\n        p"
		"os = get_param(    [gcb, '/f32IObsrvIn_1L_D'], 'Position');\n        orient = get_param( [gcb, '/f32IObsrvIn_1L_D'],"
		" 'Orientation');\n        delete_block(       [gcb, '/f32IObsrvIn_1L_D']);\n        add_block('built-in/Ground', [gc"
		"b, '/f32IObsrvIn_1L_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16IObsrvIn"
		"_1H_D'], 'Position');\n        orient = get_param( [gcb, '/f16IObsrvIn_1H_D'], 'Orientation');\n        delete_block"
		"(       [gcb, '/f16IObsrvIn_1H_D']);\n        add_block('built-in/Ground', [gcb, '/f16IObsrvIn_1H_D'], 'Position', p"
		"os, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IObsrvIn_1L_Q'], 'Position');\n        orient "
		"= get_param( [gcb, '/f32IObsrvIn_1L_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32IObsrvIn_1L_Q']);\n"
		"        add_block('built-in/Ground', [gcb, '/f32IObsrvIn_1L_Q'], 'Position', pos, 'Orientation', orient);\n\n       "
		" pos = get_param(    [gcb, '/f16IObsrvIn_1H_Q'], 'Position');\n        orient = get_param( [gcb, '/f16IObsrvIn_1H_Q'"
		"], 'Orientation');\n        delete_block(       [gcb, '/f16IObsrvIn_1H_Q']);\n        add_block('built-in/Ground', ["
		"gcb, '/f16IObsrvIn_1H_Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IObsrv"
		"_D'], 'Position');\n        orient = get_param( [gcb, '/f32IObsrv_D'], 'Orientation');\n        delete_block(       "
		"[gcb, '/f32IObsrv_D']);\n        add_block('built-in/Ground', [gcb, '/f32IObsrv_D'], 'Position', pos, 'Orientation',"
		" orient);\n\n        pos = get_param(    [gcb, '/f32IObsrv_Q'], 'Position');\n        orient = get_param( [gcb, '/f3"
		"2IObsrv_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32IObsrv_Q']);\n        add_block('built-in/Groun"
		"d', [gcb, '/f32IObsrv_Q'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f16EObsr"
		"v_D_Out'], 'Position');\n        orient = get_param( [gcb '/f16EObsrv_D_Out'], 'Orientation');\n        delete_block"
		"(       [gcb '/f16EObsrv_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f16EObsrv_D_Out'], 'Position', p"
		"os, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16EObsrv_Q_Out'], 'Position');\n        orient = "
		"get_param( [gcb '/f16EObsrv_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f16EObsrv_Q_Out']);\n      "
		"  add_block('built-in/Terminator', [gcb '/f16EObsrv_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos"
		" = get_param(    [gcb '/f32Acc_D_Out'], 'Position');\n        orient = get_param( [gcb '/f32Acc_D_Out'], 'Orientatio"
		"n');\n        delete_block(       [gcb '/f32Acc_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f32Acc_D_"
		"Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InErrK1_D_Out'], 'Position'"
		");\n        orient = get_param( [gcb '/f16InErrK1_D_Out'], 'Orientation');\n        delete_block(       [gcb '/f16In"
		"ErrK1_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f16InErrK1_D_Out'], 'Position', pos, 'Orientation',"
		" orient);\n\n        pos = get_param(    [gcb '/f32Acc_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32"
		"Acc_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Q_Out']);\n        add_block('built-in/Termi"
		"nator', [gcb '/f32Acc_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InE"
		"rrK1_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f16InErrK1_Q_Out'], 'Orientation');\n        delete_b"
		"lock(       [gcb '/f16InErrK1_Q_Out']);\n        add_block('built-in/Terminator', [gcb '/f16InErrK1_Q_Out'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IObsrvIn_1L_D_Out'], 'Position');\n      "
		"  orient = get_param( [gcb '/f32IObsrvIn_1L_D_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IObsrvIn"
		"_1L_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f32IObsrvIn_1L_D_Out'], 'Position', pos, 'Orientation"
		"', orient);\n\n        pos = get_param(    [gcb '/f16IObsrvIn_1H_D_Out'], 'Position');\n        orient = get_param( "
		"[gcb '/f16IObsrvIn_1H_D_Out'], 'Orientation');\n        delete_block(       [gcb '/f16IObsrvIn_1H_D_Out']);\n       "
		" add_block('built-in/Terminator', [gcb '/f16IObsrvIn_1H_D_Out'], 'Position', pos, 'Orientation', orient);\n\n       "
		" pos = get_param(    [gcb '/f32IObsrvIn_1L_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32IObsrvIn_1L_"
		"Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IObsrvIn_1L_Q_Out']);\n        add_block('built-in/T"
		"erminator', [gcb '/f32IObsrvIn_1L_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    ["
		"gcb '/f16IObsrvIn_1H_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f16IObsrvIn_1H_Q_Out'], 'Orientation'"
		");\n        delete_block(       [gcb '/f16IObsrvIn_1H_Q_Out']);\n        add_block('built-in/Terminator', [gcb '/f16"
		"IObsrvIn_1H_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IObsrv_D_Out'"
		"], 'Position');\n        orient = get_param( [gcb '/f32IObsrv_D_Out'], 'Orientation');\n        delete_block(       "
		"[gcb '/f32IObsrv_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f32IObsrv_D_Out'], 'Position', pos, 'Ori"
		"entation', orient);\n\n        pos = get_param(    [gcb '/f32IObsrv_Q_Out'], 'Position');\n        orient = get_para"
		"m( [gcb '/f32IObsrv_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IObsrv_Q_Out']);\n        add_bl"
		"ock('built-in/Terminator', [gcb '/f32IObsrv_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param"
		"([gcb '/pIAB'], 'Port', '1');\n        set_param([gcb '/pUAB'], 'Port', '2');\n        set_param([gcb '/f16Velocity'"
		"], 'Port', '3');\n        set_param([gcb '/f16Phase'], 'Port', '4');\n\n        set_param([gcb '/f16PhaseErr'], 'Por"
		"t', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on','on','on','on','on','on','"
		"on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 125\n          height = 125;\n          set_param(gcb,'Posi"
		"tion',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n"
		"    if strcmp(get_param([gcb '/f16IGain'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n"
		"        pos = get_param(    [gcb, '/f16IGain'], 'Position');\n        orient = get_param( [gcb, '/f16IGain'], 'Orien"
		"tation');\n        delete_block(       [gcb, '/f16IGain']);\n        add_block('built-in/Inport', [gcb, '/f16IGain']"
		", 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16UGai"
		"n'], 'Position');\n        orient = get_param( [gcb, '/f16UGain'], 'Orientation');\n        delete_block(       [gcb"
		", '/f16UGain']);\n        add_block('built-in/Inport', [gcb, '/f16UGain'], 'Position', pos, 'Orientation', orient, '"
		"OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16WIGain'], 'Position');\n        orient = get_pa"
		"ram( [gcb, '/f16WIGain'], 'Orientation');\n        delete_block(       [gcb, '/f16WIGain']);\n        add_block('bui"
		"lt-in/Inport', [gcb, '/f16WIGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        p"
		"os = get_param(    [gcb, '/f16EGain'], 'Position');\n        orient = get_param( [gcb, '/f16EGain'], 'Orientation');"
		"\n        delete_block(       [gcb, '/f16EGain']);\n        add_block('built-in/Inport', [gcb, '/f16EGain'], 'Positi"
		"on', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/s16Shift'], 'Pos"
		"ition');\n        orient = get_param( [gcb, '/s16Shift'], 'Orientation');\n        delete_block(       [gcb, '/s16Sh"
		"ift']);\n        add_block('built-in/Inport', [gcb, '/s16Shift'], 'Position', pos, 'Orientation', orient, 'OutDataTy"
		"peStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16CC1sc_D'], 'Position');\n        orient = get_param( [gc"
		"b, '/f16CC1sc_D'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc_D']);\n        add_block('built-in/"
		"Inport', [gcb, '/f16CC1sc_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = "
		"get_param(    [gcb, '/f16CC2sc_D'], 'Position');\n        orient = get_param( [gcb, '/f16CC2sc_D'], 'Orientation');\n"
		"        delete_block(       [gcb, '/f16CC2sc_D']);\n        add_block('built-in/Inport', [gcb, '/f16CC2sc_D'], 'Posi"
		"tion', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16UpperLimit_"
		"D'], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimit_D'], 'Orientation');\n        delete_block(    "
		"   [gcb, '/f16UpperLimit_D']);\n        add_block('built-in/Inport', [gcb, '/f16UpperLimit_D'], 'Position', pos, 'Or"
		"ientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16LowerLimit_D'], 'Position'"
		");\n        orient = get_param( [gcb, '/f16LowerLimit_D'], 'Orientation');\n        delete_block(       [gcb, '/f16L"
		"owerLimit_D']);\n        add_block('built-in/Inport', [gcb, '/f16LowerLimit_D'], 'Position', pos, 'Orientation', ori"
		"ent, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16CC1sc_Q'], 'Position');\n        orient ="
		" get_param( [gcb, '/f16CC1sc_Q'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc_Q']);\n        add_b"
		"lock('built-in/Inport', [gcb, '/f16CC1sc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n"
		"        pos = get_param(    [gcb, '/f16CC2sc_Q'], 'Position');\n        orient = get_param( [gcb, '/f16CC2sc_Q'], 'O"
		"rientation');\n        delete_block(       [gcb, '/f16CC2sc_Q']);\n        add_block('built-in/Inport', [gcb, '/f16C"
		"C2sc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '"
		"/f16UpperLimit_Q'], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimit_Q'], 'Orientation');\n        de"
		"lete_block(       [gcb, '/f16UpperLimit_Q']);\n        add_block('built-in/Inport', [gcb, '/f16UpperLimit_Q'], 'Posi"
		"tion', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16LowerLimit_"
		"Q'], 'Position');\n        orient = get_param( [gcb, '/f16LowerLimit_Q'], 'Orientation');\n        delete_block(    "
		"   [gcb, '/f16LowerLimit_Q']);\n        add_block('built-in/Inport', [gcb, '/f16LowerLimit_Q'], 'Position', pos, 'Or"
		"ientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/u16NShift'], 'Position');\n  "
		"      orient = get_param( [gcb, '/u16NShift'], 'Orientation');\n        delete_block(       [gcb, '/u16NShift']);\n "
		"       add_block('built-in/Inport', [gcb, '/u16NShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', '"
		"uint16');\n\n        pos = get_param(    [gcb, '/f32Acc_D'], 'Position');\n        orient = get_param( [gcb, '/f32Ac"
		"c_D'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc_D']);\n        add_block('built-in/Inport', [gcb,"
		" '/f32Acc_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [g"
		"cb, '/f16InErrK1_D'], 'Position');\n        orient = get_param( [gcb, '/f16InErrK1_D'], 'Orientation');\n        del"
		"ete_block(       [gcb, '/f16InErrK1_D']);\n        add_block('built-in/Inport', [gcb, '/f16InErrK1_D'], 'Position', "
		"pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32Acc_Q'], 'Position"
		"');\n        orient = get_param( [gcb, '/f32Acc_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc_Q']"
		");\n        add_block('built-in/Inport', [gcb, '/f32Acc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr"
		"', 'int32');\n\n        pos = get_param(    [gcb, '/f16InErrK1_Q'], 'Position');\n        orient = get_param( [gcb, "
		"'/f16InErrK1_Q'], 'Orientation');\n        delete_block(       [gcb, '/f16InErrK1_Q']);\n        add_block('built-in"
		"/Inport', [gcb, '/f16InErrK1_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos"
		" = get_param(    [gcb, '/f32IObsrvIn_1L_D'], 'Position');\n        orient = get_param( [gcb, '/f32IObsrvIn_1L_D'], '"
		"Orientation');\n        delete_block(       [gcb, '/f32IObsrvIn_1L_D']);\n        add_block('built-in/Inport', [gcb,"
		" '/f32IObsrvIn_1L_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_para"
		"m(    [gcb, '/f16IObsrvIn_1H_D'], 'Position');\n        orient = get_param( [gcb, '/f16IObsrvIn_1H_D'], 'Orientation"
		"');\n        delete_block(       [gcb, '/f16IObsrvIn_1H_D']);\n        add_block('built-in/Inport', [gcb, '/f16IObsr"
		"vIn_1H_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb,"
		" '/f32IObsrvIn_1L_Q'], 'Position');\n        orient = get_param( [gcb, '/f32IObsrvIn_1L_Q'], 'Orientation');\n      "
		"  delete_block(       [gcb, '/f32IObsrvIn_1L_Q']);\n        add_block('built-in/Inport', [gcb, '/f32IObsrvIn_1L_Q'],"
		" 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16IObsr"
		"vIn_1H_Q'], 'Position');\n        orient = get_param( [gcb, '/f16IObsrvIn_1H_Q'], 'Orientation');\n        delete_bl"
		"ock(       [gcb, '/f16IObsrvIn_1H_Q']);\n        add_block('built-in/Inport', [gcb, '/f16IObsrvIn_1H_Q'], 'Position'"
		", pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32IObsrv_D'], 'Pos"
		"ition');\n        orient = get_param( [gcb, '/f32IObsrv_D'], 'Orientation');\n        delete_block(       [gcb, '/f3"
		"2IObsrv_D']);\n        add_block('built-in/Inport', [gcb, '/f32IObsrv_D'], 'Position', pos, 'Orientation', orient, '"
		"OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IObsrv_Q'], 'Position');\n        orient = get_"
		"param( [gcb, '/f32IObsrv_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32IObsrv_Q']);\n        add_bloc"
		"k('built-in/Inport', [gcb, '/f32IObsrv_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n"
		"        pos = get_param(    [gcb '/f16EObsrv_D_Out'], 'Position');\n        orient = get_param( [gcb '/f16EObsrv_D_O"
		"ut'], 'Orientation');\n        delete_block(       [gcb '/f16EObsrv_D_Out']);\n        add_block('built-in/Outport',"
		" [gcb '/f16EObsrv_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16EObsrv_"
		"Q_Out'], 'Position');\n        orient = get_param( [gcb '/f16EObsrv_Q_Out'], 'Orientation');\n        delete_block( "
		"      [gcb '/f16EObsrv_Q_Out']);\n        add_block('built-in/Outport', [gcb '/f16EObsrv_Q_Out'], 'Position', pos, '"
		"Orientation', orient);\n\n        pos = get_param(    [gcb '/f32Acc_D_Out'], 'Position');\n        orient = get_para"
		"m( [gcb '/f32Acc_D_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_D_Out']);\n        add_block('b"
		"uilt-in/Outport', [gcb '/f32Acc_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gc"
		"b '/f16InErrK1_D_Out'], 'Position');\n        orient = get_param( [gcb '/f16InErrK1_D_Out'], 'Orientation');\n      "
		"  delete_block(       [gcb '/f16InErrK1_D_Out']);\n        add_block('built-in/Outport', [gcb '/f16InErrK1_D_Out'], "
		"'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32Acc_Q_Out'], 'Position');\n       "
		" orient = get_param( [gcb '/f32Acc_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Q_Out']);\n  "
		"      add_block('built-in/Outport', [gcb '/f32Acc_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos ="
		" get_param(    [gcb '/f16InErrK1_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f16InErrK1_Q_Out'], 'Orie"
		"ntation');\n        delete_block(       [gcb '/f16InErrK1_Q_Out']);\n        add_block('built-in/Outport', [gcb '/f1"
		"6InErrK1_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IObsrvIn_1L_D_Ou"
		"t'], 'Position');\n        orient = get_param( [gcb '/f32IObsrvIn_1L_D_Out'], 'Orientation');\n        delete_block("
		"       [gcb '/f32IObsrvIn_1L_D_Out']);\n        add_block('built-in/Outport', [gcb '/f32IObsrvIn_1L_D_Out'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16IObsrvIn_1H_D_Out'], 'Position');\n      "
		"  orient = get_param( [gcb '/f16IObsrvIn_1H_D_Out'], 'Orientation');\n        delete_block(       [gcb '/f16IObsrvIn"
		"_1H_D_Out']);\n        add_block('built-in/Outport', [gcb '/f16IObsrvIn_1H_D_Out'], 'Position', pos, 'Orientation', "
		"orient);\n\n        pos = get_param(    [gcb '/f32IObsrvIn_1L_Q_Out'], 'Position');\n        orient = get_param( [gc"
		"b '/f32IObsrvIn_1L_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IObsrvIn_1L_Q_Out']);\n        ad"
		"d_block('built-in/Outport', [gcb '/f32IObsrvIn_1L_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos ="
		" get_param(    [gcb '/f16IObsrvIn_1H_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f16IObsrvIn_1H_Q_Out'"
		"], 'Orientation');\n        delete_block(       [gcb '/f16IObsrvIn_1H_Q_Out']);\n        add_block('built-in/Outport"
		"', [gcb '/f16IObsrvIn_1H_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32"
		"IObsrv_D_Out'], 'Position');\n        orient = get_param( [gcb '/f32IObsrv_D_Out'], 'Orientation');\n        delete_"
		"block(       [gcb '/f32IObsrv_D_Out']);\n        add_block('built-in/Outport', [gcb '/f32IObsrv_D_Out'], 'Position',"
		" pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IObsrv_Q_Out'], 'Position');\n        orient "
		"= get_param( [gcb '/f32IObsrv_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IObsrv_Q_Out']);\n    "
		"    add_block('built-in/Outport', [gcb '/f32IObsrv_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        se"
		"t_param([gcb '/pIAB'], 'Port', '1');\n        set_param([gcb '/pUAB'], 'Port', '2');\n        set_param([gcb '/f16Ve"
		"locity'], 'Port', '3');\n        set_param([gcb '/f16Phase'], 'Port', '4');\n        set_param([gcb '/f16IGain'], 'P"
		"ort', '5');\n        set_param([gcb '/f16UGain'], 'Port', '6');\n        set_param([gcb '/f16WIGain'], 'Port', '7');"
		"\n        set_param([gcb '/f16EGain'], 'Port', '8');\n        set_param([gcb '/s16Shift'], 'Port', '9');\n        se"
		"t_param([gcb '/f16CC1sc_D'], 'Port', '10');\n        set_param([gcb '/f16CC2sc_D'], 'Port', '11');\n        set_para"
		"m([gcb '/f16UpperLimit_D'], 'Port', '12');\n        set_param([gcb '/f16LowerLimit_D'], 'Port', '13');\n        set_"
		"param([gcb '/f16CC1sc_Q'], 'Port', '14');\n        set_param([gcb '/f16CC2sc_Q'], 'Port', '15');\n        set_param("
		"[gcb '/f16UpperLimit_Q'], 'Port', '16');\n        set_param([gcb '/f16LowerLimit_Q'], 'Port', '17');\n        set_pa"
		"ram([gcb '/u16NShift'], 'Port', '18');\n        set_param([gcb '/f32Acc_D'], 'Port', '19');\n        set_param([gcb "
		"'/f16InErrK1_D'], 'Port', '20');\n        set_param([gcb '/f32Acc_Q'], 'Port', '21');\n        set_param([gcb '/f16I"
		"nErrK1_Q'], 'Port', '22');\n        set_param([gcb '/f32IObsrvIn_1L_D'], 'Port', '23');\n        set_param([gcb '/f1"
		"6IObsrvIn_1H_D'], 'Port', '24');\n        set_param([gcb '/f32IObsrvIn_1L_Q'], 'Port', '25');\n        set_param([gc"
		"b '/f16IObsrvIn_1H_Q'], 'Port', '26');\n        set_param([gcb '/f32IObsrv_D'], 'Port', '27');\n        set_param([g"
		"cb '/f32IObsrv_Q'], 'Port', '28');\n\n        set_param([gcb '/f16PhaseErr'], 'Port', '1');\n        set_param([gcb "
		"'/f16EObsrv_D_Out'], 'Port', '2');\n        set_param([gcb '/f16EObsrv_Q_Out'], 'Port', '3');\n        set_param([gc"
		"b '/f32Acc_D_Out'], 'Port', '4');\n        set_param([gcb '/f16InErrK1_D_Out'], 'Port', '5');\n        set_param([gc"
		"b '/f32Acc_Q_Out'], 'Port', '6');\n        set_param([gcb '/f16InErrK1_Q_Out'], 'Port', '7');\n        set_param([gc"
		"b '/f32IObsrvIn_1L_D_Out'], 'Port', '8');\n        set_param([gcb '/f16IObsrvIn_1H_D_Out'], 'Port', '9');\n        s"
		"et_param([gcb '/f32IObsrvIn_1L_Q_Out'], 'Port', '10');\n        set_param([gcb '/f16IObsrvIn_1H_Q_Out'], 'Port', '11"
		"');\n        set_param([gcb '/f32IObsrv_D_Out'], 'Port', '12');\n        set_param([gcb '/f32IObsrv_Q_Out'], 'Port',"
		" '13');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off','off','off','off','off','off','off"
		"','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 725\n          height = 725;\n          set_par"
		"am(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_BemfObsrvDQ_F16', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  16
		  Object {
		    $ObjectID		    16
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on','on','on','on','on','on','on','on','on'});\nelse\n"
		    "    set_param(gcb,'MaskEnables',{'on','on','off','off','off','off','off','off','off','off','off','off','off','of"
		    "f','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    17
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    18
		    Type		    "edit"
		    Name		    "f16IGain"
		    Prompt		    "f16IGain (Scaled RL circuit constant)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    19
		    Type		    "edit"
		    Name		    "f16UGain"
		    Prompt		    "f16UGain (Scaled voltage cross-coupling constant)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    20
		    Type		    "edit"
		    Name		    "f16WIGain"
		    Prompt		    "f16WIGain (Scaled angular velocity cross-coupling constant)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    21
		    Type		    "edit"
		    Name		    "f16EGain"
		    Prompt		    "f16EGain (Scaled back-EMF cross-coupling constant)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    22
		    Type		    "edit"
		    Name		    "s16Shift"
		    Prompt		    "s16Shift (Scaling bitwise shift applied to all cross-coupling constants)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    23
		    Type		    "edit"
		    Name		    "f16CC1sc_D"
		    Prompt		    "f16CC1sc_D (CC1 coefficient of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    24
		    Type		    "edit"
		    Name		    "f16CC2sc_D"
		    Prompt		    "f16CC2sc_D (CC2 coefficient of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    25
		    Type		    "edit"
		    Name		    "f16UpperLimit_D"
		    Prompt		    "f16UpperLimit_D (Upper Limit of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    26
		    Type		    "edit"
		    Name		    "f16LowerLimit_D"
		    Prompt		    "f16LowerLimit_D (Lower Limit of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    27
		    Type		    "edit"
		    Name		    "f16CC1sc_Q"
		    Prompt		    "f16CC1sc_Q (CC1 coefficient of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    28
		    Type		    "edit"
		    Name		    "f16CC2sc_Q"
		    Prompt		    "f16CC2sc_Q (CC2 coefficient of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    29
		    Type		    "edit"
		    Name		    "f16UpperLimit_Q"
		    Prompt		    "f16UpperLimit_Q (Upper Limit of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    30
		    Type		    "edit"
		    Name		    "f16LowerLimit_Q"
		    Prompt		    "f16LowerLimit_Q (Lower Limit of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    31
		    Type		    "edit"
		    Name		    "u16NShift"
		    Prompt		    "u16NShift (Scaling bitwise shift applied to the controller coefficients)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_BemfObsrvDQ_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"88"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIAB"
		  SID			  "3:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pUAB"
		  SID			  "3:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16Velocity"
		  SID			  "3:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16Phase"
		  SID			  "3:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "3:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_BemfObsrvDQ_SF"
		  SID			  "3:5"
		  Ports			  [28, 13]
		  Position		  [135, 140, 285, 275]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_BemfObsrvDQ_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,f16IGain,f16UGain,f16WIGain,f16EGain,s16Shift,f16CC1sc_D,f16CC2sc_D,f1"
		  "6UpperLimit_D,f16LowerLimit_D,f16CC1sc_Q,f16CC2sc_Q,f16UpperLimit_Q,f16LowerLimit_Q,u16NShift"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "3:47"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  49
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    32
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "3:50"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  50
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    33
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_BemfObsrvDQ_BAM_F16.mdl');text(10,75,'PMSM back-EMF observer DQ.');text(10,60,'"
		    "NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC1sc_D"
		  SID			  "3:58"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  56
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC1sc_Q"
		  SID			  "3:62"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  60
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC2sc_D"
		  SID			  "3:59"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  57
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC2sc_Q"
		  SID			  "3:63"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  61
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16EGain"
		  SID			  "3:56"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  54
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16EObsrv_D_Out"
		  SID			  "3:77"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  75
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16EObsrv_Q_Out"
		  SID			  "3:78"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  76
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IGain"
		  SID			  "3:53"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  51
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IObsrvIn_1H_D"
		  SID			  "3:72"
		  Position		  [40, 1118, 70, 1132]
		  ZOrder		  70
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16IObsrvIn_1H_D_Out"
		  SID			  "3:84"
		  Position		  [340, 518, 370, 532]
		  ZOrder		  82
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IObsrvIn_1H_Q"
		  SID			  "3:74"
		  Position		  [40, 1198, 70, 1212]
		  ZOrder		  72
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16IObsrvIn_1H_Q_Out"
		  SID			  "3:86"
		  Position		  [340, 598, 370, 612]
		  ZOrder		  84
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InErrK1_D"
		  SID			  "3:68"
		  Position		  [40, 958, 70, 972]
		  ZOrder		  66
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InErrK1_D_Out"
		  SID			  "3:80"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  78
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InErrK1_Q"
		  SID			  "3:70"
		  Position		  [40, 1038, 70, 1052]
		  ZOrder		  68
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InErrK1_Q_Out"
		  SID			  "3:82"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  80
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimit_D"
		  SID			  "3:61"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  59
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimit_Q"
		  SID			  "3:65"
		  Position		  [40, 838, 70, 852]
		  ZOrder		  63
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UGain"
		  SID			  "3:54"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  52
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimit_D"
		  SID			  "3:60"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  58
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimit_Q"
		  SID			  "3:64"
		  Position		  [40, 798, 70, 812]
		  ZOrder		  62
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16WIGain"
		  SID			  "3:55"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  53
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc_D"
		  SID			  "3:67"
		  Position		  [40, 918, 70, 932]
		  ZOrder		  65
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_D_Out"
		  SID			  "3:79"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  77
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc_Q"
		  SID			  "3:69"
		  Position		  [40, 998, 70, 1012]
		  ZOrder		  67
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Q_Out"
		  SID			  "3:81"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  79
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IObsrvIn_1L_D"
		  SID			  "3:71"
		  Position		  [40, 1078, 70, 1092]
		  ZOrder		  69
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IObsrvIn_1L_D_Out"
		  SID			  "3:83"
		  Position		  [340, 478, 370, 492]
		  ZOrder		  81
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IObsrvIn_1L_Q"
		  SID			  "3:73"
		  Position		  [40, 1158, 70, 1172]
		  ZOrder		  71
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IObsrvIn_1L_Q_Out"
		  SID			  "3:85"
		  Position		  [340, 558, 370, 572]
		  ZOrder		  83
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IObsrv_D"
		  SID			  "3:75"
		  Position		  [40, 1238, 70, 1252]
		  ZOrder		  73
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IObsrv_D_Out"
		  SID			  "3:87"
		  Position		  [340, 638, 370, 652]
		  ZOrder		  85
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IObsrv_Q"
		  SID			  "3:76"
		  Position		  [40, 1278, 70, 1292]
		  ZOrder		  74
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IObsrv_Q_Out"
		  SID			  "3:88"
		  Position		  [340, 678, 370, 692]
		  ZOrder		  86
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16Shift"
		  SID			  "3:57"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  55
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShift"
		  SID			  "3:66"
		  Position		  [40, 878, 70, 892]
		  ZOrder		  64
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16PhaseErr"
		  SID			  "3:34"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  36
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  13
		  DstBlock		  "f32IObsrv_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  12
		  DstBlock		  "f32IObsrv_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  11
		  DstBlock		  "f16IObsrvIn_1H_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  10
		  DstBlock		  "f32IObsrvIn_1L_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  9
		  DstBlock		  "f16IObsrvIn_1H_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  8
		  DstBlock		  "f32IObsrvIn_1L_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  7
		  DstBlock		  "f16InErrK1_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  6
		  DstBlock		  "f32Acc_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  5
		  DstBlock		  "f16InErrK1_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  4
		  DstBlock		  "f32Acc_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  3
		  DstBlock		  "f16EObsrv_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  2
		  DstBlock		  "f16EObsrv_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  1
		  DstBlock		  "f16PhaseErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f32IObsrv_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  28
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f32IObsrv_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  27
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f16IObsrvIn_1H_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  26
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f32IObsrvIn_1L_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  25
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "f16IObsrvIn_1H_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  24
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "f32IObsrvIn_1L_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  23
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "f16InErrK1_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  22
		}
		Line {
		  ZOrder		  21
		  SrcBlock		  "f32Acc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  21
		}
		Line {
		  ZOrder		  22
		  SrcBlock		  "f16InErrK1_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  20
		}
		Line {
		  ZOrder		  23
		  SrcBlock		  "f32Acc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  19
		}
		Line {
		  ZOrder		  24
		  SrcBlock		  "u16NShift"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  18
		}
		Line {
		  ZOrder		  25
		  SrcBlock		  "f16LowerLimit_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  17
		}
		Line {
		  ZOrder		  26
		  SrcBlock		  "f16UpperLimit_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  16
		}
		Line {
		  ZOrder		  27
		  SrcBlock		  "f16CC2sc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  28
		  SrcBlock		  "f16CC1sc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  29
		  SrcBlock		  "f16LowerLimit_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  30
		  SrcBlock		  "f16UpperLimit_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  31
		  SrcBlock		  "f16CC2sc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  32
		  SrcBlock		  "f16CC1sc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  33
		  SrcBlock		  "s16Shift"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  34
		  SrcBlock		  "f16EGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  35
		  SrcBlock		  "f16WIGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  36
		  SrcBlock		  "f16UGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  37
		  SrcBlock		  "f16IGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  38
		  SrcBlock		  "f16Phase"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  39
		  SrcBlock		  "f16Velocity"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  40
		  SrcBlock		  "pUAB"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  41
		  SrcBlock		  "pIAB"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_CurrentLoop_F16"
	      SID		      "4"
	      Ports		      [5, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 145, 260, 295]
	      ZOrder		      9
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		34
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_CurrentLoop_F16"
		Description		"Current control loop of the PMSM field-oriented control algorithm in 16-bit fixed-point fractional imp"
		"lementation. This block supports re-initialization of the internal state during simulation. If the block is reset, t"
		"he outputs of the PI controllers will be aligned with the inputs f16ControllerPIrAWDOut_preset and f16ControllerPIrA"
		"WQOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16CC1sc_D'], 'BlockType'), 'Inport')\n        posblk = get_pa"
		"ram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16CC1sc_D'], 'Position');\n        orient = get_param("
		" [gcb, '/f16CC1sc_D'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc_D']);\n        add_block('built"
		"-in/Ground', [gcb, '/f16CC1sc_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f"
		"16CC2sc_D'], 'Position');\n        orient = get_param( [gcb, '/f16CC2sc_D'], 'Orientation');\n        delete_block( "
		"      [gcb, '/f16CC2sc_D']);\n        add_block('built-in/Ground', [gcb, '/f16CC2sc_D'], 'Position', pos, 'Orientati"
		"on', orient);\n\n        pos = get_param(    [gcb, '/u16NShift_D'], 'Position');\n        orient = get_param( [gcb, "
		"'/u16NShift_D'], 'Orientation');\n        delete_block(       [gcb, '/u16NShift_D']);\n        add_block('built-in/G"
		"round', [gcb, '/u16NShift_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16CC"
		"1sc_Q'], 'Position');\n        orient = get_param( [gcb, '/f16CC1sc_Q'], 'Orientation');\n        delete_block(     "
		"  [gcb, '/f16CC1sc_Q']);\n        add_block('built-in/Ground', [gcb, '/f16CC1sc_Q'], 'Position', pos, 'Orientation',"
		" orient);\n\n        pos = get_param(    [gcb, '/f16CC2sc_Q'], 'Position');\n        orient = get_param( [gcb, '/f16"
		"CC2sc_Q'], 'Orientation');\n        delete_block(       [gcb, '/f16CC2sc_Q']);\n        add_block('built-in/Ground',"
		" [gcb, '/f16CC2sc_Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/u16NShift_Q']"
		", 'Position');\n        orient = get_param( [gcb, '/u16NShift_Q'], 'Orientation');\n        delete_block(       [gcb"
		", '/u16NShift_Q']);\n        add_block('built-in/Ground', [gcb, '/u16NShift_Q'], 'Position', pos, 'Orientation', ori"
		"ent);\n\n        pos = get_param(    [gcb, '/f32Acc_D'], 'Position');\n        orient = get_param( [gcb, '/f32Acc_D'"
		"], 'Orientation');\n        delete_block(       [gcb, '/f32Acc_D']);\n        add_block('built-in/Ground', [gcb, '/f"
		"32Acc_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16InErrK1_D'], 'Position"
		"');\n        orient = get_param( [gcb, '/f16InErrK1_D'], 'Orientation');\n        delete_block(       [gcb, '/f16InE"
		"rrK1_D']);\n        add_block('built-in/Ground', [gcb, '/f16InErrK1_D'], 'Position', pos, 'Orientation', orient);\n\n"
		"        pos = get_param(    [gcb, '/f32Acc_Q'], 'Position');\n        orient = get_param( [gcb, '/f32Acc_Q'], 'Orien"
		"tation');\n        delete_block(       [gcb, '/f32Acc_Q']);\n        add_block('built-in/Ground', [gcb, '/f32Acc_Q']"
		", 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16InErrK1_Q'], 'Position');\n    "
		"    orient = get_param( [gcb, '/f16InErrK1_Q'], 'Orientation');\n        delete_block(       [gcb, '/f16InErrK1_Q'])"
		";\n        add_block('built-in/Ground', [gcb, '/f16InErrK1_Q'], 'Position', pos, 'Orientation', orient);\n\n\n      "
		"  pos = get_param(    [gcb '/f32Acc_D_Out'], 'Position');\n        orient = get_param( [gcb '/f32Acc_D_Out'], 'Orien"
		"tation');\n        delete_block(       [gcb '/f32Acc_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f32A"
		"cc_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InErrK1_D_Out'], 'Posi"
		"tion');\n        orient = get_param( [gcb '/f16InErrK1_D_Out'], 'Orientation');\n        delete_block(       [gcb '/"
		"f16InErrK1_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f16InErrK1_D_Out'], 'Position', pos, 'Orientat"
		"ion', orient);\n\n        pos = get_param(    [gcb '/f32Acc_Q_Out'], 'Position');\n        orient = get_param( [gcb "
		"'/f32Acc_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Q_Out']);\n        add_block('built-in/"
		"Terminator', [gcb '/f32Acc_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f"
		"16InErrK1_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f16InErrK1_Q_Out'], 'Orientation');\n        del"
		"ete_block(       [gcb '/f16InErrK1_Q_Out']);\n        add_block('built-in/Terminator', [gcb '/f16InErrK1_Q_Out'], 'P"
		"osition', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16UDcBus'], 'Port', '1');\n        set_param(["
		"gcb '/pIDQReq'], 'Port', '2');\n        set_param([gcb '/pIDQFbck'], 'Port', '3');\n        set_param([gcb '/f16Cont"
		"rollerPIrAWDOut_preset'], 'Port', '4');\n        set_param([gcb '/f16ControllerPIrAWQOut_preset'], 'Port', '5');\n\n"
		"        set_param([gcb '/pUDQReq'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','"
		"on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 150\n          height = 150;\n          set_param(gcb,'Posi"
		"tion',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n"
		"    if strcmp(get_param([gcb '/f16CC1sc_D'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n"
		"\n        pos = get_param(    [gcb, '/f16CC1sc_D'], 'Position');\n        orient = get_param( [gcb, '/f16CC1sc_D'], "
		"'Orientation');\n        delete_block(       [gcb, '/f16CC1sc_D']);\n        add_block('built-in/Inport', [gcb, '/f1"
		"6CC1sc_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb,"
		" '/f16CC2sc_D'], 'Position');\n        orient = get_param( [gcb, '/f16CC2sc_D'], 'Orientation');\n        delete_blo"
		"ck(       [gcb, '/f16CC2sc_D']);\n        add_block('built-in/Inport', [gcb, '/f16CC2sc_D'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/u16NShift_D'], 'Position');\n   "
		"     orient = get_param( [gcb, '/u16NShift_D'], 'Orientation');\n        delete_block(       [gcb, '/u16NShift_D']);"
		"\n        add_block('built-in/Inport', [gcb, '/u16NShift_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeSt"
		"r', 'uint16');\n\n        pos = get_param(    [gcb, '/f16CC1sc_Q'], 'Position');\n        orient = get_param( [gcb, "
		"'/f16CC1sc_Q'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc_Q']);\n        add_block('built-in/Inp"
		"ort', [gcb, '/f16CC1sc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get"
		"_param(    [gcb, '/f16CC2sc_Q'], 'Position');\n        orient = get_param( [gcb, '/f16CC2sc_Q'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/f16CC2sc_Q']);\n        add_block('built-in/Inport', [gcb, '/f16CC2sc_Q'], 'Positi"
		"on', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/u16NShift_Q'], '"
		"Position');\n        orient = get_param( [gcb, '/u16NShift_Q'], 'Orientation');\n        delete_block(       [gcb, '"
		"/u16NShift_Q']);\n        add_block('built-in/Inport', [gcb, '/u16NShift_Q'], 'Position', pos, 'Orientation', orient"
		", 'OutDataTypeStr', 'uint16');\n\n        pos = get_param(    [gcb, '/f32Acc_D'], 'Position');\n        orient = get"
		"_param( [gcb, '/f32Acc_D'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc_D']);\n        add_block('bu"
		"ilt-in/Inport', [gcb, '/f32Acc_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        p"
		"os = get_param(    [gcb, '/f16InErrK1_D'], 'Position');\n        orient = get_param( [gcb, '/f16InErrK1_D'], 'Orient"
		"ation');\n        delete_block(       [gcb, '/f16InErrK1_D']);\n        add_block('built-in/Inport', [gcb, '/f16InEr"
		"rK1_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/"
		"f32Acc_Q'], 'Position');\n        orient = get_param( [gcb, '/f32Acc_Q'], 'Orientation');\n        delete_block(    "
		"   [gcb, '/f32Acc_Q']);\n        add_block('built-in/Inport', [gcb, '/f32Acc_Q'], 'Position', pos, 'Orientation', or"
		"ient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16InErrK1_Q'], 'Position');\n        orien"
		"t = get_param( [gcb, '/f16InErrK1_Q'], 'Orientation');\n        delete_block(       [gcb, '/f16InErrK1_Q']);\n      "
		"  add_block('built-in/Inport', [gcb, '/f16InErrK1_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'in"
		"t16');\n\n\n        pos = get_param(    [gcb '/f32Acc_D_Out'], 'Position');\n        orient = get_param( [gcb '/f32A"
		"cc_D_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_D_Out']);\n        add_block('built-in/Outpor"
		"t', [gcb '/f32Acc_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InErrK1"
		"_D_Out'], 'Position');\n        orient = get_param( [gcb '/f16InErrK1_D_Out'], 'Orientation');\n        delete_block"
		"(       [gcb '/f16InErrK1_D_Out']);\n        add_block('built-in/Outport', [gcb '/f16InErrK1_D_Out'], 'Position', po"
		"s, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32Acc_Q_Out'], 'Position');\n        orient = get_"
		"param( [gcb '/f32Acc_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Q_Out']);\n        add_bloc"
		"k('built-in/Outport', [gcb '/f32Acc_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(   "
		" [gcb '/f16InErrK1_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f16InErrK1_Q_Out'], 'Orientation');\n  "
		"      delete_block(       [gcb '/f16InErrK1_Q_Out']);\n        add_block('built-in/Outport', [gcb '/f16InErrK1_Q_Out"
		"'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16UDcBus'], 'Port', '1');\n        set_p"
		"aram([gcb '/pIDQReq'], 'Port', '2');\n        set_param([gcb '/pIDQFbck'], 'Port', '3');\n        set_param([gcb '/f"
		"16ControllerPIrAWDOut_preset'], 'Port', '4');\n        set_param([gcb '/f16ControllerPIrAWQOut_preset'], 'Port', '5'"
		");\n        set_param([gcb '/f16CC1sc_D'], 'Port', '6');\n        set_param([gcb '/f16CC2sc_D'], 'Port', '7');\n    "
		"    set_param([gcb '/u16NShift_D'], 'Port', '8');\n        set_param([gcb '/f16CC1sc_Q'], 'Port', '9');\n        set"
		"_param([gcb '/f16CC2sc_Q'], 'Port', '10');\n        set_param([gcb '/u16NShift_Q'], 'Port', '11');\n        set_para"
		"m([gcb '/f32Acc_D'], 'Port', '12');\n        set_param([gcb '/f16InErrK1_D'], 'Port', '13');\n        set_param([gcb"
		" '/f32Acc_Q'], 'Port', '14');\n        set_param([gcb '/f16InErrK1_Q'], 'Port', '15');\n\n        set_param([gcb '/p"
		"UDQReq'], 'Port', '1');\n        set_param([gcb '/f32Acc_D_Out'], 'Port', '2');\n        set_param([gcb '/f16InErrK1"
		"_D_Out'], 'Port', '3');\n        set_param([gcb '/f32Acc_Q_Out'], 'Port', '4');\n        set_param([gcb '/f16InErrK1"
		"_Q_Out'], 'Port', '5');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off','off','off'});\n\n"
		"        if (posblk(4) - posblk(2)) < 400\n          height = 400;\n          set_param(gcb,'Position',[posblk(1), po"
		"sblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_CurrentLoop_F16', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  8
		  Object {
		    $ObjectID		    35
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','"
		    "on','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    36
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    37
		    Type		    "edit"
		    Name		    "f16CC1sc_D"
		    Prompt		    "f16CC1sc_D (CC1 coefficient of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    38
		    Type		    "edit"
		    Name		    "f16CC2sc_D"
		    Prompt		    "f16CC2sc_D (CC2 coefficient of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    39
		    Type		    "edit"
		    Name		    "u16NShift_D"
		    Prompt		    "u16NShift_D (Scaling bitwise shift applied to the D-axis controller coefficients)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    40
		    Type		    "edit"
		    Name		    "f16CC1sc_Q"
		    Prompt		    "f16CC1sc_Q (CC1 coefficient of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    41
		    Type		    "edit"
		    Name		    "f16CC2sc_Q"
		    Prompt		    "f16CC2sc_Q (CC2 coefficient of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    42
		    Type		    "edit"
		    Name		    "u16NShift_Q"
		    Prompt		    "u16NShift_Q (Scaling bitwise shift applied to the Q-axis controller coefficients)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_CurrentLoop_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"45"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16UDcBus"
		  SID			  "4:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIDQReq"
		  SID			  "4:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIDQFbck"
		  SID			  "4:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16ControllerPIrAWDOut_preset"
		  SID			  "4:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16ControllerPIrAWQOut_preset"
		  SID			  "4:10"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  12
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "4:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_CurrentLoop_SF"
		  SID			  "4:5"
		  Ports			  [15, 5]
		  Position		  [135, 170, 285, 240]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_CurrentLoop_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,f16CC1sc_D,f16CC2sc_D,u16NShift_D,f16CC1sc_Q,f16CC2sc_Q,u16NShift_Q"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "4:26"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  28
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    43
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "4:29"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  29
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    44
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_CurrentLoop_BAM_F16.mdl');text(10,75,'PMSM Current Loop.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC1sc_D"
		  SID			  "4:32"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC1sc_Q"
		  SID			  "4:35"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC2sc_D"
		  SID			  "4:33"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC2sc_Q"
		  SID			  "4:36"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  34
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InErrK1_D"
		  SID			  "4:39"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InErrK1_D_Out"
		  SID			  "4:43"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  41
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InErrK1_Q"
		  SID			  "4:41"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InErrK1_Q_Out"
		  SID			  "4:45"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  43
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc_D"
		  SID			  "4:38"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  36
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_D_Out"
		  SID			  "4:42"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  40
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc_Q"
		  SID			  "4:40"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Q_Out"
		  SID			  "4:44"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  42
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShift_D"
		  SID			  "4:34"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShift_Q"
		  SID			  "4:37"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Outport
		  Name			  "pUDQReq"
		  SID			  "4:21"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  23
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  5
		  DstBlock		  "f16InErrK1_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  4
		  DstBlock		  "f32Acc_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  3
		  DstBlock		  "f16InErrK1_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  2
		  DstBlock		  "f32Acc_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  1
		  DstBlock		  "pUDQReq"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f16InErrK1_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f32Acc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f16InErrK1_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f32Acc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "u16NShift_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f16CC2sc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "f16CC1sc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "u16NShift_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f16CC2sc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f16CC1sc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f16ControllerPIrAWQOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f16ControllerPIrAWDOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "pIDQFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "pIDQReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "f16UDcBus"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_FWSpeedLoop_F16"
	      SID		      "5"
	      Ports		      [10, 3, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 315, 260, 590]
	      ZOrder		      10
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		45
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_FWSpeedLoop_F16"
		Description		"Speed loop controller with Field Weakening capability for the PMSM field-oriented control algorithm in"
		" 16-bit fixed-point fractional implementation. This block supports re-initialization of the internal state during si"
		"mulation. If the block is reset, the outputs of the MA filters, PI controllers, and the ramp will be aligned with th"
		"e inputs f16FilterMAWOut_preset, f16FilterMAFWOut_preset, f16ControllerPIpAWQOut_preset, f16ControllerPIpAWFWOut_pre"
		"set, and f32RampOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/u16NSamplesW'], 'BlockType'), 'Inport')\n        posblk = get_"
		"param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/u16NSamplesW'], 'Position');\n        orient = get_pa"
		"ram( [gcb, '/u16NSamplesW'], 'Orientation');\n        delete_block(       [gcb, '/u16NSamplesW']);\n        add_bloc"
		"k('built-in/Ground', [gcb, '/u16NSamplesW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(   "
		" [gcb, '/u16NSamplesFW'], 'Position');\n        orient = get_param( [gcb, '/u16NSamplesFW'], 'Orientation');\n      "
		"  delete_block(       [gcb, '/u16NSamplesFW']);\n        add_block('built-in/Ground', [gcb, '/u16NSamplesFW'], 'Posi"
		"tion', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16PropGainQ'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/f16PropGainQ'], 'Orientation');\n        delete_block(       [gcb, '/f16PropGainQ']);\n    "
		"    add_block('built-in/Ground', [gcb, '/f16PropGainQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = g"
		"et_param(    [gcb, '/f16IntegGainQ'], 'Position');\n        orient = get_param( [gcb, '/f16IntegGainQ'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/f16IntegGainQ']);\n        add_block('built-in/Ground', [gcb, '/f16IntegGa"
		"inQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16PropGainShiftQ'], 'Positio"
		"n');\n        orient = get_param( [gcb, '/s16PropGainShiftQ'], 'Orientation');\n        delete_block(       [gcb, '/"
		"s16PropGainShiftQ']);\n        add_block('built-in/Ground', [gcb, '/s16PropGainShiftQ'], 'Position', pos, 'Orientati"
		"on', orient);\n\n        pos = get_param(    [gcb, '/s16IntegGainShiftQ'], 'Position');\n        orient = get_param("
		" [gcb, '/s16IntegGainShiftQ'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShiftQ']);\n        "
		"add_block('built-in/Ground', [gcb, '/s16IntegGainShiftQ'], 'Position', pos, 'Orientation', orient);\n\n        pos ="
		" get_param(    [gcb, '/f16LowerLimitQ'], 'Position');\n        orient = get_param( [gcb, '/f16LowerLimitQ'], 'Orient"
		"ation');\n        delete_block(       [gcb, '/f16LowerLimitQ']);\n        add_block('built-in/Ground', [gcb, '/f16Lo"
		"werLimitQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16UpperLimitQ'], 'Posi"
		"tion');\n        orient = get_param( [gcb, '/f16UpperLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/"
		"f16UpperLimitQ']);\n        add_block('built-in/Ground', [gcb, '/f16UpperLimitQ'], 'Position', pos, 'Orientation', o"
		"rient);\n\n        pos = get_param(    [gcb, '/f16PropGainFW'], 'Position');\n        orient = get_param( [gcb, '/f1"
		"6PropGainFW'], 'Orientation');\n        delete_block(       [gcb, '/f16PropGainFW']);\n        add_block('built-in/G"
		"round', [gcb, '/f16PropGainFW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16"
		"IntegGainFW'], 'Position');\n        orient = get_param( [gcb, '/f16IntegGainFW'], 'Orientation');\n        delete_b"
		"lock(       [gcb, '/f16IntegGainFW']);\n        add_block('built-in/Ground', [gcb, '/f16IntegGainFW'], 'Position', p"
		"os, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16PropGainShiftFW'], 'Position');\n        orien"
		"t = get_param( [gcb, '/s16PropGainShiftFW'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShiftFW"
		"']);\n        add_block('built-in/Ground', [gcb, '/s16PropGainShiftFW'], 'Position', pos, 'Orientation', orient);\n\n"
		"        pos = get_param(    [gcb, '/s16IntegGainShiftFW'], 'Position');\n        orient = get_param( [gcb, '/s16Inte"
		"gGainShiftFW'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShiftFW']);\n        add_block('bui"
		"lt-in/Ground', [gcb, '/s16IntegGainShiftFW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(  "
		"  [gcb, '/f16LowerLimitFW'], 'Position');\n        orient = get_param( [gcb, '/f16LowerLimitFW'], 'Orientation');\n "
		"       delete_block(       [gcb, '/f16LowerLimitFW']);\n        add_block('built-in/Ground', [gcb, '/f16LowerLimitFW"
		"'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16UpperLimitFW'], 'Position');\n"
		"        orient = get_param( [gcb, '/f16UpperLimitFW'], 'Orientation');\n        delete_block(       [gcb, '/f16Upper"
		"LimitFW']);\n        add_block('built-in/Ground', [gcb, '/f16UpperLimitFW'], 'Position', pos, 'Orientation', orient)"
		";\n\n        pos = get_param(    [gcb, '/f32RampUp'], 'Position');\n        orient = get_param( [gcb, '/f32RampUp'],"
		" 'Orientation');\n        delete_block(       [gcb, '/f32RampUp']);\n        add_block('built-in/Ground', [gcb, '/f3"
		"2RampUp'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32RampDown'], 'Position'"
		");\n        orient = get_param( [gcb, '/f32RampDown'], 'Orientation');\n        delete_block(       [gcb, '/f32RampD"
		"own']);\n        add_block('built-in/Ground', [gcb, '/f32RampDown'], 'Position', pos, 'Orientation', orient);\n\n   "
		"     pos = get_param(    [gcb, '/f16IQReqK_1'], 'Position');\n        orient = get_param( [gcb, '/f16IQReqK_1'], 'Or"
		"ientation');\n        delete_block(       [gcb, '/f16IQReqK_1']);\n        add_block('built-in/Ground', [gcb, '/f16I"
		"QReqK_1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32AccW'], 'Position');\n"
		"        orient = get_param( [gcb, '/f32AccW'], 'Orientation');\n        delete_block(       [gcb, '/f32AccW']);\n   "
		"     add_block('built-in/Ground', [gcb, '/f32AccW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_p"
		"aram(    [gcb, '/f32AccFW'], 'Position');\n        orient = get_param( [gcb, '/f32AccFW'], 'Orientation');\n        "
		"delete_block(       [gcb, '/f32AccFW']);\n        add_block('built-in/Ground', [gcb, '/f32AccFW'], 'Position', pos, "
		"'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1Q'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/f32IntegPartK_1Q'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegPartK_1Q']);\n    "
		"    add_block('built-in/Ground', [gcb, '/f32IntegPartK_1Q'], 'Position', pos, 'Orientation', orient);\n\n        pos"
		" = get_param(    [gcb, '/f16InK_1Q'], 'Position');\n        orient = get_param( [gcb, '/f16InK_1Q'], 'Orientation');"
		"\n        delete_block(       [gcb, '/f16InK_1Q']);\n        add_block('built-in/Ground', [gcb, '/f16InK_1Q'], 'Posi"
		"tion', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1FW'], 'Position');\n      "
		"  orient = get_param( [gcb, '/f32IntegPartK_1FW'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegPart"
		"K_1FW']);\n        add_block('built-in/Ground', [gcb, '/f32IntegPartK_1FW'], 'Position', pos, 'Orientation', orient)"
		";\n\n        pos = get_param(    [gcb, '/f16InK_1FW'], 'Position');\n        orient = get_param( [gcb, '/f16InK_1FW'"
		"], 'Orientation');\n        delete_block(       [gcb, '/f16InK_1FW']);\n        add_block('built-in/Ground', [gcb, '"
		"/f16InK_1FW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32State'], 'Position"
		"');\n        orient = get_param( [gcb, '/f32State'], 'Orientation');\n        delete_block(       [gcb, '/f32State']"
		");\n        add_block('built-in/Ground', [gcb, '/f32State'], 'Position', pos, 'Orientation', orient);\n\n\n        p"
		"os = get_param(    [gcb '/f32AccW_Out'], 'Position');\n        orient = get_param( [gcb '/f32AccW_Out'], 'Orientatio"
		"n');\n        delete_block(       [gcb '/f32AccW_Out']);\n        add_block('built-in/Terminator', [gcb '/f32AccW_Ou"
		"t'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32AccFW_Out'], 'Position');\n  "
		"      orient = get_param( [gcb '/f32AccFW_Out'], 'Orientation');\n        delete_block(       [gcb '/f32AccFW_Out'])"
		";\n        add_block('built-in/Terminator', [gcb '/f32AccFW_Out'], 'Position', pos, 'Orientation', orient);\n\n     "
		"   pos = get_param(    [gcb '/f32IntegPartK_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK"
		"_1Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IntegPartK_1Q_Out']);\n        add_block('built-in"
		"/Terminator', [gcb '/f32IntegPartK_1Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(   "
		" [gcb '/f16InK_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/f16InK_1Q_Out'], 'Orientation');\n        "
		"delete_block(       [gcb '/f16InK_1Q_Out']);\n        add_block('built-in/Terminator', [gcb '/f16InK_1Q_Out'], 'Posi"
		"tion', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IntegPartK_1FW_Out'], 'Position');\n   "
		"     orient = get_param( [gcb '/f32IntegPartK_1FW_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Inte"
		"gPartK_1FW_Out']);\n        add_block('built-in/Terminator', [gcb '/f32IntegPartK_1FW_Out'], 'Position', pos, 'Orien"
		"tation', orient);\n\n        pos = get_param(    [gcb '/f16InK_1FW_Out'], 'Position');\n        orient = get_param( "
		"[gcb '/f16InK_1FW_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InK_1FW_Out']);\n        add_block('"
		"built-in/Terminator', [gcb '/f16InK_1FW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param( "
		"   [gcb '/f32State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n        "
		"delete_block(       [gcb '/f32State_Out']);\n        add_block('built-in/Terminator', [gcb '/f32State_Out'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n\n        if strcmp(get_param([gcb '/f16WReqFilt'], 'BlockType'), 'Outport')\n "
		"           pos = get_param(    [gcb '/f16WReqFilt'], 'Position');\n            orient = get_param( [gcb '/f16WReqFil"
		"t'], 'Orientation');\n            delete_block(       [gcb '/f16WReqFilt']);\n            add_block('built-in/Termin"
		"ator', [gcb '/f16WReqFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16W"
		"Err'], 'Position');\n            orient = get_param( [gcb '/f16WErr'], 'Orientation');\n            delete_block(   "
		"    [gcb '/f16WErr']);\n            add_block('built-in/Terminator', [gcb '/f16WErr'], 'Position', pos, 'Orientation"
		"', orient);\n\n            pos = get_param(    [gcb '/f16IDQReqAmp'], 'Position');\n            orient = get_param( "
		"[gcb '/f16IDQReqAmp'], 'Orientation');\n            delete_block(       [gcb '/f16IDQReqAmp']);\n            add_blo"
		"ck('built-in/Terminator', [gcb '/f16IDQReqAmp'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_p"
		"aram(    [gcb '/f16WFbckFilt'], 'Position');\n            orient = get_param( [gcb '/f16WFbckFilt'], 'Orientation');"
		"\n            delete_block(       [gcb '/f16WFbckFilt']);\n            add_block('built-in/Terminator', [gcb '/f16WF"
		"bckFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16IQErrSign'], 'Posit"
		"ion');\n            orient = get_param( [gcb '/f16IQErrSign'], 'Orientation');\n            delete_block(       [gcb"
		" '/f16IQErrSign']);\n            add_block('built-in/Terminator', [gcb '/f16IQErrSign'], 'Position', pos, 'Orientati"
		"on', orient);\n\n            pos = get_param(    [gcb '/f16IQErr'], 'Position');\n            orient = get_param( [g"
		"cb '/f16IQErr'], 'Orientation');\n            delete_block(       [gcb '/f16IQErr']);\n            add_block('built-"
		"in/Terminator', [gcb '/f16IQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb "
		"'/f16FWErr'], 'Position');\n            orient = get_param( [gcb '/f16FWErr'], 'Orientation');\n            delete_b"
		"lock(       [gcb '/f16FWErr']);\n            add_block('built-in/Terminator', [gcb '/f16FWErr'], 'Position', pos, 'O"
		"rientation', orient);\n\n            pos = get_param(    [gcb '/f16UQErr'], 'Position');\n            orient = get_p"
		"aram( [gcb '/f16UQErr'], 'Orientation');\n            delete_block(       [gcb '/f16UQErr']);\n            add_block"
		"('built-in/Terminator', [gcb '/f16UQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param( "
		"   [gcb '/f16FWErrFilt'], 'Position');\n            orient = get_param( [gcb '/f16FWErrFilt'], 'Orientation');\n    "
		"        delete_block(       [gcb '/f16FWErrFilt']);\n            add_block('built-in/Terminator', [gcb '/f16FWErrFil"
		"t'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWAngle'], 'Position');\n"
		"            orient = get_param( [gcb '/f16FWAngle'], 'Orientation');\n            delete_block(       [gcb '/f16FWAn"
		"gle']);\n            add_block('built-in/Terminator', [gcb '/f16FWAngle'], 'Position', pos, 'Orientation', orient);\n"
		"\n            pos = get_param(    [gcb '/f16FWSin'], 'Position');\n            orient = get_param( [gcb '/f16FWSin']"
		", 'Orientation');\n            delete_block(       [gcb '/f16FWSin']);\n            add_block('built-in/Terminator',"
		" [gcb '/f16FWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWCos'], '"
		"Position');\n            orient = get_param( [gcb '/f16FWCos'], 'Orientation');\n            delete_block(       [gc"
		"b '/f16FWCos']);\n            add_block('built-in/Terminator', [gcb '/f16FWCos'], 'Position', pos, 'Orientation', or"
		"ient);\n\n        end\n\n        set_param([gcb '/f16VelocityReq'], 'Port', '1');\n        set_param([gcb '/f16Veloc"
		"ityFbck'], 'Port', '2');\n        set_param([gcb '/f16IQFbck'], 'Port', '3');\n        set_param([gcb '/f16UQReq'], "
		"'Port', '4');\n        set_param([gcb '/f16UQLim'], 'Port', '5');\n        set_param([gcb '/f16FilterMAWOut_preset']"
		", 'Port', '6');\n        set_param([gcb '/f16FilterMAFWOut_preset'], 'Port', '7');\n        set_param([gcb '/f16Cont"
		"rollerPIpAWQOut_preset'], 'Port', '8');\n        set_param([gcb '/f16ControllerPIpAWFWOut_preset'], 'Port', '9');\n "
		"       set_param([gcb '/f32RampOut_preset'], 'Port', '10');\n\n        set_param([gcb '/pIDQReq'], 'Port', '1');\n  "
		"      set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n        set_param([gcb '/u16LimitFlagFW'], 'Port', '3');\n\n "
		"       set_param(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on','on','on','on','on','on','on'"
		",'on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 275\n          height = 275;\n          set_param(gcb,'Po"
		"sition',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variable"
		"s\n    if strcmp(get_param([gcb '/u16NSamplesW'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position"
		"');\n\n        pos = get_param(    [gcb, '/u16NSamplesW'], 'Position');\n        orient = get_param( [gcb, '/u16NSam"
		"plesW'], 'Orientation');\n        delete_block(       [gcb, '/u16NSamplesW']);\n        add_block('built-in/Inport',"
		" [gcb, '/u16NSamplesW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n        pos = get_p"
		"aram(    [gcb, '/u16NSamplesFW'], 'Position');\n        orient = get_param( [gcb, '/u16NSamplesFW'], 'Orientation');"
		"\n        delete_block(       [gcb, '/u16NSamplesFW']);\n        add_block('built-in/Inport', [gcb, '/u16NSamplesFW'"
		"], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n        pos = get_param(    [gcb, '/f16Pr"
		"opGainQ'], 'Position');\n        orient = get_param( [gcb, '/f16PropGainQ'], 'Orientation');\n        delete_block( "
		"      [gcb, '/f16PropGainQ']);\n        add_block('built-in/Inport', [gcb, '/f16PropGainQ'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16IntegGainQ'], 'Position');\n "
		"       orient = get_param( [gcb, '/f16IntegGainQ'], 'Orientation');\n        delete_block(       [gcb, '/f16IntegGai"
		"nQ']);\n        add_block('built-in/Inport', [gcb, '/f16IntegGainQ'], 'Position', pos, 'Orientation', orient, 'OutDa"
		"taTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/s16PropGainShiftQ'], 'Position');\n        orient = get"
		"_param( [gcb, '/s16PropGainShiftQ'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShiftQ']);\n   "
		"     add_block('built-in/Inport', [gcb, '/s16PropGainShiftQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeS"
		"tr', 'int16');\n\n        pos = get_param(    [gcb, '/s16IntegGainShiftQ'], 'Position');\n        orient = get_param"
		"( [gcb, '/s16IntegGainShiftQ'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShiftQ']);\n       "
		" add_block('built-in/Inport', [gcb, '/s16IntegGainShiftQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr'"
		", 'int16');\n\n        pos = get_param(    [gcb, '/f16LowerLimitQ'], 'Position');\n        orient = get_param( [gcb,"
		" '/f16LowerLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimitQ']);\n        add_block('bui"
		"lt-in/Inport', [gcb, '/f16LowerLimitQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n    "
		"    pos = get_param(    [gcb, '/f16UpperLimitQ'], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimitQ']"
		", 'Orientation');\n        delete_block(       [gcb, '/f16UpperLimitQ']);\n        add_block('built-in/Inport', [gcb"
		", '/f16UpperLimitQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param"
		"(    [gcb, '/f16PropGainFW'], 'Position');\n        orient = get_param( [gcb, '/f16PropGainFW'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/f16PropGainFW']);\n        add_block('built-in/Inport', [gcb, '/f16PropGainFW'], '"
		"Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16IntegGa"
		"inFW'], 'Position');\n        orient = get_param( [gcb, '/f16IntegGainFW'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/f16IntegGainFW']);\n        add_block('built-in/Inport', [gcb, '/f16IntegGainFW'], 'Position', pos, 'Or"
		"ientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/s16PropGainShiftFW'], 'Positi"
		"on');\n        orient = get_param( [gcb, '/s16PropGainShiftFW'], 'Orientation');\n        delete_block(       [gcb, "
		"'/s16PropGainShiftFW']);\n        add_block('built-in/Inport', [gcb, '/s16PropGainShiftFW'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/s16IntegGainShiftFW'], 'Position"
		"');\n        orient = get_param( [gcb, '/s16IntegGainShiftFW'], 'Orientation');\n        delete_block(       [gcb, '"
		"/s16IntegGainShiftFW']);\n        add_block('built-in/Inport', [gcb, '/s16IntegGainShiftFW'], 'Position', pos, 'Orie"
		"ntation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16LowerLimitFW'], 'Position');"
		"\n        orient = get_param( [gcb, '/f16LowerLimitFW'], 'Orientation');\n        delete_block(       [gcb, '/f16Low"
		"erLimitFW']);\n        add_block('built-in/Inport', [gcb, '/f16LowerLimitFW'], 'Position', pos, 'Orientation', orien"
		"t, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16UpperLimitFW'], 'Position');\n        orien"
		"t = get_param( [gcb, '/f16UpperLimitFW'], 'Orientation');\n        delete_block(       [gcb, '/f16UpperLimitFW']);\n"
		"        add_block('built-in/Inport', [gcb, '/f16UpperLimitFW'], 'Position', pos, 'Orientation', orient, 'OutDataType"
		"Str', 'int16');\n\n        pos = get_param(    [gcb, '/f32RampUp'], 'Position');\n        orient = get_param( [gcb, "
		"'/f32RampUp'], 'Orientation');\n        delete_block(       [gcb, '/f32RampUp']);\n        add_block('built-in/Inpor"
		"t', [gcb, '/f32RampUp'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_pa"
		"ram(    [gcb, '/f32RampDown'], 'Position');\n        orient = get_param( [gcb, '/f32RampDown'], 'Orientation');\n   "
		"     delete_block(       [gcb, '/f32RampDown']);\n        add_block('built-in/Inport', [gcb, '/f32RampDown'], 'Posit"
		"ion', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16IQReqK_1'], "
		"'Position');\n        orient = get_param( [gcb, '/f16IQReqK_1'], 'Orientation');\n        delete_block(       [gcb, "
		"'/f16IQReqK_1']);\n        add_block('built-in/Inport', [gcb, '/f16IQReqK_1'], 'Position', pos, 'Orientation', orien"
		"t, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32AccW'], 'Position');\n        orient = get_"
		"param( [gcb, '/f32AccW'], 'Orientation');\n        delete_block(       [gcb, '/f32AccW']);\n        add_block('built"
		"-in/Inport', [gcb, '/f32AccW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos ="
		" get_param(    [gcb, '/f32AccFW'], 'Position');\n        orient = get_param( [gcb, '/f32AccFW'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/f32AccFW']);\n        add_block('built-in/Inport', [gcb, '/f32AccFW'], 'Position',"
		" pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1Q'], "
		"'Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1Q'], 'Orientation');\n        delete_block(       ["
		"gcb, '/f32IntegPartK_1Q']);\n        add_block('built-in/Inport', [gcb, '/f32IntegPartK_1Q'], 'Position', pos, 'Orie"
		"ntation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16InK_1Q'], 'Position');\n    "
		"    orient = get_param( [gcb, '/f16InK_1Q'], 'Orientation');\n        delete_block(       [gcb, '/f16InK_1Q']);\n   "
		"     add_block('built-in/Inport', [gcb, '/f16InK_1Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'in"
		"t16');\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1FW'], 'Position');\n        orient = get_param( [gcb, '"
		"/f32IntegPartK_1FW'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegPartK_1FW']);\n        add_block("
		"'built-in/Inport', [gcb, '/f32IntegPartK_1FW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n"
		"\n        pos = get_param(    [gcb, '/f16InK_1FW'], 'Position');\n        orient = get_param( [gcb, '/f16InK_1FW'], "
		"'Orientation');\n        delete_block(       [gcb, '/f16InK_1FW']);\n        add_block('built-in/Inport', [gcb, '/f1"
		"6InK_1FW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb,"
		" '/f32State'], 'Position');\n        orient = get_param( [gcb, '/f32State'], 'Orientation');\n        delete_block( "
		"      [gcb, '/f32State']);\n        add_block('built-in/Inport', [gcb, '/f32State'], 'Position', pos, 'Orientation',"
		" orient, 'OutDataTypeStr', 'int32');\n\n\n        pos = get_param(    [gcb '/f32AccW_Out'], 'Position');\n        or"
		"ient = get_param( [gcb '/f32AccW_Out'], 'Orientation');\n        delete_block(       [gcb '/f32AccW_Out']);\n       "
		" add_block('built-in/Outport', [gcb '/f32AccW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_p"
		"aram(    [gcb '/f32AccFW_Out'], 'Position');\n        orient = get_param( [gcb '/f32AccFW_Out'], 'Orientation');\n  "
		"      delete_block(       [gcb '/f32AccFW_Out']);\n        add_block('built-in/Outport', [gcb '/f32AccFW_Out'], 'Pos"
		"ition', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IntegPartK_1Q_Out'], 'Position');\n   "
		"     orient = get_param( [gcb '/f32IntegPartK_1Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Integ"
		"PartK_1Q_Out']);\n        add_block('built-in/Outport', [gcb '/f32IntegPartK_1Q_Out'], 'Position', pos, 'Orientation"
		"', orient);\n\n        pos = get_param(    [gcb '/f16InK_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/"
		"f16InK_1Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InK_1Q_Out']);\n        add_block('built-in/"
		"Outport', [gcb '/f16InK_1Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32"
		"IntegPartK_1FW_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1FW_Out'], 'Orientation');\n   "
		"     delete_block(       [gcb '/f32IntegPartK_1FW_Out']);\n        add_block('built-in/Outport', [gcb '/f32IntegPart"
		"K_1FW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InK_1FW_Out'], 'Posit"
		"ion');\n        orient = get_param( [gcb '/f16InK_1FW_Out'], 'Orientation');\n        delete_block(       [gcb '/f16"
		"InK_1FW_Out']);\n        add_block('built-in/Outport', [gcb '/f16InK_1FW_Out'], 'Position', pos, 'Orientation', orie"
		"nt);\n\n        pos = get_param(    [gcb '/f32State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State"
		"_Out'], 'Orientation');\n        delete_block(       [gcb '/f32State_Out']);\n        add_block('built-in/Outport', "
		"[gcb '/f32State_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        if (showDebugOutputs == 2) && (strcmp(g"
		"et_param([gcb '/f16WReqFilt'], 'BlockType'), 'Terminator'))\n            pos = get_param(    [gcb '/f16WReqFilt'], '"
		"Position');\n            orient = get_param( [gcb '/f16WReqFilt'], 'Orientation');\n            delete_block(       "
		"[gcb '/f16WReqFilt']);\n            add_block('built-in/Outport', [gcb '/f16WReqFilt'], 'Position', pos, 'Orientatio"
		"n', orient);\n\n            pos = get_param(    [gcb '/f16WErr'], 'Position');\n            orient = get_param( [gcb"
		" '/f16WErr'], 'Orientation');\n            delete_block(       [gcb '/f16WErr']);\n            add_block('built-in/O"
		"utport', [gcb '/f16WErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16IDQ"
		"ReqAmp'], 'Position');\n            orient = get_param( [gcb '/f16IDQReqAmp'], 'Orientation');\n            delete_b"
		"lock(       [gcb '/f16IDQReqAmp']);\n            add_block('built-in/Outport', [gcb '/f16IDQReqAmp'], 'Position', po"
		"s, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16WFbckFilt'], 'Position');\n            orien"
		"t = get_param( [gcb '/f16WFbckFilt'], 'Orientation');\n            delete_block(       [gcb '/f16WFbckFilt']);\n    "
		"        add_block('built-in/Outport', [gcb '/f16WFbckFilt'], 'Position', pos, 'Orientation', orient);\n\n           "
		" pos = get_param(    [gcb '/f16IQErrSign'], 'Position');\n            orient = get_param( [gcb '/f16IQErrSign'], 'Or"
		"ientation');\n            delete_block(       [gcb '/f16IQErrSign']);\n            add_block('built-in/Outport', [gc"
		"b '/f16IQErrSign'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16IQErr'], '"
		"Position');\n            orient = get_param( [gcb '/f16IQErr'], 'Orientation');\n            delete_block(       [gc"
		"b '/f16IQErr']);\n            add_block('built-in/Outport', [gcb '/f16IQErr'], 'Position', pos, 'Orientation', orien"
		"t);\n\n            pos = get_param(    [gcb '/f16FWErr'], 'Position');\n            orient = get_param( [gcb '/f16FW"
		"Err'], 'Orientation');\n            delete_block(       [gcb '/f16FWErr']);\n            add_block('built-in/Outport"
		"', [gcb '/f16FWErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16UQErr'],"
		" 'Position');\n            orient = get_param( [gcb '/f16UQErr'], 'Orientation');\n            delete_block(       ["
		"gcb '/f16UQErr']);\n            add_block('built-in/Outport', [gcb '/f16UQErr'], 'Position', pos, 'Orientation', ori"
		"ent);\n\n            pos = get_param(    [gcb '/f16FWErrFilt'], 'Position');\n            orient = get_param( [gcb '"
		"/f16FWErrFilt'], 'Orientation');\n            delete_block(       [gcb '/f16FWErrFilt']);\n            add_block('bu"
		"ilt-in/Outport', [gcb '/f16FWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    "
		"[gcb '/f16FWAngle'], 'Position');\n            orient = get_param( [gcb '/f16FWAngle'], 'Orientation');\n           "
		" delete_block(       [gcb '/f16FWAngle']);\n            add_block('built-in/Outport', [gcb '/f16FWAngle'], 'Position"
		"', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWSin'], 'Position');\n            orie"
		"nt = get_param( [gcb '/f16FWSin'], 'Orientation');\n            delete_block(       [gcb '/f16FWSin']);\n           "
		" add_block('built-in/Outport', [gcb '/f16FWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_"
		"param(    [gcb '/f16FWCos'], 'Position');\n            orient = get_param( [gcb '/f16FWCos'], 'Orientation');\n     "
		"       delete_block(       [gcb '/f16FWCos']);\n            add_block('built-in/Outport', [gcb '/f16FWCos'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        end\n\n        set_param([gcb '/f16VelocityReq'], 'Port', '1');\n      "
		"  set_param([gcb '/f16VelocityFbck'], 'Port', '2');\n        set_param([gcb '/f16IQFbck'], 'Port', '3');\n        se"
		"t_param([gcb '/f16UQReq'], 'Port', '4');\n        set_param([gcb '/f16UQLim'], 'Port', '5');\n        set_param([gcb"
		" '/f16FilterMAWOut_preset'], 'Port', '6');\n        set_param([gcb '/f16FilterMAFWOut_preset'], 'Port', '7');\n     "
		"   set_param([gcb '/f16ControllerPIpAWQOut_preset'], 'Port', '8');\n        set_param([gcb '/f16ControllerPIpAWFWOut"
		"_preset'], 'Port', '9');\n        set_param([gcb '/f32RampOut_preset'], 'Port', '10');\n        set_param([gcb '/u16"
		"NSamplesW'], 'Port', '11');\n        set_param([gcb '/u16NSamplesFW'], 'Port', '12');\n        set_param([gcb '/f16P"
		"ropGainQ'], 'Port', '13');\n        set_param([gcb '/f16IntegGainQ'], 'Port', '14');\n        set_param([gcb '/s16Pr"
		"opGainShiftQ'], 'Port', '15');\n        set_param([gcb '/s16IntegGainShiftQ'], 'Port', '16');\n        set_param([gc"
		"b '/f16LowerLimitQ'], 'Port', '17');\n        set_param([gcb '/f16UpperLimitQ'], 'Port', '18');\n        set_param(["
		"gcb '/f16PropGainFW'], 'Port', '19');\n        set_param([gcb '/f16IntegGainFW'], 'Port', '20');\n        set_param("
		"[gcb '/s16PropGainShiftFW'], 'Port', '21');\n        set_param([gcb '/s16IntegGainShiftFW'], 'Port', '22');\n       "
		" set_param([gcb '/f16LowerLimitFW'], 'Port', '23');\n        set_param([gcb '/f16UpperLimitFW'], 'Port', '24');\n   "
		"     set_param([gcb '/f32RampUp'], 'Port', '25');\n        set_param([gcb '/f32RampDown'], 'Port', '26');\n        s"
		"et_param([gcb '/f16IQReqK_1'], 'Port', '27');\n        set_param([gcb '/f32AccW'], 'Port', '28');\n        set_param"
		"([gcb '/f32AccFW'], 'Port', '29');\n        set_param([gcb '/f32IntegPartK_1Q'], 'Port', '30');\n        set_param(["
		"gcb '/f16InK_1Q'], 'Port', '31');\n        set_param([gcb '/f32IntegPartK_1FW'], 'Port', '32');\n        set_param(["
		"gcb '/f16InK_1FW'], 'Port', '33');\n        set_param([gcb '/f32State'], 'Port', '34');\n\n        if (showDebugOutp"
		"uts == 2)\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Por"
		"t', '2');\n            set_param([gcb '/u16LimitFlagFW'], 'Port', '3');\n            set_param([gcb '/f16WReqFilt'],"
		" 'Port', '4');\n            set_param([gcb '/f16WErr'], 'Port', '5');\n            set_param([gcb '/f16IDQReqAmp'], "
		"'Port', '6');\n            set_param([gcb '/f16WFbckFilt'], 'Port', '7');\n            set_param([gcb '/f16IQErrSign"
		"'], 'Port', '8');\n            set_param([gcb '/f16IQErr'], 'Port', '9');\n            set_param([gcb '/f16FWErr'], "
		"'Port', '10');\n            set_param([gcb '/f16UQErr'], 'Port', '11');\n            set_param([gcb '/f16FWErrFilt']"
		", 'Port', '12');\n            set_param([gcb '/f16FWAngle'], 'Port', '13');\n            set_param([gcb '/f16FWSin']"
		", 'Port', '14');\n            set_param([gcb '/f16FWCos'], 'Port', '15');\n            set_param([gcb '/f32AccW_Out'"
		"], 'Port', '16');\n            set_param([gcb '/f32AccFW_Out'], 'Port', '17');\n            set_param([gcb '/f32Inte"
		"gPartK_1Q_Out'], 'Port', '18');\n            set_param([gcb '/f16InK_1Q_Out'], 'Port', '19');\n            set_param"
		"([gcb '/f32IntegPartK_1FW_Out'], 'Port', '20');\n            set_param([gcb '/f16InK_1FW_Out'], 'Port', '21');\n    "
		"        set_param([gcb '/f32State_Out'], 'Port', '22');\n        else\n            set_param([gcb '/pIDQReq'], 'Port"
		"', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n            set_param([gcb '/u16LimitFlagFW']"
		", 'Port', '3');\n            set_param([gcb '/f32AccW_Out'], 'Port', '4');\n            set_param([gcb '/f32AccFW_Ou"
		"t'], 'Port', '5');\n            set_param([gcb '/f32IntegPartK_1Q_Out'], 'Port', '6');\n            set_param([gcb '"
		"/f16InK_1Q_Out'], 'Port', '7');\n            set_param([gcb '/f32IntegPartK_1FW_Out'], 'Port', '8');\n            se"
		"t_param([gcb '/f16InK_1FW_Out'], 'Port', '9');\n            set_param([gcb '/f32State_Out'], 'Port', '10');\n       "
		" end\n\n        set_param(gcb,'MaskEnables',{'on','on','on','off','off','off','off','off','off','off','off','off','o"
		"ff','off','off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 875\n          height = 875;\n   "
		"       set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    else\n       "
		" if (showDebugOutputs == 2) && (strcmp(get_param([gcb '/f16WReqFilt'], 'BlockType'), 'Terminator'))\n            % s"
		"hown debugging outputs\n            pos = get_param(    [gcb '/f16WReqFilt'], 'Position');\n            orient = get"
		"_param( [gcb '/f16WReqFilt'], 'Orientation');\n            delete_block(       [gcb '/f16WReqFilt']);\n            a"
		"dd_block('built-in/Outport', [gcb '/f16WReqFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get"
		"_param(    [gcb '/f16WErr'], 'Position');\n            orient = get_param( [gcb '/f16WErr'], 'Orientation');\n      "
		"      delete_block(       [gcb '/f16WErr']);\n            add_block('built-in/Outport', [gcb '/f16WErr'], 'Position'"
		", pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16IDQReqAmp'], 'Position');\n            o"
		"rient = get_param( [gcb '/f16IDQReqAmp'], 'Orientation');\n            delete_block(       [gcb '/f16IDQReqAmp']);\n"
		"            add_block('built-in/Outport', [gcb '/f16IDQReqAmp'], 'Position', pos, 'Orientation', orient);\n\n       "
		"     pos = get_param(    [gcb '/f16WFbckFilt'], 'Position');\n            orient = get_param( [gcb '/f16WFbckFilt'],"
		" 'Orientation');\n            delete_block(       [gcb '/f16WFbckFilt']);\n            add_block('built-in/Outport',"
		" [gcb '/f16WFbckFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16IQErrS"
		"ign'], 'Position');\n            orient = get_param( [gcb '/f16IQErrSign'], 'Orientation');\n            delete_bloc"
		"k(       [gcb '/f16IQErrSign']);\n            add_block('built-in/Outport', [gcb '/f16IQErrSign'], 'Position', pos, "
		"'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16IQErr'], 'Position');\n            orient = get"
		"_param( [gcb '/f16IQErr'], 'Orientation');\n            delete_block(       [gcb '/f16IQErr']);\n            add_blo"
		"ck('built-in/Outport', [gcb '/f16IQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(  "
		"  [gcb '/f16FWErr'], 'Position');\n            orient = get_param( [gcb '/f16FWErr'], 'Orientation');\n            d"
		"elete_block(       [gcb '/f16FWErr']);\n            add_block('built-in/Outport', [gcb '/f16FWErr'], 'Position', pos"
		", 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16UQErr'], 'Position');\n            orient = g"
		"et_param( [gcb '/f16UQErr'], 'Orientation');\n            delete_block(       [gcb '/f16UQErr']);\n            add_b"
		"lock('built-in/Outport', [gcb '/f16UQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param("
		"    [gcb '/f16FWErrFilt'], 'Position');\n            orient = get_param( [gcb '/f16FWErrFilt'], 'Orientation');\n   "
		"         delete_block(       [gcb '/f16FWErrFilt']);\n            add_block('built-in/Outport', [gcb '/f16FWErrFilt'"
		"], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWAngle'], 'Position');\n  "
		"          orient = get_param( [gcb '/f16FWAngle'], 'Orientation');\n            delete_block(       [gcb '/f16FWAngl"
		"e']);\n            add_block('built-in/Outport', [gcb '/f16FWAngle'], 'Position', pos, 'Orientation', orient);\n\n  "
		"          pos = get_param(    [gcb '/f16FWSin'], 'Position');\n            orient = get_param( [gcb '/f16FWSin'], 'O"
		"rientation');\n            delete_block(       [gcb '/f16FWSin']);\n            add_block('built-in/Outport', [gcb '"
		"/f16FWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWCos'], 'Positio"
		"n');\n            orient = get_param( [gcb '/f16FWCos'], 'Orientation');\n            delete_block(       [gcb '/f16"
		"FWCos']);\n            add_block('built-in/Outport', [gcb '/f16FWCos'], 'Position', pos, 'Orientation', orient);\n\n"
		"            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n"
		"            set_param([gcb '/u16LimitFlagFW'], 'Port', '3');\n            set_param([gcb '/f16WReqFilt'], 'Port', '4"
		"');\n            set_param([gcb '/f16WErr'], 'Port', '5');\n            set_param([gcb '/f16IDQReqAmp'], 'Port', '6'"
		");\n            set_param([gcb '/f16WFbckFilt'], 'Port', '7');\n            set_param([gcb '/f16IQErrSign'], 'Port',"
		" '8');\n            set_param([gcb '/f16IQErr'], 'Port', '9');\n            set_param([gcb '/f16FWErr'], 'Port', '10"
		"');\n            set_param([gcb '/f16UQErr'], 'Port', '11');\n            set_param([gcb '/f16FWErrFilt'], 'Port', '"
		"12');\n            set_param([gcb '/f16FWAngle'], 'Port', '13');\n            set_param([gcb '/f16FWSin'], 'Port', '"
		"14');\n            set_param([gcb '/f16FWCos'], 'Port', '15');\n            set_param([gcb '/f32AccW_Out'], 'Port', "
		"'16');\n            set_param([gcb '/f32AccFW_Out'], 'Port', '17');\n            set_param([gcb '/f32IntegPartK_1Q_O"
		"ut'], 'Port', '18');\n            set_param([gcb '/f16InK_1Q_Out'], 'Port', '19');\n            set_param([gcb '/f32"
		"IntegPartK_1FW_Out'], 'Port', '20');\n            set_param([gcb '/f16InK_1FW_Out'], 'Port', '21');\n            set"
		"_param([gcb '/f32State_Out'], 'Port', '22');\n        elseif (showDebugOutputs == 1) && (strcmp(get_param([gcb '/f16"
		"WReqFilt'], 'BlockType'), 'Outport'))\n            % hidden debugging outputs\n            pos = get_param(    [gcb "
		"'/f16WReqFilt'], 'Position');\n            orient = get_param( [gcb '/f16WReqFilt'], 'Orientation');\n            de"
		"lete_block(       [gcb '/f16WReqFilt']);\n            add_block('built-in/Terminator', [gcb '/f16WReqFilt'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16WErr'], 'Position');\n            ori"
		"ent = get_param( [gcb '/f16WErr'], 'Orientation');\n            delete_block(       [gcb '/f16WErr']);\n            "
		"add_block('built-in/Terminator', [gcb '/f16WErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get"
		"_param(    [gcb '/f16IDQReqAmp'], 'Position');\n            orient = get_param( [gcb '/f16IDQReqAmp'], 'Orientation'"
		");\n            delete_block(       [gcb '/f16IDQReqAmp']);\n            add_block('built-in/Terminator', [gcb '/f16"
		"IDQReqAmp'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16WFbckFilt'], 'Pos"
		"ition');\n            orient = get_param( [gcb '/f16WFbckFilt'], 'Orientation');\n            delete_block(       [g"
		"cb '/f16WFbckFilt']);\n            add_block('built-in/Terminator', [gcb '/f16WFbckFilt'], 'Position', pos, 'Orienta"
		"tion', orient);\n\n            pos = get_param(    [gcb '/f16IQErrSign'], 'Position');\n            orient = get_par"
		"am( [gcb '/f16IQErrSign'], 'Orientation');\n            delete_block(       [gcb '/f16IQErrSign']);\n            add"
		"_block('built-in/Terminator', [gcb '/f16IQErrSign'], 'Position', pos, 'Orientation', orient);\n\n            pos = g"
		"et_param(    [gcb '/f16IQErr'], 'Position');\n            orient = get_param( [gcb '/f16IQErr'], 'Orientation');\n  "
		"          delete_block(       [gcb '/f16IQErr']);\n            add_block('built-in/Terminator', [gcb '/f16IQErr'], '"
		"Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWErr'], 'Position');\n        "
		"    orient = get_param( [gcb '/f16FWErr'], 'Orientation');\n            delete_block(       [gcb '/f16FWErr']);\n   "
		"         add_block('built-in/Terminator', [gcb '/f16FWErr'], 'Position', pos, 'Orientation', orient);\n\n           "
		" pos = get_param(    [gcb '/f16UQErr'], 'Position');\n            orient = get_param( [gcb '/f16UQErr'], 'Orientatio"
		"n');\n            delete_block(       [gcb '/f16UQErr']);\n            add_block('built-in/Terminator', [gcb '/f16UQ"
		"Err'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWErrFilt'], 'Position'"
		");\n            orient = get_param( [gcb '/f16FWErrFilt'], 'Orientation');\n            delete_block(       [gcb '/f"
		"16FWErrFilt']);\n            add_block('built-in/Terminator', [gcb '/f16FWErrFilt'], 'Position', pos, 'Orientation',"
		" orient);\n\n            pos = get_param(    [gcb '/f16FWAngle'], 'Position');\n            orient = get_param( [gcb"
		" '/f16FWAngle'], 'Orientation');\n            delete_block(       [gcb '/f16FWAngle']);\n            add_block('buil"
		"t-in/Terminator', [gcb '/f16FWAngle'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    ["
		"gcb '/f16FWSin'], 'Position');\n            orient = get_param( [gcb '/f16FWSin'], 'Orientation');\n            dele"
		"te_block(       [gcb '/f16FWSin']);\n            add_block('built-in/Terminator', [gcb '/f16FWSin'], 'Position', pos"
		", 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWCos'], 'Position');\n            orient = g"
		"et_param( [gcb '/f16FWCos'], 'Orientation');\n            delete_block(       [gcb '/f16FWCos']);\n            add_b"
		"lock('built-in/Terminator', [gcb '/f16FWCos'], 'Position', pos, 'Orientation', orient);\n\n            set_param([gc"
		"b '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n            set_param([gc"
		"b '/u16LimitFlagFW'], 'Port', '3');\n            set_param([gcb '/f32AccW_Out'], 'Port', '4');\n            set_para"
		"m([gcb '/f32AccFW_Out'], 'Port', '5');\n            set_param([gcb '/f32IntegPartK_1Q_Out'], 'Port', '6');\n        "
		"    set_param([gcb '/f16InK_1Q_Out'], 'Port', '7');\n            set_param([gcb '/f32IntegPartK_1FW_Out'], 'Port', '"
		"8');\n            set_param([gcb '/f16InK_1FW_Out'], 'Port', '9');\n            set_param([gcb '/f32State_Out'], 'Po"
		"rt', '10');\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_FWSpeedLoop_F16', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  19
		  Object {
		    $ObjectID		    46
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on','on','on','on','on','on','on','on','on"
		    "','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','on','off','off','off','off','off','off','off','off'"
		    ",'off','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    47
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    48
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide"
		    Cell		    "Show"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showDebugOutputs"
		    Prompt		    "Show debugging outputs"
		    Value		    "Hide"
		    Enabled		    "off"
		  }
		  Object {
		    $ObjectID		    49
		    Type		    "edit"
		    Name		    "u16NSamplesW"
		    Prompt		    "u16NSamplesW (velocity GDFLIB_FilterMA - recalculated smoothing factor)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    50
		    Type		    "edit"
		    Name		    "u16NSamplesFW"
		    Prompt		    "u16NSamplesFW (FW GDFLIB_FilterMA - recalculated smoothing factor)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    51
		    Type		    "edit"
		    Name		    "f16PropGainQ"
		    Prompt		    "f16PropGainQ (q-axis GFLIB_ControllerPIpAW - proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    52
		    Type		    "edit"
		    Name		    "f16IntegGainQ"
		    Prompt		    "f16IntegGainQ (q-axis GFLIB_ControllerPIpAW - integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    53
		    Type		    "edit"
		    Name		    "s16PropGainShiftQ"
		    Prompt		    "s16PropGainShiftQ (q-axis GFLIB_ControllerPIpAW - scaling bitwise shift applied to the proportional"
		    " gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    54
		    Type		    "edit"
		    Name		    "s16IntegGainShiftQ"
		    Prompt		    "s16IntegGainShiftQ (q-axis GFLIB_ControllerPIpAW - scaling bitwise shift applied to the integral ga"
		    "in)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    55
		    Type		    "edit"
		    Name		    "f16LowerLimitQ"
		    Prompt		    "f16LowerLimitQ (q-axis GFLIB_ControllerPIpAW - lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    56
		    Type		    "edit"
		    Name		    "f16UpperLimitQ"
		    Prompt		    "f16UpperLimitQ (q-axis GFLIB_ControllerPIpAW - upper limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    57
		    Type		    "edit"
		    Name		    "f16PropGainFW"
		    Prompt		    "f16PropGainFW (FW GFLIB_ControllerPIpAW - proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    58
		    Type		    "edit"
		    Name		    "f16IntegGainFW"
		    Prompt		    "f16IntegGainFW (FW GFLIB_ControllerPIpAW - integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    59
		    Type		    "edit"
		    Name		    "s16PropGainShiftFW"
		    Prompt		    "s16PropGainShiftFW (FW GFLIB_ControllerPIpAW - scaling bitwise shift applied to the proportional ga"
		    "in)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    60
		    Type		    "edit"
		    Name		    "s16IntegGainShiftFW"
		    Prompt		    "s16IntegGainShiftFW (FW GFLIB_ControllerPIpAW - scaling bitwise shift applied to the integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    61
		    Type		    "edit"
		    Name		    "f16LowerLimitFW"
		    Prompt		    "f16LowerLimitFW (FW GFLIB_ControllerPIpAW - lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    62
		    Type		    "edit"
		    Name		    "f16UpperLimitFW"
		    Prompt		    "f16UpperLimitFW (FW GFLIB_ControllerPIpAW - upper limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    63
		    Type		    "edit"
		    Name		    "f32RampUp"
		    Prompt		    "f32RampUp (Ramp up increment coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    64
		    Type		    "edit"
		    Name		    "f32RampDown"
		    Prompt		    "f32RampDown (Ramp decrement coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_FWSpeedLoop_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"110"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16VelocityReq"
		  SID			  "5:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16VelocityFbck"
		  SID			  "5:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16IQFbck"
		  SID			  "5:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16UQReq"
		  SID			  "5:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16UQLim"
		  SID			  "5:10"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  12
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16FilterMAWOut_preset"
		  SID			  "5:11"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  13
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "6"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16FilterMAFWOut_preset"
		  SID			  "5:12"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  14
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "7"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16ControllerPIpAWQOut_preset"
		  SID			  "5:13"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  15
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "8"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16ControllerPIpAWFWOut_preset"
		  SID			  "5:14"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  16
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "9"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32RampOut_preset"
		  SID			  "5:15"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  17
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "10"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "5:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_FWSpeedLoop_SF"
		  SID			  "5:5"
		  Ports			  [34, 22]
		  Position		  [135, 125, 285, 290]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_FWSpeedLoop_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,showDebugOutputs,u16NSamplesW,u16NSamplesFW,f16PropGainQ,f16IntegGainQ"
		  ",s16PropGainShiftQ,s16IntegGainShiftQ,f16LowerLimitQ,f16UpperLimitQ,f16PropGainFW,f16IntegGainFW,s16PropGainShiftF"
		  "W,s16IntegGainShiftFW,f16LowerLimitFW,f16UpperLimitFW,f32RampUp,f32RampDown"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "5:62"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  64
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    65
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "5:65"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  65
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    66
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_FWSpeedLoop_BAM_F16.mdl');text(10,75,'PMSM Speed Loop with Field Weakening.');t"
		    "ext(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16FWAngle"
		  SID			  "5:108"
		  Position		  [340, 678, 370, 692]
		  ZOrder		  106
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16FWCos"
		  SID			  "5:110"
		  Position		  [340, 758, 370, 772]
		  ZOrder		  108
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16FWErr"
		  SID			  "5:105"
		  Position		  [340, 558, 370, 572]
		  ZOrder		  103
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16FWErrFilt"
		  SID			  "5:107"
		  Position		  [340, 638, 370, 652]
		  ZOrder		  105
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16FWSin"
		  SID			  "5:109"
		  Position		  [340, 718, 370, 732]
		  ZOrder		  107
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16IDQReqAmp"
		  SID			  "5:101"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  99
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16IQErr"
		  SID			  "5:104"
		  Position		  [340, 518, 370, 532]
		  ZOrder		  102
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16IQErrSign"
		  SID			  "5:103"
		  Position		  [340, 478, 370, 492]
		  ZOrder		  101
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IQReqK_1"
		  SID			  "5:84"
		  Position		  [40, 1238, 70, 1252]
		  ZOrder		  82
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InK_1FW"
		  SID			  "5:90"
		  Position		  [40, 1478, 70, 1492]
		  ZOrder		  88
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InK_1FW_Out"
		  SID			  "5:97"
		  Position		  [340, 998, 370, 1012]
		  ZOrder		  95
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InK_1Q"
		  SID			  "5:88"
		  Position		  [40, 1398, 70, 1412]
		  ZOrder		  86
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InK_1Q_Out"
		  SID			  "5:95"
		  Position		  [340, 918, 370, 932]
		  ZOrder		  93
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IntegGainFW"
		  SID			  "5:77"
		  Position		  [40, 958, 70, 972]
		  ZOrder		  75
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IntegGainQ"
		  SID			  "5:71"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  69
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimitFW"
		  SID			  "5:80"
		  Position		  [40, 1078, 70, 1092]
		  ZOrder		  78
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimitQ"
		  SID			  "5:74"
		  Position		  [40, 838, 70, 852]
		  ZOrder		  72
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16PropGainFW"
		  SID			  "5:76"
		  Position		  [40, 918, 70, 932]
		  ZOrder		  74
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16PropGainQ"
		  SID			  "5:70"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  68
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16UQErr"
		  SID			  "5:106"
		  Position		  [340, 598, 370, 612]
		  ZOrder		  104
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimitFW"
		  SID			  "5:81"
		  Position		  [40, 1118, 70, 1132]
		  ZOrder		  79
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimitQ"
		  SID			  "5:75"
		  Position		  [40, 878, 70, 892]
		  ZOrder		  73
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16WErr"
		  SID			  "5:100"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  98
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16WFbckFilt"
		  SID			  "5:102"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  100
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16WReqFilt"
		  SID			  "5:99"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  97
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32AccFW"
		  SID			  "5:86"
		  Position		  [40, 1318, 70, 1332]
		  ZOrder		  84
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32AccFW_Out"
		  SID			  "5:93"
		  Position		  [340, 838, 370, 852]
		  ZOrder		  91
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32AccW"
		  SID			  "5:85"
		  Position		  [40, 1278, 70, 1292]
		  ZOrder		  83
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32AccW_Out"
		  SID			  "5:92"
		  Position		  [340, 798, 370, 812]
		  ZOrder		  90
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1FW"
		  SID			  "5:89"
		  Position		  [40, 1438, 70, 1452]
		  ZOrder		  87
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1FW_Out"
		  SID			  "5:96"
		  Position		  [340, 958, 370, 972]
		  ZOrder		  94
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1Q"
		  SID			  "5:87"
		  Position		  [40, 1358, 70, 1372]
		  ZOrder		  85
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1Q_Out"
		  SID			  "5:94"
		  Position		  [340, 878, 370, 892]
		  ZOrder		  92
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32RampDown"
		  SID			  "5:83"
		  Position		  [40, 1198, 70, 1212]
		  ZOrder		  81
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32RampUp"
		  SID			  "5:82"
		  Position		  [40, 1158, 70, 1172]
		  ZOrder		  80
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32State"
		  SID			  "5:91"
		  Position		  [40, 1518, 70, 1532]
		  ZOrder		  89
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32State_Out"
		  SID			  "5:98"
		  Position		  [340, 1038, 370, 1052]
		  ZOrder		  96
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShiftFW"
		  SID			  "5:79"
		  Position		  [40, 1038, 70, 1052]
		  ZOrder		  77
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShiftQ"
		  SID			  "5:73"
		  Position		  [40, 798, 70, 812]
		  ZOrder		  71
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShiftFW"
		  SID			  "5:78"
		  Position		  [40, 998, 70, 1012]
		  ZOrder		  76
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShiftQ"
		  SID			  "5:72"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  70
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NSamplesFW"
		  SID			  "5:69"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  67
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NSamplesW"
		  SID			  "5:68"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  66
		}
		Block {
		  BlockType		  Outport
		  Name			  "pIDQReq"
		  SID			  "5:40"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  42
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlagQ"
		  SID			  "5:41"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  43
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlagFW"
		  SID			  "5:42"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  44
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  22
		  DstBlock		  "f32State_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  21
		  DstBlock		  "f16InK_1FW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  20
		  DstBlock		  "f32IntegPartK_1FW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  19
		  DstBlock		  "f16InK_1Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  18
		  DstBlock		  "f32IntegPartK_1Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  17
		  DstBlock		  "f32AccFW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  16
		  DstBlock		  "f32AccW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  15
		  DstBlock		  "f16FWCos"
		  DstPort		  1
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  14
		  DstBlock		  "f16FWSin"
		  DstPort		  1
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  13
		  DstBlock		  "f16FWAngle"
		  DstPort		  1
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  12
		  DstBlock		  "f16FWErrFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  11
		  DstBlock		  "f16UQErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  10
		  DstBlock		  "f16FWErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  9
		  DstBlock		  "f16IQErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  8
		  DstBlock		  "f16IQErrSign"
		  DstPort		  1
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  7
		  DstBlock		  "f16WFbckFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  6
		  DstBlock		  "f16IDQReqAmp"
		  DstPort		  1
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  5
		  DstBlock		  "f16WErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  4
		  DstBlock		  "f16WReqFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  3
		  DstBlock		  "u16LimitFlagFW"
		  DstPort		  1
		}
		Line {
		  ZOrder		  21
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlagQ"
		  DstPort		  1
		}
		Line {
		  ZOrder		  22
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  1
		  DstBlock		  "pIDQReq"
		  DstPort		  1
		}
		Line {
		  ZOrder		  23
		  SrcBlock		  "f32State"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  34
		}
		Line {
		  ZOrder		  24
		  SrcBlock		  "f16InK_1FW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  33
		}
		Line {
		  ZOrder		  25
		  SrcBlock		  "f32IntegPartK_1FW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  32
		}
		Line {
		  ZOrder		  26
		  SrcBlock		  "f16InK_1Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  31
		}
		Line {
		  ZOrder		  27
		  SrcBlock		  "f32IntegPartK_1Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  30
		}
		Line {
		  ZOrder		  28
		  SrcBlock		  "f32AccFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  29
		}
		Line {
		  ZOrder		  29
		  SrcBlock		  "f32AccW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  28
		}
		Line {
		  ZOrder		  30
		  SrcBlock		  "f16IQReqK_1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  27
		}
		Line {
		  ZOrder		  31
		  SrcBlock		  "f32RampDown"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  26
		}
		Line {
		  ZOrder		  32
		  SrcBlock		  "f32RampUp"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  25
		}
		Line {
		  ZOrder		  33
		  SrcBlock		  "f16UpperLimitFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  24
		}
		Line {
		  ZOrder		  34
		  SrcBlock		  "f16LowerLimitFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  23
		}
		Line {
		  ZOrder		  35
		  SrcBlock		  "s16IntegGainShiftFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  22
		}
		Line {
		  ZOrder		  36
		  SrcBlock		  "s16PropGainShiftFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  21
		}
		Line {
		  ZOrder		  37
		  SrcBlock		  "f16IntegGainFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  20
		}
		Line {
		  ZOrder		  38
		  SrcBlock		  "f16PropGainFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  19
		}
		Line {
		  ZOrder		  39
		  SrcBlock		  "f16UpperLimitQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  18
		}
		Line {
		  ZOrder		  40
		  SrcBlock		  "f16LowerLimitQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  17
		}
		Line {
		  ZOrder		  41
		  SrcBlock		  "s16IntegGainShiftQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  16
		}
		Line {
		  ZOrder		  42
		  SrcBlock		  "s16PropGainShiftQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  43
		  SrcBlock		  "f16IntegGainQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  44
		  SrcBlock		  "f16PropGainQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  45
		  SrcBlock		  "u16NSamplesFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  46
		  SrcBlock		  "u16NSamplesW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  47
		  SrcBlock		  "f32RampOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  48
		  SrcBlock		  "f16ControllerPIpAWFWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  49
		  SrcBlock		  "f16ControllerPIpAWQOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  50
		  SrcBlock		  "f16FilterMAFWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  51
		  SrcBlock		  "f16FilterMAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  52
		  SrcBlock		  "f16UQLim"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  53
		  SrcBlock		  "f16UQReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  54
		  SrcBlock		  "f16IQFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  55
		  SrcBlock		  "f16VelocityFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  56
		  SrcBlock		  "f16VelocityReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_FW_F16"
	      SID		      "6"
	      Ports		      [7, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 610, 215, 810]
	      ZOrder		      11
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		67
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_FW_F16"
		Description		"Field Weakening controller for the PMSM field-oriented control algorithm in 16-bit fixed-point fractio"
		"nal implementation. This block supports re-initialization of the internal state during simulation. If the block is r"
		"eset, the output of the MA filter and PI controller will be aligned with the inputs f16FilterMAFWOut_preset and f16C"
		"ontrollerPIpAWFWOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/u16NSamples'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/u16NSamples'], 'Position');\n        orient = get_para"
		"m( [gcb, '/u16NSamples'], 'Orientation');\n        delete_block(       [gcb, '/u16NSamples']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/u16NSamples'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/f16PropGain'], 'Position');\n        orient = get_param( [gcb, '/f16PropGain'], 'Orientation');\n        delete_"
		"block(       [gcb, '/f16PropGain']);\n        add_block('built-in/Ground', [gcb, '/f16PropGain'], 'Position', pos, '"
		"Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16IntegGain'], 'Position');\n        orient = get_par"
		"am( [gcb, '/f16IntegGain'], 'Orientation');\n        delete_block(       [gcb, '/f16IntegGain']);\n        add_block"
		"('built-in/Ground', [gcb, '/f16IntegGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    "
		"[gcb, '/s16PropGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16PropGainShift'], 'Orientation');\n "
		"       delete_block(       [gcb, '/s16PropGainShift']);\n        add_block('built-in/Ground', [gcb, '/s16PropGainShi"
		"ft'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16IntegGainShift'], 'Position"
		"');\n        orient = get_param( [gcb, '/s16IntegGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s"
		"16IntegGainShift']);\n        add_block('built-in/Ground', [gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientatio"
		"n', orient);\n\n        pos = get_param(    [gcb, '/f16LowerLimit'], 'Position');\n        orient = get_param( [gcb,"
		" '/f16LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimit']);\n        add_block('built"
		"-in/Ground', [gcb, '/f16LowerLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, "
		"'/f16UpperLimit'], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimit'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/f16UpperLimit']);\n        add_block('built-in/Ground', [gcb, '/f16UpperLimit'], 'Position', "
		"pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16IQReqK_1'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/f16IQReqK_1'], 'Orientation');\n        delete_block(       [gcb, '/f16IQReqK_1']);\n        add_bl"
		"ock('built-in/Ground', [gcb, '/f16IQReqK_1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(  "
		"  [gcb, '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/f32Acc'], 'Orientation');\n        delete_bloc"
		"k(       [gcb, '/f32Acc']);\n        add_block('built-in/Ground', [gcb, '/f32Acc'], 'Position', pos, 'Orientation', "
		"orient);\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1'], 'Position');\n        orient = get_param( [gcb, '"
		"/f32IntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegPartK_1']);\n        add_block('bui"
		"lt-in/Ground', [gcb, '/f32IntegPartK_1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [g"
		"cb, '/f16InK_1'], 'Position');\n        orient = get_param( [gcb, '/f16InK_1'], 'Orientation');\n        delete_bloc"
		"k(       [gcb, '/f16InK_1']);\n        add_block('built-in/Ground', [gcb, '/f16InK_1'], 'Position', pos, 'Orientatio"
		"n', orient);\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n        orient = get_param( [gcb '/"
		"f32Acc_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n        add_block('built-in/Termin"
		"ator', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IntegP"
		"artK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1_Out'], 'Orientation');\n        delet"
		"e_block(       [gcb '/f32IntegPartK_1_Out']);\n        add_block('built-in/Terminator', [gcb '/f32IntegPartK_1_Out']"
		", 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InK_1_Out'], 'Position');\n     "
		"   orient = get_param( [gcb '/f16InK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InK_1_Out']);\n"
		"        add_block('built-in/Terminator', [gcb '/f16InK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n      "
		"  if strcmp(get_param([gcb '/f16IQErrSign'], 'BlockType'), 'Outport')\n            pos = get_param(    [gcb '/f16IQE"
		"rrSign'], 'Position');\n            orient = get_param( [gcb '/f16IQErrSign'], 'Orientation');\n            delete_b"
		"lock(       [gcb '/f16IQErrSign']);\n            add_block('built-in/Terminator', [gcb '/f16IQErrSign'], 'Position',"
		" pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16IQErr'], 'Position');\n            orient"
		" = get_param( [gcb '/f16IQErr'], 'Orientation');\n            delete_block(       [gcb '/f16IQErr']);\n            a"
		"dd_block('built-in/Terminator', [gcb '/f16IQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get"
		"_param(    [gcb '/f16FWErr'], 'Position');\n            orient = get_param( [gcb '/f16FWErr'], 'Orientation');\n    "
		"        delete_block(       [gcb '/f16FWErr']);\n            add_block('built-in/Terminator', [gcb '/f16FWErr'], 'Po"
		"sition', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16UQErr'], 'Position');\n          "
		"  orient = get_param( [gcb '/f16UQErr'], 'Orientation');\n            delete_block(       [gcb '/f16UQErr']);\n     "
		"       add_block('built-in/Terminator', [gcb '/f16UQErr'], 'Position', pos, 'Orientation', orient);\n\n            p"
		"os = get_param(    [gcb '/f16FWErrFilt'], 'Position');\n            orient = get_param( [gcb '/f16FWErrFilt'], 'Orie"
		"ntation');\n            delete_block(       [gcb '/f16FWErrFilt']);\n            add_block('built-in/Terminator', [g"
		"cb '/f16FWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWAngle']"
		", 'Position');\n            orient = get_param( [gcb '/f16FWAngle'], 'Orientation');\n            delete_block(     "
		"  [gcb '/f16FWAngle']);\n            add_block('built-in/Terminator', [gcb '/f16FWAngle'], 'Position', pos, 'Orienta"
		"tion', orient);\n\n            pos = get_param(    [gcb '/f16FWSin'], 'Position');\n            orient = get_param( "
		"[gcb '/f16FWSin'], 'Orientation');\n            delete_block(       [gcb '/f16FWSin']);\n            add_block('buil"
		"t-in/Terminator', [gcb '/f16FWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gc"
		"b '/f16FWCos'], 'Position');\n            orient = get_param( [gcb '/f16FWCos'], 'Orientation');\n            delete"
		"_block(       [gcb '/f16FWCos']);\n            add_block('built-in/Terminator', [gcb '/f16FWCos'], 'Position', pos, "
		"'Orientation', orient);\n\n        end\n\n        set_param([gcb '/f16IDQReqAmp'], 'Port', '1');\n        set_param("
		"[gcb '/f16VelocityFbck'], 'Port', '2');\n        set_param([gcb '/f16IQFbck'], 'Port', '3');\n        set_param([gcb"
		" '/f16UQReq'], 'Port', '4');\n        set_param([gcb '/f16UQLim'], 'Port', '5');\n        set_param([gcb '/f16Filter"
		"MAFWOut_preset'], 'Port', '6');\n        set_param([gcb '/f16ControllerPIpAWFWOut_preset'], 'Port', '7');\n\n       "
		" set_param([gcb '/pIDQReq'], 'Port', '1');\n        set_param([gcb '/u16LimitFlag'], 'Port', '2');\n\n        set_pa"
		"ram(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) >"
		" 200\n          height = 200;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height"
		"])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/u16NSamples'], 'BlockTyp"
		"e'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/u16NSamples'], '"
		"Position');\n        orient = get_param( [gcb, '/u16NSamples'], 'Orientation');\n        delete_block(       [gcb, '"
		"/u16NSamples']);\n        add_block('built-in/Inport', [gcb, '/u16NSamples'], 'Position', pos, 'Orientation', orient"
		", 'OutDataTypeStr', 'uint16');\n\n        pos = get_param(    [gcb, '/f16PropGain'], 'Position');\n        orient = "
		"get_param( [gcb, '/f16PropGain'], 'Orientation');\n        delete_block(       [gcb, '/f16PropGain']);\n        add_"
		"block('built-in/Inport', [gcb, '/f16PropGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n"
		"\n        pos = get_param(    [gcb, '/f16IntegGain'], 'Position');\n        orient = get_param( [gcb, '/f16IntegGain"
		"'], 'Orientation');\n        delete_block(       [gcb, '/f16IntegGain']);\n        add_block('built-in/Inport', [gcb"
		", '/f16IntegGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param( "
		"   [gcb, '/s16PropGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16PropGainShift'], 'Orientation');"
		"\n        delete_block(       [gcb, '/s16PropGainShift']);\n        add_block('built-in/Inport', [gcb, '/s16PropGain"
		"Shift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/"
		"s16IntegGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16IntegGainShift'], 'Orientation');\n       "
		" delete_block(       [gcb, '/s16IntegGainShift']);\n        add_block('built-in/Inport', [gcb, '/s16IntegGainShift']"
		", 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16Lowe"
		"rLimit'], 'Position');\n        orient = get_param( [gcb, '/f16LowerLimit'], 'Orientation');\n        delete_block( "
		"      [gcb, '/f16LowerLimit']);\n        add_block('built-in/Inport', [gcb, '/f16LowerLimit'], 'Position', pos, 'Ori"
		"entation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16UpperLimit'], 'Position');\n"
		"        orient = get_param( [gcb, '/f16UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16UpperLi"
		"mit']);\n        add_block('built-in/Inport', [gcb, '/f16UpperLimit'], 'Position', pos, 'Orientation', orient, 'OutD"
		"ataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16IQReqK_1'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f16IQReqK_1'], 'Orientation');\n        delete_block(       [gcb, '/f16IQReqK_1']);\n        add_block('b"
		"uilt-in/Inport', [gcb, '/f16IQReqK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n     "
		"   pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/f32Acc'], 'Orientation');"
		"\n        delete_block(       [gcb, '/f32Acc']);\n        add_block('built-in/Inport', [gcb, '/f32Acc'], 'Position',"
		" pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1'], '"
		"Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n        delete_block(       [gc"
		"b, '/f32IntegPartK_1']);\n        add_block('built-in/Inport', [gcb, '/f32IntegPartK_1'], 'Position', pos, 'Orientat"
		"ion', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16InK_1'], 'Position');\n        o"
		"rient = get_param( [gcb, '/f16InK_1'], 'Orientation');\n        delete_block(       [gcb, '/f16InK_1']);\n        ad"
		"d_block('built-in/Inport', [gcb, '/f16InK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n"
		"\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n        orient = get_param( [gcb '/f32Acc_Out'], "
		"'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n        add_block('built-in/Outport', [gcb '/f32"
		"Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IntegPartK_1_Out'], 'Po"
		"sition');\n        orient = get_param( [gcb '/f32IntegPartK_1_Out'], 'Orientation');\n        delete_block(       [g"
		"cb '/f32IntegPartK_1_Out']);\n        add_block('built-in/Outport', [gcb '/f32IntegPartK_1_Out'], 'Position', pos, '"
		"Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InK_1_Out'], 'Position');\n        orient = get_para"
		"m( [gcb '/f16InK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InK_1_Out']);\n        add_block('b"
		"uilt-in/Outport', [gcb '/f16InK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        if (showDebugOutputs "
		"== 2) && (strcmp(get_param([gcb '/f16IQErrSign'], 'BlockType'), 'Terminator'))\n            pos = get_param(    [gcb"
		" '/f16IQErrSign'], 'Position');\n            orient = get_param( [gcb '/f16IQErrSign'], 'Orientation');\n           "
		" delete_block(       [gcb '/f16IQErrSign']);\n            add_block('built-in/Outport', [gcb '/f16IQErrSign'], 'Posi"
		"tion', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16IQErr'], 'Position');\n            "
		"orient = get_param( [gcb '/f16IQErr'], 'Orientation');\n            delete_block(       [gcb '/f16IQErr']);\n       "
		"     add_block('built-in/Outport', [gcb '/f16IQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = "
		"get_param(    [gcb '/f16FWErr'], 'Position');\n            orient = get_param( [gcb '/f16FWErr'], 'Orientation');\n "
		"           delete_block(       [gcb '/f16FWErr']);\n            add_block('built-in/Outport', [gcb '/f16FWErr'], 'Po"
		"sition', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16UQErr'], 'Position');\n          "
		"  orient = get_param( [gcb '/f16UQErr'], 'Orientation');\n            delete_block(       [gcb '/f16UQErr']);\n     "
		"       add_block('built-in/Outport', [gcb '/f16UQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos "
		"= get_param(    [gcb '/f16FWErrFilt'], 'Position');\n            orient = get_param( [gcb '/f16FWErrFilt'], 'Orienta"
		"tion');\n            delete_block(       [gcb '/f16FWErrFilt']);\n            add_block('built-in/Outport', [gcb '/f"
		"16FWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWAngle'], 'Pos"
		"ition');\n            orient = get_param( [gcb '/f16FWAngle'], 'Orientation');\n            delete_block(       [gcb"
		" '/f16FWAngle']);\n            add_block('built-in/Outport', [gcb '/f16FWAngle'], 'Position', pos, 'Orientation', or"
		"ient);\n\n            pos = get_param(    [gcb '/f16FWSin'], 'Position');\n            orient = get_param( [gcb '/f1"
		"6FWSin'], 'Orientation');\n            delete_block(       [gcb '/f16FWSin']);\n            add_block('built-in/Outp"
		"ort', [gcb '/f16FWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWCos"
		"'], 'Position');\n            orient = get_param( [gcb '/f16FWCos'], 'Orientation');\n            delete_block(     "
		"  [gcb '/f16FWCos']);\n            add_block('built-in/Outport', [gcb '/f16FWCos'], 'Position', pos, 'Orientation', "
		"orient);\n\n        end\n\n        set_param([gcb '/f16IDQReqAmp'], 'Port', '1');\n        set_param([gcb '/f16Veloc"
		"ityFbck'], 'Port', '2');\n        set_param([gcb '/f16IQFbck'], 'Port', '3');\n        set_param([gcb '/f16UQReq'], "
		"'Port', '4');\n        set_param([gcb '/f16UQLim'], 'Port', '5');\n        set_param([gcb '/f16FilterMAFWOut_preset'"
		"], 'Port', '6');\n        set_param([gcb '/f16ControllerPIpAWFWOut_preset'], 'Port', '7');\n        set_param([gcb '"
		"/u16NSamples'], 'Port', '8');\n        set_param([gcb '/f16PropGain'], 'Port', '9');\n        set_param([gcb '/f16In"
		"tegGain'], 'Port', '10');\n        set_param([gcb '/s16PropGainShift'], 'Port', '11');\n        set_param([gcb '/s16"
		"IntegGainShift'], 'Port', '12');\n        set_param([gcb '/f16LowerLimit'], 'Port', '13');\n        set_param([gcb '"
		"/f16UpperLimit'], 'Port', '14');\n        set_param([gcb '/f16IQReqK_1'], 'Port', '15');\n        set_param([gcb '/f"
		"32Acc'], 'Port', '16');\n        set_param([gcb '/f32IntegPartK_1'], 'Port', '17');\n        set_param([gcb '/f16InK"
		"_1'], 'Port', '18');\n\n        if (showDebugOutputs == 2)\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n "
		"           set_param([gcb '/u16LimitFlag'], 'Port', '2');\n            set_param([gcb '/f16IQErrSign'], 'Port', '3')"
		";\n            set_param([gcb '/f16IQErr'], 'Port', '4');\n            set_param([gcb '/f16FWErr'], 'Port', '5');\n "
		"           set_param([gcb '/f16UQErr'], 'Port', '6');\n            set_param([gcb '/f16FWErrFilt'], 'Port', '7');\n "
		"           set_param([gcb '/f16FWAngle'], 'Port', '8');\n            set_param([gcb '/f16FWSin'], 'Port', '9');\n   "
		"         set_param([gcb '/f16FWCos'], 'Port', '10');\n            set_param([gcb '/f32Acc_Out'], 'Port', '11');\n   "
		"         set_param([gcb '/f32IntegPartK_1_Out'], 'Port', '12');\n            set_param([gcb '/f16InK_1_Out'], 'Port'"
		", '13');\n        else\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16Limit"
		"Flag'], 'Port', '2');\n            set_param([gcb '/f32Acc_Out'], 'Port', '3');\n            set_param([gcb '/f32Int"
		"egPartK_1_Out'], 'Port', '4');\n            set_param([gcb '/f16InK_1_Out'], 'Port', '5');\n        end\n\n        s"
		"et_param(gcb,'MaskEnables',{'on','on','on','off','off','off','off','off','off','off'});\n\n        if (posblk(4) - p"
		"osblk(2)) < 475\n          height = 475;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posbl"
		"k(2)+height])\n        end\n    else\n        if (showDebugOutputs == 2) && (strcmp(get_param([gcb '/f16IQErrSign'],"
		" 'BlockType'), 'Terminator'))\n            % shown debugging outputs\n            pos = get_param(    [gcb '/f16IQEr"
		"rSign'], 'Position');\n            orient = get_param( [gcb '/f16IQErrSign'], 'Orientation');\n            delete_bl"
		"ock(       [gcb '/f16IQErrSign']);\n            add_block('built-in/Outport', [gcb '/f16IQErrSign'], 'Position', pos"
		", 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16IQErr'], 'Position');\n            orient = g"
		"et_param( [gcb '/f16IQErr'], 'Orientation');\n            delete_block(       [gcb '/f16IQErr']);\n            add_b"
		"lock('built-in/Outport', [gcb '/f16IQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param("
		"    [gcb '/f16FWErr'], 'Position');\n            orient = get_param( [gcb '/f16FWErr'], 'Orientation');\n           "
		" delete_block(       [gcb '/f16FWErr']);\n            add_block('built-in/Outport', [gcb '/f16FWErr'], 'Position', p"
		"os, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16UQErr'], 'Position');\n            orient ="
		" get_param( [gcb '/f16UQErr'], 'Orientation');\n            delete_block(       [gcb '/f16UQErr']);\n            add"
		"_block('built-in/Outport', [gcb '/f16UQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_para"
		"m(    [gcb '/f16FWErrFilt'], 'Position');\n            orient = get_param( [gcb '/f16FWErrFilt'], 'Orientation');\n "
		"           delete_block(       [gcb '/f16FWErrFilt']);\n            add_block('built-in/Outport', [gcb '/f16FWErrFil"
		"t'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWAngle'], 'Position');\n"
		"            orient = get_param( [gcb '/f16FWAngle'], 'Orientation');\n            delete_block(       [gcb '/f16FWAn"
		"gle']);\n            add_block('built-in/Outport', [gcb '/f16FWAngle'], 'Position', pos, 'Orientation', orient);\n\n"
		"            pos = get_param(    [gcb '/f16FWSin'], 'Position');\n            orient = get_param( [gcb '/f16FWSin'], "
		"'Orientation');\n            delete_block(       [gcb '/f16FWSin']);\n            add_block('built-in/Outport', [gcb"
		" '/f16FWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWCos'], 'Posit"
		"ion');\n            orient = get_param( [gcb '/f16FWCos'], 'Orientation');\n            delete_block(       [gcb '/f"
		"16FWCos']);\n            add_block('built-in/Outport', [gcb '/f16FWCos'], 'Position', pos, 'Orientation', orient);\n"
		"\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlag'], 'Port', '2');\n"
		"            set_param([gcb '/f16IQErrSign'], 'Port', '3');\n            set_param([gcb '/f16IQErr'], 'Port', '4');\n"
		"            set_param([gcb '/f16FWErr'], 'Port', '5');\n            set_param([gcb '/f16UQErr'], 'Port', '6');\n    "
		"        set_param([gcb '/f16FWErrFilt'], 'Port', '7');\n            set_param([gcb '/f16FWAngle'], 'Port', '8');\n  "
		"          set_param([gcb '/f16FWSin'], 'Port', '9');\n            set_param([gcb '/f16FWCos'], 'Port', '10');\n     "
		"       set_param([gcb '/f32Acc_Out'], 'Port', '11');\n            set_param([gcb '/f32IntegPartK_1_Out'], 'Port', '1"
		"2');\n            set_param([gcb '/f16InK_1_Out'], 'Port', '13');\n        elseif (showDebugOutputs == 1) && (strcmp"
		"(get_param([gcb '/f16IQErrSign'], 'BlockType'), 'Outport'))\n            % hidden debugging outputs\n            pos"
		" = get_param(    [gcb '/f16IQErrSign'], 'Position');\n            orient = get_param( [gcb '/f16IQErrSign'], 'Orient"
		"ation');\n            delete_block(       [gcb '/f16IQErrSign']);\n            add_block('built-in/Terminator', [gcb"
		" '/f16IQErrSign'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16IQErr'], 'P"
		"osition');\n            orient = get_param( [gcb '/f16IQErr'], 'Orientation');\n            delete_block(       [gcb"
		" '/f16IQErr']);\n            add_block('built-in/Terminator', [gcb '/f16IQErr'], 'Position', pos, 'Orientation', ori"
		"ent);\n\n            pos = get_param(    [gcb '/f16FWErr'], 'Position');\n            orient = get_param( [gcb '/f16"
		"FWErr'], 'Orientation');\n            delete_block(       [gcb '/f16FWErr']);\n            add_block('built-in/Termi"
		"nator', [gcb '/f16FWErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16UQE"
		"rr'], 'Position');\n            orient = get_param( [gcb '/f16UQErr'], 'Orientation');\n            delete_block(   "
		"    [gcb '/f16UQErr']);\n            add_block('built-in/Terminator', [gcb '/f16UQErr'], 'Position', pos, 'Orientati"
		"on', orient);\n\n            pos = get_param(    [gcb '/f16FWErrFilt'], 'Position');\n            orient = get_param"
		"( [gcb '/f16FWErrFilt'], 'Orientation');\n            delete_block(       [gcb '/f16FWErrFilt']);\n            add_b"
		"lock('built-in/Terminator', [gcb '/f16FWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get"
		"_param(    [gcb '/f16FWAngle'], 'Position');\n            orient = get_param( [gcb '/f16FWAngle'], 'Orientation');\n"
		"            delete_block(       [gcb '/f16FWAngle']);\n            add_block('built-in/Terminator', [gcb '/f16FWAngl"
		"e'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16FWSin'], 'Position');\n  "
		"          orient = get_param( [gcb '/f16FWSin'], 'Orientation');\n            delete_block(       [gcb '/f16FWSin'])"
		";\n            add_block('built-in/Terminator', [gcb '/f16FWSin'], 'Position', pos, 'Orientation', orient);\n\n     "
		"       pos = get_param(    [gcb '/f16FWCos'], 'Position');\n            orient = get_param( [gcb '/f16FWCos'], 'Orie"
		"ntation');\n            delete_block(       [gcb '/f16FWCos']);\n            add_block('built-in/Terminator', [gcb '"
		"/f16FWCos'], 'Position', pos, 'Orientation', orient);\n\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n    "
		"        set_param([gcb '/u16LimitFlag'], 'Port', '2');\n            set_param([gcb '/f32Acc_Out'], 'Port', '3');\n  "
		"          set_param([gcb '/f32IntegPartK_1_Out'], 'Port', '4');\n            set_param([gcb '/f16InK_1_Out'], 'Port'"
		", '5');\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_FW_F16', 'horizontalAlignment', 'center');\nif sh"
		"owStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)'], 'ho"
		"rizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  10
		  Object {
		    $ObjectID		    68
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnabl"
		    "es',{'on','on','on','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    69
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    70
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide"
		    Cell		    "Show"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showDebugOutputs"
		    Prompt		    "Show debugging outputs"
		    Value		    "Hide"
		    Enabled		    "off"
		  }
		  Object {
		    $ObjectID		    71
		    Type		    "edit"
		    Name		    "u16NSamples"
		    Prompt		    "u16NSamples (GDFLIB_FilterMA - recalculated smoothing factor)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    72
		    Type		    "edit"
		    Name		    "f16PropGain"
		    Prompt		    "f16PropGain (GFLIB_ControllerPIpAW - proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    73
		    Type		    "edit"
		    Name		    "f16IntegGain"
		    Prompt		    "f16IntegGain (GFLIB_ControllerPIpAW - integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    74
		    Type		    "edit"
		    Name		    "s16PropGainShift"
		    Prompt		    "s16PropGainShift (GFLIB_ControllerPIpAW - scaling bitwise shift applied to the proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    75
		    Type		    "edit"
		    Name		    "s16IntegGainShift"
		    Prompt		    "s16IntegGainShift (GFLIB_ControllerPIpAW - scaling bitwise shift applied to the integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    76
		    Type		    "edit"
		    Name		    "f16LowerLimit"
		    Prompt		    "f16LowerLimit (GFLIB_ControllerPIpAW - lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    77
		    Type		    "edit"
		    Name		    "f16UpperLimit"
		    Prompt		    "f16UpperLimit (GFLIB_ControllerPIpAW - upper limit)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_FW_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"64"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16IDQReqAmp"
		  SID			  "6:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16VelocityFbck"
		  SID			  "6:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16IQFbck"
		  SID			  "6:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16UQReq"
		  SID			  "6:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16UQLim"
		  SID			  "6:10"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  12
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16FilterMAFWOut_preset"
		  SID			  "6:11"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  13
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "6"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16ControllerPIpAWFWOut_preset"
		  SID			  "6:12"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  14
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "7"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "6:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_FW_SF"
		  SID			  "6:5"
		  Ports			  [18, 13]
		  Position		  [135, 165, 285, 250]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_FW_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,showDebugOutputs,u16NSamples,f16PropGain,f16IntegGain,s16PropGainShift"
		  ",s16IntegGainShift,f16LowerLimit,f16UpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "6:37"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  39
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    78
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "6:40"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  40
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    79
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_FW_BAM_F16.mdl');text(10,75,'PMSM Field Weakening Controller');text(10,60,'NXP "
		    "2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16FWAngle"
		  SID			  "6:62"
		  Position		  [340, 478, 370, 492]
		  ZOrder		  60
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16FWCos"
		  SID			  "6:64"
		  Position		  [340, 558, 370, 572]
		  ZOrder		  62
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16FWErr"
		  SID			  "6:59"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  57
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16FWErrFilt"
		  SID			  "6:61"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  59
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16FWSin"
		  SID			  "6:63"
		  Position		  [340, 518, 370, 532]
		  ZOrder		  61
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16IQErr"
		  SID			  "6:58"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  56
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16IQErrSign"
		  SID			  "6:57"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  55
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IQReqK_1"
		  SID			  "6:50"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  48
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InK_1"
		  SID			  "6:53"
		  Position		  [40, 878, 70, 892]
		  ZOrder		  51
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InK_1_Out"
		  SID			  "6:56"
		  Position		  [340, 678, 370, 692]
		  ZOrder		  54
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IntegGain"
		  SID			  "6:45"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  43
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimit"
		  SID			  "6:48"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  46
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16PropGain"
		  SID			  "6:44"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  42
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16UQErr"
		  SID			  "6:60"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  58
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimit"
		  SID			  "6:49"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  47
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc"
		  SID			  "6:51"
		  Position		  [40, 798, 70, 812]
		  ZOrder		  49
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Out"
		  SID			  "6:54"
		  Position		  [340, 598, 370, 612]
		  ZOrder		  52
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1"
		  SID			  "6:52"
		  Position		  [40, 838, 70, 852]
		  ZOrder		  50
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1_Out"
		  SID			  "6:55"
		  Position		  [340, 638, 370, 652]
		  ZOrder		  53
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShift"
		  SID			  "6:47"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  45
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShift"
		  SID			  "6:46"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  44
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NSamples"
		  SID			  "6:43"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  41
		}
		Block {
		  BlockType		  Outport
		  Name			  "pIDQReq"
		  SID			  "6:24"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  26
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlag"
		  SID			  "6:25"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  27
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  13
		  DstBlock		  "f16InK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  12
		  DstBlock		  "f32IntegPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  11
		  DstBlock		  "f32Acc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  10
		  DstBlock		  "f16FWCos"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  9
		  DstBlock		  "f16FWSin"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  8
		  DstBlock		  "f16FWAngle"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  7
		  DstBlock		  "f16FWErrFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  6
		  DstBlock		  "f16UQErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  5
		  DstBlock		  "f16FWErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  4
		  DstBlock		  "f16IQErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  3
		  DstBlock		  "f16IQErrSign"
		  DstPort		  1
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlag"
		  DstPort		  1
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  1
		  DstBlock		  "pIDQReq"
		  DstPort		  1
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f16InK_1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  18
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f32IntegPartK_1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  17
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f32Acc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  16
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f16IQReqK_1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "f16UpperLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "f16LowerLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "s16IntegGainShift"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  21
		  SrcBlock		  "s16PropGainShift"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  22
		  SrcBlock		  "f16IntegGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  23
		  SrcBlock		  "f16PropGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  24
		  SrcBlock		  "u16NSamples"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  25
		  SrcBlock		  "f16ControllerPIpAWFWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  26
		  SrcBlock		  "f16FilterMAFWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  27
		  SrcBlock		  "f16UQLim"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  28
		  SrcBlock		  "f16UQReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  29
		  SrcBlock		  "f16IQFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  30
		  SrcBlock		  "f16VelocityFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  31
		  SrcBlock		  "f16IDQReqAmp"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_SpeedLoop_F16"
	      SID		      "7"
	      Ports		      [5, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 830, 250, 980]
	      ZOrder		      12
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		80
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_SpeedLoop_F16"
		Description		"Speed loop controller for the PMSM field-oriented control algorithm in 16-bit fixed-point fractional i"
		"mplementation. This block supports re-initialization of the internal state during simulation. If the block is reset,"
		" the outputs of the MA filter, PI controller, and the ramp will be aligned with the inputs f16FilterMAWOut_preset, f"
		"16ControllerPIpAWQOut_preset, and f32RampOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/u16NSamplesW'], 'BlockType'), 'Inport')\n        posblk = get_"
		"param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/u16NSamplesW'], 'Position');\n        orient = get_pa"
		"ram( [gcb, '/u16NSamplesW'], 'Orientation');\n        delete_block(       [gcb, '/u16NSamplesW']);\n        add_bloc"
		"k('built-in/Ground', [gcb, '/u16NSamplesW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(   "
		" [gcb, '/f16PropGainQ'], 'Position');\n        orient = get_param( [gcb, '/f16PropGainQ'], 'Orientation');\n        "
		"delete_block(       [gcb, '/f16PropGainQ']);\n        add_block('built-in/Ground', [gcb, '/f16PropGainQ'], 'Position"
		"', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16IntegGainQ'], 'Position');\n        orient"
		" = get_param( [gcb, '/f16IntegGainQ'], 'Orientation');\n        delete_block(       [gcb, '/f16IntegGainQ']);\n     "
		"   add_block('built-in/Ground', [gcb, '/f16IntegGainQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = g"
		"et_param(    [gcb, '/s16PropGainShiftQ'], 'Position');\n        orient = get_param( [gcb, '/s16PropGainShiftQ'], 'Or"
		"ientation');\n        delete_block(       [gcb, '/s16PropGainShiftQ']);\n        add_block('built-in/Ground', [gcb, "
		"'/s16PropGainShiftQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16IntegGainS"
		"hiftQ'], 'Position');\n        orient = get_param( [gcb, '/s16IntegGainShiftQ'], 'Orientation');\n        delete_blo"
		"ck(       [gcb, '/s16IntegGainShiftQ']);\n        add_block('built-in/Ground', [gcb, '/s16IntegGainShiftQ'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16LowerLimitQ'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/f16LowerLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimitQ']);\n"
		"        add_block('built-in/Ground', [gcb, '/f16LowerLimitQ'], 'Position', pos, 'Orientation', orient);\n\n        p"
		"os = get_param(    [gcb, '/f16UpperLimitQ'], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimitQ'], 'Or"
		"ientation');\n        delete_block(       [gcb, '/f16UpperLimitQ']);\n        add_block('built-in/Ground', [gcb, '/f"
		"16UpperLimitQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32RampUp'], 'Posit"
		"ion');\n        orient = get_param( [gcb, '/f32RampUp'], 'Orientation');\n        delete_block(       [gcb, '/f32Ram"
		"pUp']);\n        add_block('built-in/Ground', [gcb, '/f32RampUp'], 'Position', pos, 'Orientation', orient);\n\n     "
		"   pos = get_param(    [gcb, '/f32RampDown'], 'Position');\n        orient = get_param( [gcb, '/f32RampDown'], 'Orie"
		"ntation');\n        delete_block(       [gcb, '/f32RampDown']);\n        add_block('built-in/Ground', [gcb, '/f32Ram"
		"pDown'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32AccW'], 'Position');\n  "
		"      orient = get_param( [gcb, '/f32AccW'], 'Orientation');\n        delete_block(       [gcb, '/f32AccW']);\n     "
		"   add_block('built-in/Ground', [gcb, '/f32AccW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_par"
		"am(    [gcb, '/f32IntegPartK_1Q'], 'Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1Q'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/f32IntegPartK_1Q']);\n        add_block('built-in/Ground', [gcb, '/f32Inte"
		"gPartK_1Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16InK_1Q'], 'Position'"
		");\n        orient = get_param( [gcb, '/f16InK_1Q'], 'Orientation');\n        delete_block(       [gcb, '/f16InK_1Q'"
		"]);\n        add_block('built-in/Ground', [gcb, '/f16InK_1Q'], 'Position', pos, 'Orientation', orient);\n\n        p"
		"os = get_param(    [gcb, '/f32State'], 'Position');\n        orient = get_param( [gcb, '/f32State'], 'Orientation');"
		"\n        delete_block(       [gcb, '/f32State']);\n        add_block('built-in/Ground', [gcb, '/f32State'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f32AccW_Out'], 'Position');\n        orien"
		"t = get_param( [gcb '/f32AccW_Out'], 'Orientation');\n        delete_block(       [gcb '/f32AccW_Out']);\n        ad"
		"d_block('built-in/Terminator', [gcb '/f32AccW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_p"
		"aram(    [gcb '/f32IntegPartK_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1Q_Out'], 'Or"
		"ientation');\n        delete_block(       [gcb '/f32IntegPartK_1Q_Out']);\n        add_block('built-in/Terminator', "
		"[gcb '/f32IntegPartK_1Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InK"
		"_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/f16InK_1Q_Out'], 'Orientation');\n        delete_block( "
		"      [gcb '/f16InK_1Q_Out']);\n        add_block('built-in/Terminator', [gcb '/f16InK_1Q_Out'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb '/f32State_Out'], 'Position');\n        orient = get_param"
		"( [gcb '/f32State_Out'], 'Orientation');\n        delete_block(       [gcb '/f32State_Out']);\n        add_block('bu"
		"ilt-in/Terminator', [gcb '/f32State_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        if strcmp(get_param"
		"([gcb '/f16WReqFilt'], 'BlockType'), 'Outport')\n            pos = get_param(    [gcb '/f16WReqFilt'], 'Position');\n"
		"            orient = get_param( [gcb '/f16WReqFilt'], 'Orientation');\n            delete_block(       [gcb '/f16WRe"
		"qFilt']);\n            add_block('built-in/Terminator', [gcb '/f16WReqFilt'], 'Position', pos, 'Orientation', orient"
		");\n\n            pos = get_param(    [gcb '/f16WErr'], 'Position');\n            orient = get_param( [gcb '/f16WErr"
		"'], 'Orientation');\n            delete_block(       [gcb '/f16WErr']);\n            add_block('built-in/Terminator'"
		", [gcb '/f16WErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16WFbckFilt'"
		"], 'Position');\n            orient = get_param( [gcb '/f16WFbckFilt'], 'Orientation');\n            delete_block(  "
		"     [gcb '/f16WFbckFilt']);\n            add_block('built-in/Terminator', [gcb '/f16WFbckFilt'], 'Position', pos, '"
		"Orientation', orient);\n\n        end\n\n        set_param([gcb '/f16VelocityReq'], 'Port', '1');\n        set_param"
		"([gcb '/f16VelocityFbck'], 'Port', '2');\n        set_param([gcb '/f16FilterMAWOut_preset'], 'Port', '3');\n        "
		"set_param([gcb '/f16ControllerPIpAWQOut_preset'], 'Port', '4');\n        set_param([gcb '/f32RampOut_preset'], 'Port"
		"', '5');\n\n        set_param([gcb '/pIDQReq'], 'Port', '1');\n        set_param([gcb '/u16LimitFlagQ'], 'Port', '2'"
		");\n\n        set_param(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on','on','on'});\n\n      "
		"  if (posblk(4) - posblk(2)) > 150\n          height = 150;\n          set_param(gcb,'Position',[posblk(1), posblk(2"
		"), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param(["
		"gcb '/u16NSamplesW'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_par"
		"am(    [gcb, '/u16NSamplesW'], 'Position');\n        orient = get_param( [gcb, '/u16NSamplesW'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/u16NSamplesW']);\n        add_block('built-in/Inport', [gcb, '/u16NSamplesW'], 'Po"
		"sition', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n        pos = get_param(    [gcb, '/f16PropGain"
		"Q'], 'Position');\n        orient = get_param( [gcb, '/f16PropGainQ'], 'Orientation');\n        delete_block(       "
		"[gcb, '/f16PropGainQ']);\n        add_block('built-in/Inport', [gcb, '/f16PropGainQ'], 'Position', pos, 'Orientation"
		"', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16IntegGainQ'], 'Position');\n       "
		" orient = get_param( [gcb, '/f16IntegGainQ'], 'Orientation');\n        delete_block(       [gcb, '/f16IntegGainQ']);"
		"\n        add_block('built-in/Inport', [gcb, '/f16IntegGainQ'], 'Position', pos, 'Orientation', orient, 'OutDataType"
		"Str', 'int16');\n\n        pos = get_param(    [gcb, '/s16PropGainShiftQ'], 'Position');\n        orient = get_param"
		"( [gcb, '/s16PropGainShiftQ'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShiftQ']);\n        a"
		"dd_block('built-in/Inport', [gcb, '/s16PropGainShiftQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', '"
		"int16');\n\n        pos = get_param(    [gcb, '/s16IntegGainShiftQ'], 'Position');\n        orient = get_param( [gcb"
		", '/s16IntegGainShiftQ'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShiftQ']);\n        add_b"
		"lock('built-in/Inport', [gcb, '/s16IntegGainShiftQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int"
		"16');\n\n        pos = get_param(    [gcb, '/f16LowerLimitQ'], 'Position');\n        orient = get_param( [gcb, '/f16"
		"LowerLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimitQ']);\n        add_block('built-in/"
		"Inport', [gcb, '/f16LowerLimitQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        po"
		"s = get_param(    [gcb, '/f16UpperLimitQ'], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimitQ'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/f16UpperLimitQ']);\n        add_block('built-in/Inport', [gcb, '/f1"
		"6UpperLimitQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    ["
		"gcb, '/f32RampUp'], 'Position');\n        orient = get_param( [gcb, '/f32RampUp'], 'Orientation');\n        delete_b"
		"lock(       [gcb, '/f32RampUp']);\n        add_block('built-in/Inport', [gcb, '/f32RampUp'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32RampDown'], 'Position');\n   "
		"     orient = get_param( [gcb, '/f32RampDown'], 'Orientation');\n        delete_block(       [gcb, '/f32RampDown']);"
		"\n        add_block('built-in/Inport', [gcb, '/f32RampDown'], 'Position', pos, 'Orientation', orient, 'OutDataTypeSt"
		"r', 'int32');\n\n        pos = get_param(    [gcb, '/f32AccW'], 'Position');\n        orient = get_param( [gcb, '/f3"
		"2AccW'], 'Orientation');\n        delete_block(       [gcb, '/f32AccW']);\n        add_block('built-in/Inport', [gcb"
		", '/f32AccW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [g"
		"cb, '/f32IntegPartK_1Q'], 'Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1Q'], 'Orientation');\n   "
		"     delete_block(       [gcb, '/f32IntegPartK_1Q']);\n        add_block('built-in/Inport', [gcb, '/f32IntegPartK_1Q"
		"'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16In"
		"K_1Q'], 'Position');\n        orient = get_param( [gcb, '/f16InK_1Q'], 'Orientation');\n        delete_block(       "
		"[gcb, '/f16InK_1Q']);\n        add_block('built-in/Inport', [gcb, '/f16InK_1Q'], 'Position', pos, 'Orientation', ori"
		"ent, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32State'], 'Position');\n        orient = g"
		"et_param( [gcb, '/f32State'], 'Orientation');\n        delete_block(       [gcb, '/f32State']);\n        add_block('"
		"built-in/Inport', [gcb, '/f32State'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n     "
		"   pos = get_param(    [gcb '/f32AccW_Out'], 'Position');\n        orient = get_param( [gcb '/f32AccW_Out'], 'Orient"
		"ation');\n        delete_block(       [gcb '/f32AccW_Out']);\n        add_block('built-in/Outport', [gcb '/f32AccW_O"
		"ut'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IntegPartK_1Q_Out'], 'Positi"
		"on');\n        orient = get_param( [gcb '/f32IntegPartK_1Q_Out'], 'Orientation');\n        delete_block(       [gcb "
		"'/f32IntegPartK_1Q_Out']);\n        add_block('built-in/Outport', [gcb '/f32IntegPartK_1Q_Out'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb '/f16InK_1Q_Out'], 'Position');\n        orient = get_para"
		"m( [gcb '/f16InK_1Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InK_1Q_Out']);\n        add_block("
		"'built-in/Outport', [gcb '/f16InK_1Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    "
		"[gcb '/f32State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n        del"
		"ete_block(       [gcb '/f32State_Out']);\n        add_block('built-in/Outport', [gcb '/f32State_Out'], 'Position', p"
		"os, 'Orientation', orient);\n\n\n        if (showDebugOutputs == 2) && (strcmp(get_param([gcb '/f16WReqFilt'], 'Bloc"
		"kType'), 'Terminator'))\n            pos = get_param(    [gcb '/f16WReqFilt'], 'Position');\n            orient = ge"
		"t_param( [gcb '/f16WReqFilt'], 'Orientation');\n            delete_block(       [gcb '/f16WReqFilt']);\n            "
		"add_block('built-in/Outport', [gcb '/f16WReqFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = ge"
		"t_param(    [gcb '/f16WErr'], 'Position');\n            orient = get_param( [gcb '/f16WErr'], 'Orientation');\n     "
		"       delete_block(       [gcb '/f16WErr']);\n            add_block('built-in/Outport', [gcb '/f16WErr'], 'Position"
		"', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16WFbckFilt'], 'Position');\n            "
		"orient = get_param( [gcb '/f16WFbckFilt'], 'Orientation');\n            delete_block(       [gcb '/f16WFbckFilt']);\n"
		"            add_block('built-in/Outport', [gcb '/f16WFbckFilt'], 'Position', pos, 'Orientation', orient);\n\n       "
		" end\n\n        set_param([gcb '/f16VelocityReq'], 'Port', '1');\n        set_param([gcb '/f16VelocityFbck'], 'Port'"
		", '2');\n        set_param([gcb '/f16FilterMAWOut_preset'], 'Port', '3');\n        set_param([gcb '/f16ControllerPIp"
		"AWQOut_preset'], 'Port', '4');\n        set_param([gcb '/f32RampOut_preset'], 'Port', '5');\n        set_param([gcb "
		"'/u16NSamplesW'], 'Port', '6');\n        set_param([gcb '/f16PropGainQ'], 'Port', '7');\n        set_param([gcb '/f1"
		"6IntegGainQ'], 'Port', '8');\n        set_param([gcb '/s16PropGainShiftQ'], 'Port', '9');\n        set_param([gcb '/"
		"s16IntegGainShiftQ'], 'Port', '10');\n        set_param([gcb '/f16LowerLimitQ'], 'Port', '11');\n        set_param(["
		"gcb '/f16UpperLimitQ'], 'Port', '12');\n        set_param([gcb '/f32RampUp'], 'Port', '13');\n        set_param([gcb"
		" '/f32RampDown'], 'Port', '14');\n        set_param([gcb '/f32AccW'], 'Port', '15');\n        set_param([gcb '/f32In"
		"tegPartK_1Q'], 'Port', '16');\n        set_param([gcb '/f16InK_1Q'], 'Port', '17');\n        set_param([gcb '/f32Sta"
		"te'], 'Port', '18');\n\n        if (showDebugOutputs == 2)\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n "
		"           set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n            set_param([gcb '/f16WReqFilt'], 'Port', '3')"
		";\n            set_param([gcb '/f16WErr'], 'Port', '4');\n            set_param([gcb '/f16WFbckFilt'], 'Port', '5');"
		"\n            set_param([gcb '/f32AccW_Out'], 'Port', '6');\n            set_param([gcb '/f32IntegPartK_1Q_Out'], 'P"
		"ort', '7');\n            set_param([gcb '/f16InK_1Q_Out'], 'Port', '8');\n            set_param([gcb '/f32State_Out'"
		"], 'Port', '9');\n        else\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/"
		"u16LimitFlagQ'], 'Port', '2');\n            set_param([gcb '/f32AccW_Out'], 'Port', '3');\n            set_param([gc"
		"b '/f32IntegPartK_1Q_Out'], 'Port', '4');\n            set_param([gcb '/f16InK_1Q_Out'], 'Port', '5');\n            "
		"set_param([gcb '/f32State_Out'], 'Port', '6');\n        end\n\n        set_param(gcb,'MaskEnables',{'on','on','on','"
		"off','off','off','off','off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 475\n          heigh"
		"t = 475;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    "
		"else\n        if (showDebugOutputs == 2) && (strcmp(get_param([gcb '/f16WReqFilt'], 'BlockType'), 'Terminator'))\n  "
		"          % shown debugging outputs\n            pos = get_param(    [gcb '/f16WReqFilt'], 'Position');\n           "
		" orient = get_param( [gcb '/f16WReqFilt'], 'Orientation');\n            delete_block(       [gcb '/f16WReqFilt']);\n"
		"            add_block('built-in/Outport', [gcb '/f16WReqFilt'], 'Position', pos, 'Orientation', orient);\n\n        "
		"    pos = get_param(    [gcb '/f16WErr'], 'Position');\n            orient = get_param( [gcb '/f16WErr'], 'Orientati"
		"on');\n            delete_block(       [gcb '/f16WErr']);\n            add_block('built-in/Outport', [gcb '/f16WErr'"
		"], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16WFbckFilt'], 'Position');\n"
		"            orient = get_param( [gcb '/f16WFbckFilt'], 'Orientation');\n            delete_block(       [gcb '/f16WF"
		"bckFilt']);\n            add_block('built-in/Outport', [gcb '/f16WFbckFilt'], 'Position', pos, 'Orientation', orient"
		");\n\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '"
		"2');\n            set_param([gcb '/f16WReqFilt'], 'Port', '3');\n            set_param([gcb '/f16WErr'], 'Port', '4'"
		");\n            set_param([gcb '/f16WFbckFilt'], 'Port', '5');\n            set_param([gcb '/f32AccW_Out'], 'Port', "
		"'6');\n            set_param([gcb '/f32IntegPartK_1Q_Out'], 'Port', '7');\n            set_param([gcb '/f16InK_1Q_Ou"
		"t'], 'Port', '8');\n            set_param([gcb '/f32State_Out'], 'Port', '9');\n        elseif (showDebugOutputs == "
		"1) && (strcmp(get_param([gcb '/f16WReqFilt'], 'BlockType'), 'Outport'))\n            % hidden debugging outputs\n   "
		"         pos = get_param(    [gcb '/f16WReqFilt'], 'Position');\n            orient = get_param( [gcb '/f16WReqFilt'"
		"], 'Orientation');\n            delete_block(       [gcb '/f16WReqFilt']);\n            add_block('built-in/Terminat"
		"or', [gcb '/f16WReqFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f16WEr"
		"r'], 'Position');\n            orient = get_param( [gcb '/f16WErr'], 'Orientation');\n            delete_block(     "
		"  [gcb '/f16WErr']);\n            add_block('built-in/Terminator', [gcb '/f16WErr'], 'Position', pos, 'Orientation',"
		" orient);\n\n            pos = get_param(    [gcb '/f16WFbckFilt'], 'Position');\n            orient = get_param( [g"
		"cb '/f16WFbckFilt'], 'Orientation');\n            delete_block(       [gcb '/f16WFbckFilt']);\n            add_block"
		"('built-in/Terminator', [gcb '/f16WFbckFilt'], 'Position', pos, 'Orientation', orient);\n\n            set_param([gc"
		"b '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n            set_param([gc"
		"b '/f32AccW_Out'], 'Port', '3');\n            set_param([gcb '/f32IntegPartK_1Q_Out'], 'Port', '4');\n            se"
		"t_param([gcb '/f16InK_1Q_Out'], 'Port', '5');\n            set_param([gcb '/f32State_Out'], 'Port', '6');\n        e"
		"nd\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_SpeedLoop_F16', 'horizontalAlignment', 'center');"
		"\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)"
		"'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  12
		  Object {
		    $ObjectID		    81
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,"
		    "'MaskEnables',{'on','on','on','off','off','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    82
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    83
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide"
		    Cell		    "Show"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showDebugOutputs"
		    Prompt		    "Show debugging outputs"
		    Value		    "Hide"
		    Enabled		    "off"
		  }
		  Object {
		    $ObjectID		    84
		    Type		    "edit"
		    Name		    "u16NSamplesW"
		    Prompt		    "u16NSamplesW (GDFLIB_FilterMA - recalculated smoothing factor)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    85
		    Type		    "edit"
		    Name		    "f16PropGainQ"
		    Prompt		    "f16PropGainQ (GFLIB_ControllerPIpAW - proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    86
		    Type		    "edit"
		    Name		    "f16IntegGainQ"
		    Prompt		    "f16IntegGainQ (GFLIB_ControllerPIpAW - integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    87
		    Type		    "edit"
		    Name		    "s16PropGainShiftQ"
		    Prompt		    "s16PropGainShiftQ (GFLIB_ControllerPIpAW - scaling bitwise shift applied to the proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    88
		    Type		    "edit"
		    Name		    "s16IntegGainShiftQ"
		    Prompt		    "s16IntegGainShiftQ (GFLIB_ControllerPIpAW - scaling bitwise shift applied to the integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    89
		    Type		    "edit"
		    Name		    "f16LowerLimitQ"
		    Prompt		    "f16LowerLimitQ (GFLIB_ControllerPIpAW - lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    90
		    Type		    "edit"
		    Name		    "f16UpperLimitQ"
		    Prompt		    "f16UpperLimitQ (GFLIB_ControllerPIpAW - upper limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    91
		    Type		    "edit"
		    Name		    "f32RampUp"
		    Prompt		    "f32RampUp (Ramp up increment coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    92
		    Type		    "edit"
		    Name		    "f32RampDown"
		    Prompt		    "f32RampDown (Ramp decrement coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_SpeedLoop_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"58"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16VelocityReq"
		  SID			  "7:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16VelocityFbck"
		  SID			  "7:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16FilterMAWOut_preset"
		  SID			  "7:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16ControllerPIpAWQOut_preset"
		  SID			  "7:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32RampOut_preset"
		  SID			  "7:10"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  12
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "7:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_SpeedLoop_SF"
		  SID			  "7:5"
		  Ports			  [18, 9]
		  Position		  [135, 165, 285, 250]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_SpeedLoop_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,showDebugOutputs,u16NSamplesW,f16PropGainQ,f16IntegGainQ,s16PropGainSh"
		  "iftQ,s16IntegGainShiftQ,f16LowerLimitQ,f16UpperLimitQ,f32RampUp,f32RampDown"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "7:33"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  35
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    93
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "7:36"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  36
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    94
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_SpeedLoop_BAM_F16.mdl');text(10,75,'PMSM Speed Loop Controller.');text(10,60,'N"
		    "XP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InK_1Q"
		  SID			  "7:50"
		  Position		  [40, 838, 70, 852]
		  ZOrder		  48
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InK_1Q_Out"
		  SID			  "7:54"
		  Position		  [340, 478, 370, 492]
		  ZOrder		  52
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IntegGainQ"
		  SID			  "7:41"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimitQ"
		  SID			  "7:44"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  42
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16PropGainQ"
		  SID			  "7:40"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimitQ"
		  SID			  "7:45"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  43
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16WErr"
		  SID			  "7:57"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  55
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16WFbckFilt"
		  SID			  "7:58"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  56
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16WReqFilt"
		  SID			  "7:56"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  54
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32AccW"
		  SID			  "7:48"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  46
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32AccW_Out"
		  SID			  "7:52"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  50
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1Q"
		  SID			  "7:49"
		  Position		  [40, 798, 70, 812]
		  ZOrder		  47
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1Q_Out"
		  SID			  "7:53"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  51
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32RampDown"
		  SID			  "7:47"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  45
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32RampUp"
		  SID			  "7:46"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  44
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32State"
		  SID			  "7:51"
		  Position		  [40, 878, 70, 892]
		  ZOrder		  49
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32State_Out"
		  SID			  "7:55"
		  Position		  [340, 518, 370, 532]
		  ZOrder		  53
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShiftQ"
		  SID			  "7:43"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  41
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShiftQ"
		  SID			  "7:42"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  40
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NSamplesW"
		  SID			  "7:39"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Outport
		  Name			  "pIDQReq"
		  SID			  "7:24"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  26
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlagQ"
		  SID			  "7:25"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  27
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  9
		  DstBlock		  "f32State_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  8
		  DstBlock		  "f16InK_1Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  7
		  DstBlock		  "f32IntegPartK_1Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  6
		  DstBlock		  "f32AccW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  5
		  DstBlock		  "f16WFbckFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  4
		  DstBlock		  "f16WErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  3
		  DstBlock		  "f16WReqFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlagQ"
		  DstPort		  1
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  1
		  DstBlock		  "pIDQReq"
		  DstPort		  1
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f32State"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  18
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f16InK_1Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  17
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "f32IntegPartK_1Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  16
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "f32AccW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f32RampDown"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f32RampUp"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f16UpperLimitQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f16LowerLimitQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "s16IntegGainShiftQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "s16PropGainShiftQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "f16IntegGainQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  21
		  SrcBlock		  "f16PropGainQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  22
		  SrcBlock		  "u16NSamplesW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  23
		  SrcBlock		  "f32RampOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  24
		  SrcBlock		  "f16ControllerPIpAWQOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  25
		  SrcBlock		  "f16FilterMAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  26
		  SrcBlock		  "f16VelocityFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  27
		  SrcBlock		  "f16VelocityReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_TrackObsrv_F16"
	      SID		      "8"
	      Ports		      [3, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 1000, 255, 1100]
	      ZOrder		      13
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		95
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_TrackObsrv_F16"
		Description		"Tracking observer in 16-bit fixed-point fractional implementation. This block supports re-initializati"
		"on of the internal state during simulation. If the block is reset, the outputs of the PI controller and integrator w"
		"ill be aligned with the inputs f16VelocityOut_preset and f16PosOut_preset. Refer to the AMMCLIB User's Guide for fur"
		"ther details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16CC1sc'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16CC1sc'], 'Position');\n        orient = get_param( [gc"
		"b, '/f16CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/f16CC1sc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16CC2sc'],"
		" 'Position');\n        orient = get_param( [gcb, '/f16CC2sc'], 'Orientation');\n        delete_block(       [gcb, '/"
		"f16CC2sc']);\n        add_block('built-in/Ground', [gcb, '/f16CC2sc'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/f16UpperLimit'], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimit'"
		"], 'Orientation');\n        delete_block(       [gcb, '/f16UpperLimit']);\n        add_block('built-in/Ground', [gcb"
		", '/f16UpperLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16LowerLimit']"
		", 'Position');\n        orient = get_param( [gcb, '/f16LowerLimit'], 'Orientation');\n        delete_block(       [g"
		"cb, '/f16LowerLimit']);\n        add_block('built-in/Ground', [gcb, '/f16LowerLimit'], 'Position', pos, 'Orientation"
		"', orient);\n\n        pos = get_param(    [gcb, '/u16NShiftPI'], 'Position');\n        orient = get_param( [gcb, '/"
		"u16NShiftPI'], 'Orientation');\n        delete_block(       [gcb, '/u16NShiftPI']);\n        add_block('built-in/Gro"
		"und', [gcb, '/u16NShiftPI'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16C1']"
		", 'Position');\n        orient = get_param( [gcb, '/f16C1'], 'Orientation');\n        delete_block(       [gcb, '/f1"
		"6C1']);\n        add_block('built-in/Ground', [gcb, '/f16C1'], 'Position', pos, 'Orientation', orient);\n\n        p"
		"os = get_param(    [gcb, '/u16NShiftI'], 'Position');\n        orient = get_param( [gcb, '/u16NShiftI'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/u16NShiftI']);\n        add_block('built-in/Ground', [gcb, '/u16NShiftI'],"
		" 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/f32Acc'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc']);\n        add_bloc"
		"k('built-in/Ground', [gcb, '/f32Acc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb,"
		" '/f16InErrK1'], 'Position');\n        orient = get_param( [gcb, '/f16InErrK1'], 'Orientation');\n        delete_blo"
		"ck(       [gcb, '/f16InErrK1']);\n        add_block('built-in/Ground', [gcb, '/f16InErrK1'], 'Position', pos, 'Orien"
		"tation', orient);\n\n        pos = get_param(    [gcb, '/f32State'], 'Position');\n        orient = get_param( [gcb,"
		" '/f32State'], 'Orientation');\n        delete_block(       [gcb, '/f32State']);\n        add_block('built-in/Ground"
		"', [gcb, '/f32State'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16InK1'], 'P"
		"osition');\n        orient = get_param( [gcb, '/f16InK1'], 'Orientation');\n        delete_block(       [gcb, '/f16I"
		"nK1']);\n        add_block('built-in/Ground', [gcb, '/f16InK1'], 'Position', pos, 'Orientation', orient);\n\n\n     "
		"   pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n        orient = get_param( [gcb '/f32Acc_Out'], 'Orientat"
		"ion');\n        delete_block(       [gcb '/f32Acc_Out']);\n        add_block('built-in/Terminator', [gcb '/f32Acc_Ou"
		"t'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InErrK1_Out'], 'Position');\n"
		"        orient = get_param( [gcb '/f16InErrK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InErrK1_"
		"Out']);\n        add_block('built-in/Terminator', [gcb '/f16InErrK1_Out'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb '/f32State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out']"
		", 'Orientation');\n        delete_block(       [gcb '/f32State_Out']);\n        add_block('built-in/Terminator', [gc"
		"b '/f32State_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InK1_Out'], 'P"
		"osition');\n        orient = get_param( [gcb '/f16InK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f1"
		"6InK1_Out']);\n        add_block('built-in/Terminator', [gcb '/f16InK1_Out'], 'Position', pos, 'Orientation', orient"
		");\n\n\n        set_param([gcb '/f16PhaseErr'], 'Port', '1');\n        set_param([gcb '/f16VelocityOut_preset'], 'Po"
		"rt', '2');\n        set_param([gcb '/f16PosOut_preset'], 'Port', '3');\n\n        set_param([gcb '/pPosEst'], 'Port'"
		", '1');\n        set_param([gcb '/pVelocityEst'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','on','o"
		"n','on','on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 100\n          height = 100;\n          "
		"set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % sho"
		"wn state variables\n    if strcmp(get_param([gcb '/f16CC1sc'], 'BlockType'), 'Ground')\n        posblk = get_param(g"
		"cb, 'Position');\n\n        pos = get_param(    [gcb, '/f16CC1sc'], 'Position');\n        orient = get_param( [gcb, "
		"'/f16CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc']);\n        add_block('built-in/Inport'"
		", [gcb, '/f16CC1sc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param"
		"(    [gcb, '/f16CC2sc'], 'Position');\n        orient = get_param( [gcb, '/f16CC2sc'], 'Orientation');\n        dele"
		"te_block(       [gcb, '/f16CC2sc']);\n        add_block('built-in/Inport', [gcb, '/f16CC2sc'], 'Position', pos, 'Ori"
		"entation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16UpperLimit'], 'Position');\n"
		"        orient = get_param( [gcb, '/f16UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16UpperLi"
		"mit']);\n        add_block('built-in/Inport', [gcb, '/f16UpperLimit'], 'Position', pos, 'Orientation', orient, 'OutD"
		"ataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16LowerLimit'], 'Position');\n        orient = get_pa"
		"ram( [gcb, '/f16LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimit']);\n        add_bl"
		"ock('built-in/Inport', [gcb, '/f16LowerLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n"
		"\n        pos = get_param(    [gcb, '/u16NShiftPI'], 'Position');\n        orient = get_param( [gcb, '/u16NShiftPI']"
		", 'Orientation');\n        delete_block(       [gcb, '/u16NShiftPI']);\n        add_block('built-in/Inport', [gcb, '"
		"/u16NShiftPI'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n        pos = get_param(    "
		"[gcb, '/f16C1'], 'Position');\n        orient = get_param( [gcb, '/f16C1'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/f16C1']);\n        add_block('built-in/Inport', [gcb, '/f16C1'], 'Position', pos, 'Orientation', orient"
		", 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/u16NShiftI'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/u16NShiftI'], 'Orientation');\n        delete_block(       [gcb, '/u16NShiftI']);\n        add_bloc"
		"k('built-in/Inport', [gcb, '/u16NShiftI'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n "
		"       pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/f32Acc'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/f32Acc']);\n        add_block('built-in/Inport', [gcb, '/f32Acc'], 'Positi"
		"on', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16InErrK1'], 'P"
		"osition');\n        orient = get_param( [gcb, '/f16InErrK1'], 'Orientation');\n        delete_block(       [gcb, '/f"
		"16InErrK1']);\n        add_block('built-in/Inport', [gcb, '/f16InErrK1'], 'Position', pos, 'Orientation', orient, 'O"
		"utDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32State'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f32State'], 'Orientation');\n        delete_block(       [gcb, '/f32State']);\n        add_block('built-i"
		"n/Inport', [gcb, '/f32State'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = "
		"get_param(    [gcb, '/f16InK1'], 'Position');\n        orient = get_param( [gcb, '/f16InK1'], 'Orientation');\n     "
		"   delete_block(       [gcb, '/f16InK1']);\n        add_block('built-in/Inport', [gcb, '/f16InK1'], 'Position', pos,"
		" 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position'"
		");\n        orient = get_param( [gcb '/f32Acc_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out'"
		"]);\n        add_block('built-in/Outport', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        "
		"pos = get_param(    [gcb '/f16InErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/f16InErrK1_Out'], 'Ori"
		"entation');\n        delete_block(       [gcb '/f16InErrK1_Out']);\n        add_block('built-in/Outport', [gcb '/f16"
		"InErrK1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32State_Out'], 'Posit"
		"ion');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n        delete_block(       [gcb '/f32St"
		"ate_Out']);\n        add_block('built-in/Outport', [gcb '/f32State_Out'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb '/f16InK1_Out'], 'Position');\n        orient = get_param( [gcb '/f16InK1_Out'], "
		"'Orientation');\n        delete_block(       [gcb '/f16InK1_Out']);\n        add_block('built-in/Outport', [gcb '/f1"
		"6InK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16PhaseErr'], 'Port', '1');\n  "
		"      set_param([gcb '/f16VelocityOut_preset'], 'Port', '2');\n        set_param([gcb '/f16PosOut_preset'], 'Port', "
		"'3');\n        set_param([gcb '/f16CC1sc'], 'Port', '4');\n        set_param([gcb '/f16CC2sc'], 'Port', '5');\n     "
		"   set_param([gcb '/f16UpperLimit'], 'Port', '6');\n        set_param([gcb '/f16LowerLimit'], 'Port', '7');\n       "
		" set_param([gcb '/u16NShiftPI'], 'Port', '8');\n        set_param([gcb '/f16C1'], 'Port', '9');\n        set_param(["
		"gcb '/u16NShiftI'], 'Port', '10');\n        set_param([gcb '/f32Acc'], 'Port', '11');\n        set_param([gcb '/f16I"
		"nErrK1'], 'Port', '12');\n        set_param([gcb '/f32State'], 'Port', '13');\n        set_param([gcb '/f16InK1'], '"
		"Port', '14');\n\n        set_param([gcb '/pPosEst'], 'Port', '1');\n        set_param([gcb '/pVelocityEst'], 'Port',"
		" '2');\n        set_param([gcb '/f32Acc_Out'], 'Port', '3');\n        set_param([gcb '/f16InErrK1_Out'], 'Port', '4'"
		");\n        set_param([gcb '/f32State_Out'], 'Port', '5');\n        set_param([gcb '/f16InK1_Out'], 'Port', '6');\n\n"
		"        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off','off','off','off'});\n\n        if (posblk(4)"
		" - posblk(2)) < 375\n          height = 375;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), p"
		"osblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_TrackObsrv_F16', 'horizontalAlignment', 'center')"
		";\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance"
		")'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  9
		  Object {
		    $ObjectID		    96
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'"
		    "on','on','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    97
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    98
		    Type		    "edit"
		    Name		    "f16CC1sc"
		    Prompt		    "f16CC1sc (GFLIB_ControllerPIrAW - CC1 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    99
		    Type		    "edit"
		    Name		    "f16CC2sc"
		    Prompt		    "f16CC2sc (GFLIB_ControllerPIrAW - CC2 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    100
		    Type		    "edit"
		    Name		    "f16UpperLimit"
		    Prompt		    "f16UpperLimit (GFLIB_ControllerPIrAW - upper Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    101
		    Type		    "edit"
		    Name		    "f16LowerLimit"
		    Prompt		    "f16LowerLimit (GFLIB_ControllerPIrAW - lower Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    102
		    Type		    "edit"
		    Name		    "u16NShiftPI"
		    Prompt		    "u16NShiftPI (GFLIB_ControllerPIrAW - scaling bitwise shift applied to the controller coefficients)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    103
		    Type		    "edit"
		    Name		    "f16C1"
		    Prompt		    "f16C1 (GFLIB_IntegratorTR - integrator coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    104
		    Type		    "edit"
		    Name		    "u16NShiftI"
		    Prompt		    "u16NShiftI (GFLIB_IntegratorTR - scaling bitwise shift applied to the integrator coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_TrackObsrv_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"46"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16PhaseErr"
		  SID			  "8:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16VelocityOut_preset"
		  SID			  "8:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16PosOut_preset"
		  SID			  "8:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "8:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_TrackObsrv_SF"
		  SID			  "8:5"
		  Ports			  [14, 6]
		  Position		  [135, 175, 285, 240]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_TrackObsrv_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,f16CC1sc,f16CC2sc,f16UpperLimit,f16LowerLimit,u16NShiftPI,f16C1,u16NSh"
		  "iftI"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "8:26"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  28
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    105
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "8:29"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  29
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    106
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_TrackObsrv_BAM_F16.mdl');text(10,75,'Tracking observer');text(10,60,'NXP 2020')"
		    ";text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16C1"
		  SID			  "8:37"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC1sc"
		  SID			  "8:32"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC2sc"
		  SID			  "8:33"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InErrK1"
		  SID			  "8:40"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InErrK1_Out"
		  SID			  "8:44"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  42
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InK1"
		  SID			  "8:42"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  40
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InK1_Out"
		  SID			  "8:46"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  44
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimit"
		  SID			  "8:35"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimit"
		  SID			  "8:34"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc"
		  SID			  "8:39"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Out"
		  SID			  "8:43"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  41
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32State"
		  SID			  "8:41"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32State_Out"
		  SID			  "8:45"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  43
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShiftI"
		  SID			  "8:38"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  36
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShiftPI"
		  SID			  "8:36"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  34
		}
		Block {
		  BlockType		  Outport
		  Name			  "pPosEst"
		  SID			  "8:20"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  22
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pVelocityEst"
		  SID			  "8:21"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  23
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  6
		  DstBlock		  "f16InK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  5
		  DstBlock		  "f32State_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  4
		  DstBlock		  "f16InErrK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  3
		  DstBlock		  "f32Acc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  2
		  DstBlock		  "pVelocityEst"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  1
		  DstBlock		  "pPosEst"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f16InK1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32State"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f16InErrK1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f32Acc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "u16NShiftI"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "f16C1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "u16NShiftPI"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f16LowerLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f16UpperLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f16CC2sc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f16CC1sc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "f16PosOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "f16VelocityOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "f16PhaseErr"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_Windmilling_F16"
	      SID		      "9"
	      Ports		      [1, 3]
	      Position		      [20, 1122, 260, 1228]
	      ZOrder		      14
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		107
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_Windmilling_F16"
		Description		"PMSM Windmilling in 16-bit fixed-point fractional implementation. This function detects spontaneous ro"
		"tation of an unpowered 3-phase PMSM by measuring the generated back electromotive force. Output u16Lock represents t"
		"he return value of the C function (0 = undecided, 1 = spinning, 2 = stopped). Transition from 0 to 1 on the u16Lock "
		"output can be taken as a reset signal for the following AMCLIB_TrackObsrv_F16 block to synchronize the sensorless FO"
		"C loop with a freewheeling motor. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16ADCMaxError'], 'BlockType'), 'Inport')\n        posblk = ge"
		"t_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16ADCMaxError'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/f16ADCMaxError'], 'Orientation');\n        delete_block(       [gcb, '/f16ADCMaxError']);\n        "
		"add_block('built-in/Ground', [gcb, '/f16ADCMaxError'], 'Position', pos, 'Orientation', orient);\n\n        pos = get"
		"_param(    [gcb, '/f16CC1sc'], 'Position');\n        orient = get_param( [gcb, '/f16CC1sc'], 'Orientation');\n      "
		"  delete_block(       [gcb, '/f16CC1sc']);\n        add_block('built-in/Ground', [gcb, '/f16CC1sc'], 'Position', pos"
		", 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16CC2sc'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f16CC2sc'], 'Orientation');\n        delete_block(       [gcb, '/f16CC2sc']);\n        add_block('built-i"
		"n/Ground', [gcb, '/f16CC2sc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16Up"
		"perLimit'], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimit'], 'Orientation');\n        delete_block"
		"(       [gcb, '/f16UpperLimit']);\n        add_block('built-in/Ground', [gcb, '/f16UpperLimit'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb, '/f16LowerLimit'], 'Position');\n        orient = get_par"
		"am( [gcb, '/f16LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimit']);\n        add_blo"
		"ck('built-in/Ground', [gcb, '/f16LowerLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param( "
		"   [gcb, '/u16NShiftPI'], 'Position');\n        orient = get_param( [gcb, '/u16NShiftPI'], 'Orientation');\n        "
		"delete_block(       [gcb, '/u16NShiftPI']);\n        add_block('built-in/Ground', [gcb, '/u16NShiftPI'], 'Position',"
		" pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16C1'], 'Position');\n        orient = get_par"
		"am( [gcb, '/f16C1'], 'Orientation');\n        delete_block(       [gcb, '/f16C1']);\n        add_block('built-in/Gro"
		"und', [gcb, '/f16C1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/u16NShiftI'],"
		" 'Position');\n        orient = get_param( [gcb, '/u16NShiftI'], 'Orientation');\n        delete_block(       [gcb, "
		"'/u16NShiftI']);\n        add_block('built-in/Ground', [gcb, '/u16NShiftI'], 'Position', pos, 'Orientation', orient)"
		";\n\n        pos = get_param(    [gcb, '/f32AccPI'], 'Position');\n        orient = get_param( [gcb, '/f32AccPI'], '"
		"Orientation');\n        delete_block(       [gcb, '/f32AccPI']);\n        add_block('built-in/Ground', [gcb, '/f32Ac"
		"cPI'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16InErrK1'], 'Position');\n "
		"       orient = get_param( [gcb, '/f16InErrK1'], 'Orientation');\n        delete_block(       [gcb, '/f16InErrK1']);"
		"\n        add_block('built-in/Ground', [gcb, '/f16InErrK1'], 'Position', pos, 'Orientation', orient);\n\n        pos"
		" = get_param(    [gcb, '/f32State'], 'Position');\n        orient = get_param( [gcb, '/f32State'], 'Orientation');\n"
		"        delete_block(       [gcb, '/f32State']);\n        add_block('built-in/Ground', [gcb, '/f32State'], 'Position"
		"', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16InK1'], 'Position');\n        orient = get"
		"_param( [gcb, '/f16InK1'], 'Orientation');\n        delete_block(       [gcb, '/f16InK1']);\n        add_block('buil"
		"t-in/Ground', [gcb, '/f16InK1'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f3"
		"2AccPI_Out'], 'Position');\n        orient = get_param( [gcb '/f32AccPI_Out'], 'Orientation');\n        delete_block"
		"(       [gcb '/f32AccPI_Out']);\n        add_block('built-in/Terminator', [gcb '/f32AccPI_Out'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb '/f16InErrK1_Out'], 'Position');\n        orient = get_par"
		"am( [gcb '/f16InErrK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InErrK1_Out']);\n        add_blo"
		"ck('built-in/Terminator', [gcb '/f16InErrK1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_par"
		"am(    [gcb '/f32State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n    "
		"    delete_block(       [gcb '/f32State_Out']);\n        add_block('built-in/Terminator', [gcb '/f32State_Out'], 'Po"
		"sition', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InK1_Out'], 'Position');\n        ori"
		"ent = get_param( [gcb '/f16InK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InK1_Out']);\n        "
		"add_block('built-in/Terminator', [gcb '/f16InK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_par"
		"am([gcb '/pUabcIn'], 'Port', '1');\n\n        set_param([gcb '/u16Lock'], 'Port', '1');\n        set_param([gcb '/pP"
		"osEst'], 'Port', '2');\n        set_param([gcb '/pVelocityEst'], 'Port', '3');\n\n        set_param(gcb,'MaskEnables"
		"',{'on','on','on','on','on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 100\n          height = 1"
		"00;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\n"
		"else\n    % shown state variables\n    if strcmp(get_param([gcb '/f16ADCMaxError'], 'BlockType'), 'Ground')\n       "
		" posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16ADCMaxError'], 'Position');\n       "
		" orient = get_param( [gcb, '/f16ADCMaxError'], 'Orientation');\n        delete_block(       [gcb, '/f16ADCMaxError']"
		");\n        add_block('built-in/Inport', [gcb, '/f16ADCMaxError'], 'Position', pos, 'Orientation', orient, 'OutDataT"
		"ypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16CC1sc'], 'Position');\n        orient = get_param( [gcb"
		", '/f16CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc']);\n        add_block('built-in/Inpor"
		"t', [gcb, '/f16CC1sc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_par"
		"am(    [gcb, '/f16CC2sc'], 'Position');\n        orient = get_param( [gcb, '/f16CC2sc'], 'Orientation');\n        de"
		"lete_block(       [gcb, '/f16CC2sc']);\n        add_block('built-in/Inport', [gcb, '/f16CC2sc'], 'Position', pos, 'O"
		"rientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16UpperLimit'], 'Position')"
		";\n        orient = get_param( [gcb, '/f16UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16Uppe"
		"rLimit']);\n        add_block('built-in/Inport', [gcb, '/f16UpperLimit'], 'Position', pos, 'Orientation', orient, 'O"
		"utDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16LowerLimit'], 'Position');\n        orient = get"
		"_param( [gcb, '/f16LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimit']);\n        add"
		"_block('built-in/Inport', [gcb, '/f16LowerLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16'"
		");\n\n        pos = get_param(    [gcb, '/u16NShiftPI'], 'Position');\n        orient = get_param( [gcb, '/u16NShift"
		"PI'], 'Orientation');\n        delete_block(       [gcb, '/u16NShiftPI']);\n        add_block('built-in/Inport', [gc"
		"b, '/u16NShiftPI'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n        pos = get_param("
		"    [gcb, '/f16C1'], 'Position');\n        orient = get_param( [gcb, '/f16C1'], 'Orientation');\n        delete_bloc"
		"k(       [gcb, '/f16C1']);\n        add_block('built-in/Inport', [gcb, '/f16C1'], 'Position', pos, 'Orientation', or"
		"ient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/u16NShiftI'], 'Position');\n        orient "
		"= get_param( [gcb, '/u16NShiftI'], 'Orientation');\n        delete_block(       [gcb, '/u16NShiftI']);\n        add_"
		"block('built-in/Inport', [gcb, '/u16NShiftI'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n"
		"\n        pos = get_param(    [gcb, '/f32AccPI'], 'Position');\n        orient = get_param( [gcb, '/f32AccPI'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/f32AccPI']);\n        add_block('built-in/Inport', [gcb, '/f32AccPI"
		"'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16In"
		"ErrK1'], 'Position');\n        orient = get_param( [gcb, '/f16InErrK1'], 'Orientation');\n        delete_block(     "
		"  [gcb, '/f16InErrK1']);\n        add_block('built-in/Inport', [gcb, '/f16InErrK1'], 'Position', pos, 'Orientation',"
		" orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32State'], 'Position');\n        orient"
		" = get_param( [gcb, '/f32State'], 'Orientation');\n        delete_block(       [gcb, '/f32State']);\n        add_blo"
		"ck('built-in/Inport', [gcb, '/f32State'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n   "
		"     pos = get_param(    [gcb, '/f16InK1'], 'Position');\n        orient = get_param( [gcb, '/f16InK1'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/f16InK1']);\n        add_block('built-in/Inport', [gcb, '/f16InK1'], 'Posi"
		"tion', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n\n        pos = get_param(    [gcb '/f32AccPI_Out'"
		"], 'Position');\n        orient = get_param( [gcb '/f32AccPI_Out'], 'Orientation');\n        delete_block(       [gc"
		"b '/f32AccPI_Out']);\n        add_block('built-in/Outport', [gcb '/f32AccPI_Out'], 'Position', pos, 'Orientation', o"
		"rient);\n\n        pos = get_param(    [gcb '/f16InErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/f16"
		"InErrK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InErrK1_Out']);\n        add_block('built-in/O"
		"utport', [gcb '/f16InErrK1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32"
		"State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n        delete_block("
		"       [gcb '/f32State_Out']);\n        add_block('built-in/Outport', [gcb '/f32State_Out'], 'Position', pos, 'Orien"
		"tation', orient);\n\n        pos = get_param(    [gcb '/f16InK1_Out'], 'Position');\n        orient = get_param( [gc"
		"b '/f16InK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InK1_Out']);\n        add_block('built-in/"
		"Outport', [gcb '/f16InK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/pUabcIn'], 'P"
		"ort', '1');\n        set_param([gcb '/f16ADCMaxError'], 'Port', '2');\n        set_param([gcb '/f16CC1sc'], 'Port', "
		"'3');\n        set_param([gcb '/f16CC2sc'], 'Port', '4');\n        set_param([gcb '/f16UpperLimit'], 'Port', '5');\n"
		"        set_param([gcb '/f16LowerLimit'], 'Port', '6');\n        set_param([gcb '/u16NShiftPI'], 'Port', '7');\n    "
		"    set_param([gcb '/f16C1'], 'Port', '8');\n        set_param([gcb '/u16NShiftI'], 'Port', '9');\n        set_param"
		"([gcb '/f32AccPI'], 'Port', '10');\n        set_param([gcb '/f16InErrK1'], 'Port', '11');\n        set_param([gcb '/"
		"f32State'], 'Port', '12');\n        set_param([gcb '/f16InK1'], 'Port', '13');\n\n        set_param([gcb '/u16Lock']"
		", 'Port', '1');\n        set_param([gcb '/pPosEst'], 'Port', '2');\n        set_param([gcb '/pVelocityEst'], 'Port',"
		" '3');\n        set_param([gcb '/f32AccPI_Out'], 'Port', '4');\n        set_param([gcb '/f16InErrK1_Out'], 'Port', '"
		"5');\n        set_param([gcb '/f32State_Out'], 'Port', '6');\n        set_param([gcb '/f16InK1_Out'], 'Port', '7');\n"
		"\n        set_param(gcb,'MaskEnables',{'on','off','off','off','off','off','off','off','off'});\n\n        if (posblk"
		"(4) - posblk(2)) < 350\n          height = 350;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3)"
		", posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'AMCLIB_Windmilling_F16', 'horizontalAlignment', 'center')"
		";\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance"
		")'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  9
		  Object {
		    $ObjectID		    108
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'"
		    "on','off','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    109
		    Type		    "edit"
		    Name		    "f16ADCMaxError"
		    Prompt		    "f16ADCMaxError (Maximum differential offset error between any two phases of the 3-phase voltage-sen"
		    "sing A/D converters.)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    110
		    Type		    "edit"
		    Name		    "f16CC1sc"
		    Prompt		    "f16CC1sc (GFLIB_ControllerPIrAW - CC1 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    111
		    Type		    "edit"
		    Name		    "f16CC2sc"
		    Prompt		    "f16CC2sc (GFLIB_ControllerPIrAW - CC2 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    112
		    Type		    "edit"
		    Name		    "f16UpperLimit"
		    Prompt		    "f16UpperLimit (GFLIB_ControllerPIrAW - upper Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    113
		    Type		    "edit"
		    Name		    "f16LowerLimit"
		    Prompt		    "f16LowerLimit (GFLIB_ControllerPIrAW - lower Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    114
		    Type		    "edit"
		    Name		    "u16NShiftPI"
		    Prompt		    "u16NShiftPI (GFLIB_ControllerPIrAW - scaling bitwise shift applied to the controller coefficients)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    115
		    Type		    "edit"
		    Name		    "f16C1"
		    Prompt		    "f16C1 (GFLIB_IntegratorTR - integrator coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    116
		    Type		    "edit"
		    Name		    "u16NShiftI"
		    Prompt		    "u16NShiftI (GFLIB_IntegratorTR - scaling bitwise shift applied to the integrator coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_Windmilling_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"46"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pUabcIn"
		  SID			  "9:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_3Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_Windmilling_SF"
		  SID			  "9:4"
		  Ports			  [13, 7]
		  Position		  [135, 175, 285, 235]
		  ZOrder		  1
		  FunctionName		  "AMCLIB_Windmilling_SF_F16"
		  Parameters		  "showStates,f16ADCMaxError,f16CC1sc,f16CC2sc,f16UpperLimit,f16LowerLimit,u16NShiftPI,f16C1,u16NShiftI"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "9:25"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  22
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    117
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "9:28"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  23
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    118
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_Windmilling_BAM_F16.mdl');text(10,75,'PMSM Windmilling');text(10,60,'NXP 2020')"
		    ";text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16ADCMaxError"
		  SID			  "9:31"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16C1"
		  SID			  "9:37"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC1sc"
		  SID			  "9:32"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC2sc"
		  SID			  "9:33"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InErrK1"
		  SID			  "9:40"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InErrK1_Out"
		  SID			  "9:44"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InK1"
		  SID			  "9:42"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InK1_Out"
		  SID			  "9:46"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimit"
		  SID			  "9:35"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimit"
		  SID			  "9:34"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32AccPI"
		  SID			  "9:39"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32AccPI_Out"
		  SID			  "9:43"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  36
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32State"
		  SID			  "9:41"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  34
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32State_Out"
		  SID			  "9:45"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShiftI"
		  SID			  "9:38"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShiftPI"
		  SID			  "9:36"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16Lock"
		  SID			  "9:18"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  15
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pPosEst"
		  SID			  "9:19"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  16
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pVelocityEst"
		  SID			  "9:20"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  17
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  7
		  DstBlock		  "f16InK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  6
		  DstBlock		  "f32State_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  5
		  DstBlock		  "f16InErrK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  4
		  DstBlock		  "f32AccPI_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  3
		  DstBlock		  "pVelocityEst"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  2
		  DstBlock		  "pPosEst"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  1
		  DstBlock		  "u16Lock"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f16InK1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f32State"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f16InErrK1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f32AccPI"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "u16NShiftI"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "f16C1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "u16NShiftPI"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f16LowerLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f16UpperLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f16CC2sc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "f16CC1sc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "f16ADCMaxError"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "pUabcIn"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "F32"
	  SID			  "10"
	  Ports			  []
	  Position		  [120, 0, 220, 100]
	  ZOrder		  2
	  RequestExecContextInheritance	off
	  System {
	    Name		    "F32"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_BemfObsrvDQ_F32"
	      SID		      "11"
	      Ports		      [4, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 2, 260, 128]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		119
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_BemfObsrvDQ_F32"
		Description		"PMSM back-EMF observer DQ in 32-bit fixed-point fractional implementation. This block supports re-init"
		"ialization of the internal state during simulation. If the block is reset, the observer will align with the motor's "
		"position and speed measured in the next time step. This allows seamless on-the-fly transition to the closed-loop con"
		"trol. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32IGain'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32IGain'], 'Position');\n        orient = get_param( [gc"
		"b, '/f32IGain'], 'Orientation');\n        delete_block(       [gcb, '/f32IGain']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/f32IGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32UGain'],"
		" 'Position');\n        orient = get_param( [gcb, '/f32UGain'], 'Orientation');\n        delete_block(       [gcb, '/"
		"f32UGain']);\n        add_block('built-in/Ground', [gcb, '/f32UGain'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/f32WIGain'], 'Position');\n        orient = get_param( [gcb, '/f32WIGain'], 'Orie"
		"ntation');\n        delete_block(       [gcb, '/f32WIGain']);\n        add_block('built-in/Ground', [gcb, '/f32WIGai"
		"n'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32EGain'], 'Position');\n     "
		"   orient = get_param( [gcb, '/f32EGain'], 'Orientation');\n        delete_block(       [gcb, '/f32EGain']);\n      "
		"  add_block('built-in/Ground', [gcb, '/f32EGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_par"
		"am(    [gcb, '/s16Shift'], 'Position');\n        orient = get_param( [gcb, '/s16Shift'], 'Orientation');\n        de"
		"lete_block(       [gcb, '/s16Shift']);\n        add_block('built-in/Ground', [gcb, '/s16Shift'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb, '/f32CC1sc_D'], 'Position');\n        orient = get_param("
		" [gcb, '/f32CC1sc_D'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc_D']);\n        add_block('built"
		"-in/Ground', [gcb, '/f32CC1sc_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f"
		"32CC2sc_D'], 'Position');\n        orient = get_param( [gcb, '/f32CC2sc_D'], 'Orientation');\n        delete_block( "
		"      [gcb, '/f32CC2sc_D']);\n        add_block('built-in/Ground', [gcb, '/f32CC2sc_D'], 'Position', pos, 'Orientati"
		"on', orient);\n\n        pos = get_param(    [gcb, '/f32UpperLimit_D'], 'Position');\n        orient = get_param( [g"
		"cb, '/f32UpperLimit_D'], 'Orientation');\n        delete_block(       [gcb, '/f32UpperLimit_D']);\n        add_block"
		"('built-in/Ground', [gcb, '/f32UpperLimit_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param( "
		"   [gcb, '/f32LowerLimit_D'], 'Position');\n        orient = get_param( [gcb, '/f32LowerLimit_D'], 'Orientation');\n"
		"        delete_block(       [gcb, '/f32LowerLimit_D']);\n        add_block('built-in/Ground', [gcb, '/f32LowerLimit_"
		"D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32CC1sc_Q'], 'Position');\n   "
		"     orient = get_param( [gcb, '/f32CC1sc_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc_Q']);\n"
		"        add_block('built-in/Ground', [gcb, '/f32CC1sc_Q'], 'Position', pos, 'Orientation', orient);\n\n        pos ="
		" get_param(    [gcb, '/f32CC2sc_Q'], 'Position');\n        orient = get_param( [gcb, '/f32CC2sc_Q'], 'Orientation');"
		"\n        delete_block(       [gcb, '/f32CC2sc_Q']);\n        add_block('built-in/Ground', [gcb, '/f32CC2sc_Q'], 'Po"
		"sition', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32UpperLimit_Q'], 'Position');\n      "
		"  orient = get_param( [gcb, '/f32UpperLimit_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32UpperLimit_"
		"Q']);\n        add_block('built-in/Ground', [gcb, '/f32UpperLimit_Q'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/f32LowerLimit_Q'], 'Position');\n        orient = get_param( [gcb, '/f32LowerLimi"
		"t_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimit_Q']);\n        add_block('built-in/Ground'"
		", [gcb, '/f32LowerLimit_Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/u16NShi"
		"ft'], 'Position');\n        orient = get_param( [gcb, '/u16NShift'], 'Orientation');\n        delete_block(       [g"
		"cb, '/u16NShift']);\n        add_block('built-in/Ground', [gcb, '/u16NShift'], 'Position', pos, 'Orientation', orien"
		"t);\n\n        pos = get_param(    [gcb, '/f32Acc_D'], 'Position');\n        orient = get_param( [gcb, '/f32Acc_D'],"
		" 'Orientation');\n        delete_block(       [gcb, '/f32Acc_D']);\n        add_block('built-in/Ground', [gcb, '/f32"
		"Acc_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32InErrK1_D'], 'Position')"
		";\n        orient = get_param( [gcb, '/f32InErrK1_D'], 'Orientation');\n        delete_block(       [gcb, '/f32InErr"
		"K1_D']);\n        add_block('built-in/Ground', [gcb, '/f32InErrK1_D'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/f32Acc_Q'], 'Position');\n        orient = get_param( [gcb, '/f32Acc_Q'], 'Orient"
		"ation');\n        delete_block(       [gcb, '/f32Acc_Q']);\n        add_block('built-in/Ground', [gcb, '/f32Acc_Q'],"
		" 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32InErrK1_Q'], 'Position');\n     "
		"   orient = get_param( [gcb, '/f32InErrK1_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32InErrK1_Q']);"
		"\n        add_block('built-in/Ground', [gcb, '/f32InErrK1_Q'], 'Position', pos, 'Orientation', orient);\n\n        p"
		"os = get_param(    [gcb, '/f32IObsrvIn_1L_D'], 'Position');\n        orient = get_param( [gcb, '/f32IObsrvIn_1L_D'],"
		" 'Orientation');\n        delete_block(       [gcb, '/f32IObsrvIn_1L_D']);\n        add_block('built-in/Ground', [gc"
		"b, '/f32IObsrvIn_1L_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16IObsrvIn"
		"_1H_D'], 'Position');\n        orient = get_param( [gcb, '/f16IObsrvIn_1H_D'], 'Orientation');\n        delete_block"
		"(       [gcb, '/f16IObsrvIn_1H_D']);\n        add_block('built-in/Ground', [gcb, '/f16IObsrvIn_1H_D'], 'Position', p"
		"os, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IObsrvIn_1L_Q'], 'Position');\n        orient "
		"= get_param( [gcb, '/f32IObsrvIn_1L_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32IObsrvIn_1L_Q']);\n"
		"        add_block('built-in/Ground', [gcb, '/f32IObsrvIn_1L_Q'], 'Position', pos, 'Orientation', orient);\n\n       "
		" pos = get_param(    [gcb, '/f16IObsrvIn_1H_Q'], 'Position');\n        orient = get_param( [gcb, '/f16IObsrvIn_1H_Q'"
		"], 'Orientation');\n        delete_block(       [gcb, '/f16IObsrvIn_1H_Q']);\n        add_block('built-in/Ground', ["
		"gcb, '/f16IObsrvIn_1H_Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IObsrv"
		"_D'], 'Position');\n        orient = get_param( [gcb, '/f32IObsrv_D'], 'Orientation');\n        delete_block(       "
		"[gcb, '/f32IObsrv_D']);\n        add_block('built-in/Ground', [gcb, '/f32IObsrv_D'], 'Position', pos, 'Orientation',"
		" orient);\n\n        pos = get_param(    [gcb, '/f32IObsrv_Q'], 'Position');\n        orient = get_param( [gcb, '/f3"
		"2IObsrv_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32IObsrv_Q']);\n        add_block('built-in/Groun"
		"d', [gcb, '/f32IObsrv_Q'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f32EObsr"
		"v_D_Out'], 'Position');\n        orient = get_param( [gcb '/f32EObsrv_D_Out'], 'Orientation');\n        delete_block"
		"(       [gcb '/f32EObsrv_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f32EObsrv_D_Out'], 'Position', p"
		"os, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32EObsrv_Q_Out'], 'Position');\n        orient = "
		"get_param( [gcb '/f32EObsrv_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32EObsrv_Q_Out']);\n      "
		"  add_block('built-in/Terminator', [gcb '/f32EObsrv_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos"
		" = get_param(    [gcb '/f32Acc_D_Out'], 'Position');\n        orient = get_param( [gcb '/f32Acc_D_Out'], 'Orientatio"
		"n');\n        delete_block(       [gcb '/f32Acc_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f32Acc_D_"
		"Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InErrK1_D_Out'], 'Position'"
		");\n        orient = get_param( [gcb '/f32InErrK1_D_Out'], 'Orientation');\n        delete_block(       [gcb '/f32In"
		"ErrK1_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f32InErrK1_D_Out'], 'Position', pos, 'Orientation',"
		" orient);\n\n        pos = get_param(    [gcb '/f32Acc_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32"
		"Acc_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Q_Out']);\n        add_block('built-in/Termi"
		"nator', [gcb '/f32Acc_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InE"
		"rrK1_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32InErrK1_Q_Out'], 'Orientation');\n        delete_b"
		"lock(       [gcb '/f32InErrK1_Q_Out']);\n        add_block('built-in/Terminator', [gcb '/f32InErrK1_Q_Out'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IObsrvIn_1L_D_Out'], 'Position');\n      "
		"  orient = get_param( [gcb '/f32IObsrvIn_1L_D_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IObsrvIn"
		"_1L_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f32IObsrvIn_1L_D_Out'], 'Position', pos, 'Orientation"
		"', orient);\n\n        pos = get_param(    [gcb '/f16IObsrvIn_1H_D_Out'], 'Position');\n        orient = get_param( "
		"[gcb '/f16IObsrvIn_1H_D_Out'], 'Orientation');\n        delete_block(       [gcb '/f16IObsrvIn_1H_D_Out']);\n       "
		" add_block('built-in/Terminator', [gcb '/f16IObsrvIn_1H_D_Out'], 'Position', pos, 'Orientation', orient);\n\n       "
		" pos = get_param(    [gcb '/f32IObsrvIn_1L_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32IObsrvIn_1L_"
		"Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IObsrvIn_1L_Q_Out']);\n        add_block('built-in/T"
		"erminator', [gcb '/f32IObsrvIn_1L_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    ["
		"gcb '/f16IObsrvIn_1H_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f16IObsrvIn_1H_Q_Out'], 'Orientation'"
		");\n        delete_block(       [gcb '/f16IObsrvIn_1H_Q_Out']);\n        add_block('built-in/Terminator', [gcb '/f16"
		"IObsrvIn_1H_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IObsrv_D_Out'"
		"], 'Position');\n        orient = get_param( [gcb '/f32IObsrv_D_Out'], 'Orientation');\n        delete_block(       "
		"[gcb '/f32IObsrv_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f32IObsrv_D_Out'], 'Position', pos, 'Ori"
		"entation', orient);\n\n        pos = get_param(    [gcb '/f32IObsrv_Q_Out'], 'Position');\n        orient = get_para"
		"m( [gcb '/f32IObsrv_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IObsrv_Q_Out']);\n        add_bl"
		"ock('built-in/Terminator', [gcb '/f32IObsrv_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param"
		"([gcb '/pIAB'], 'Port', '1');\n        set_param([gcb '/pUAB'], 'Port', '2');\n        set_param([gcb '/f32Velocity'"
		"], 'Port', '3');\n        set_param([gcb '/f32Phase'], 'Port', '4');\n\n        set_param([gcb '/f32PhaseErr'], 'Por"
		"t', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on','on','on','on','on','on','"
		"on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 125\n          height = 125;\n          set_param(gcb,'Posi"
		"tion',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n"
		"    if strcmp(get_param([gcb '/f32IGain'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n"
		"        pos = get_param(    [gcb, '/f32IGain'], 'Position');\n        orient = get_param( [gcb, '/f32IGain'], 'Orien"
		"tation');\n        delete_block(       [gcb, '/f32IGain']);\n        add_block('built-in/Inport', [gcb, '/f32IGain']"
		", 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32UGai"
		"n'], 'Position');\n        orient = get_param( [gcb, '/f32UGain'], 'Orientation');\n        delete_block(       [gcb"
		", '/f32UGain']);\n        add_block('built-in/Inport', [gcb, '/f32UGain'], 'Position', pos, 'Orientation', orient, '"
		"OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32WIGain'], 'Position');\n        orient = get_pa"
		"ram( [gcb, '/f32WIGain'], 'Orientation');\n        delete_block(       [gcb, '/f32WIGain']);\n        add_block('bui"
		"lt-in/Inport', [gcb, '/f32WIGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        p"
		"os = get_param(    [gcb, '/f32EGain'], 'Position');\n        orient = get_param( [gcb, '/f32EGain'], 'Orientation');"
		"\n        delete_block(       [gcb, '/f32EGain']);\n        add_block('built-in/Inport', [gcb, '/f32EGain'], 'Positi"
		"on', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/s16Shift'], 'Pos"
		"ition');\n        orient = get_param( [gcb, '/s16Shift'], 'Orientation');\n        delete_block(       [gcb, '/s16Sh"
		"ift']);\n        add_block('built-in/Inport', [gcb, '/s16Shift'], 'Position', pos, 'Orientation', orient, 'OutDataTy"
		"peStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32CC1sc_D'], 'Position');\n        orient = get_param( [gc"
		"b, '/f32CC1sc_D'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc_D']);\n        add_block('built-in/"
		"Inport', [gcb, '/f32CC1sc_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = "
		"get_param(    [gcb, '/f32CC2sc_D'], 'Position');\n        orient = get_param( [gcb, '/f32CC2sc_D'], 'Orientation');\n"
		"        delete_block(       [gcb, '/f32CC2sc_D']);\n        add_block('built-in/Inport', [gcb, '/f32CC2sc_D'], 'Posi"
		"tion', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32UpperLimit_"
		"D'], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimit_D'], 'Orientation');\n        delete_block(    "
		"   [gcb, '/f32UpperLimit_D']);\n        add_block('built-in/Inport', [gcb, '/f32UpperLimit_D'], 'Position', pos, 'Or"
		"ientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32LowerLimit_D'], 'Position'"
		");\n        orient = get_param( [gcb, '/f32LowerLimit_D'], 'Orientation');\n        delete_block(       [gcb, '/f32L"
		"owerLimit_D']);\n        add_block('built-in/Inport', [gcb, '/f32LowerLimit_D'], 'Position', pos, 'Orientation', ori"
		"ent, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32CC1sc_Q'], 'Position');\n        orient ="
		" get_param( [gcb, '/f32CC1sc_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc_Q']);\n        add_b"
		"lock('built-in/Inport', [gcb, '/f32CC1sc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n"
		"        pos = get_param(    [gcb, '/f32CC2sc_Q'], 'Position');\n        orient = get_param( [gcb, '/f32CC2sc_Q'], 'O"
		"rientation');\n        delete_block(       [gcb, '/f32CC2sc_Q']);\n        add_block('built-in/Inport', [gcb, '/f32C"
		"C2sc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '"
		"/f32UpperLimit_Q'], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimit_Q'], 'Orientation');\n        de"
		"lete_block(       [gcb, '/f32UpperLimit_Q']);\n        add_block('built-in/Inport', [gcb, '/f32UpperLimit_Q'], 'Posi"
		"tion', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32LowerLimit_"
		"Q'], 'Position');\n        orient = get_param( [gcb, '/f32LowerLimit_Q'], 'Orientation');\n        delete_block(    "
		"   [gcb, '/f32LowerLimit_Q']);\n        add_block('built-in/Inport', [gcb, '/f32LowerLimit_Q'], 'Position', pos, 'Or"
		"ientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/u16NShift'], 'Position');\n  "
		"      orient = get_param( [gcb, '/u16NShift'], 'Orientation');\n        delete_block(       [gcb, '/u16NShift']);\n "
		"       add_block('built-in/Inport', [gcb, '/u16NShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', '"
		"uint16');\n\n        pos = get_param(    [gcb, '/f32Acc_D'], 'Position');\n        orient = get_param( [gcb, '/f32Ac"
		"c_D'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc_D']);\n        add_block('built-in/Inport', [gcb,"
		" '/f32Acc_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [g"
		"cb, '/f32InErrK1_D'], 'Position');\n        orient = get_param( [gcb, '/f32InErrK1_D'], 'Orientation');\n        del"
		"ete_block(       [gcb, '/f32InErrK1_D']);\n        add_block('built-in/Inport', [gcb, '/f32InErrK1_D'], 'Position', "
		"pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32Acc_Q'], 'Position"
		"');\n        orient = get_param( [gcb, '/f32Acc_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc_Q']"
		");\n        add_block('built-in/Inport', [gcb, '/f32Acc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr"
		"', 'int32');\n\n        pos = get_param(    [gcb, '/f32InErrK1_Q'], 'Position');\n        orient = get_param( [gcb, "
		"'/f32InErrK1_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32InErrK1_Q']);\n        add_block('built-in"
		"/Inport', [gcb, '/f32InErrK1_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos"
		" = get_param(    [gcb, '/f32IObsrvIn_1L_D'], 'Position');\n        orient = get_param( [gcb, '/f32IObsrvIn_1L_D'], '"
		"Orientation');\n        delete_block(       [gcb, '/f32IObsrvIn_1L_D']);\n        add_block('built-in/Inport', [gcb,"
		" '/f32IObsrvIn_1L_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_para"
		"m(    [gcb, '/f16IObsrvIn_1H_D'], 'Position');\n        orient = get_param( [gcb, '/f16IObsrvIn_1H_D'], 'Orientation"
		"');\n        delete_block(       [gcb, '/f16IObsrvIn_1H_D']);\n        add_block('built-in/Inport', [gcb, '/f16IObsr"
		"vIn_1H_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb,"
		" '/f32IObsrvIn_1L_Q'], 'Position');\n        orient = get_param( [gcb, '/f32IObsrvIn_1L_Q'], 'Orientation');\n      "
		"  delete_block(       [gcb, '/f32IObsrvIn_1L_Q']);\n        add_block('built-in/Inport', [gcb, '/f32IObsrvIn_1L_Q'],"
		" 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16IObsr"
		"vIn_1H_Q'], 'Position');\n        orient = get_param( [gcb, '/f16IObsrvIn_1H_Q'], 'Orientation');\n        delete_bl"
		"ock(       [gcb, '/f16IObsrvIn_1H_Q']);\n        add_block('built-in/Inport', [gcb, '/f16IObsrvIn_1H_Q'], 'Position'"
		", pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32IObsrv_D'], 'Pos"
		"ition');\n        orient = get_param( [gcb, '/f32IObsrv_D'], 'Orientation');\n        delete_block(       [gcb, '/f3"
		"2IObsrv_D']);\n        add_block('built-in/Inport', [gcb, '/f32IObsrv_D'], 'Position', pos, 'Orientation', orient, '"
		"OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IObsrv_Q'], 'Position');\n        orient = get_"
		"param( [gcb, '/f32IObsrv_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32IObsrv_Q']);\n        add_bloc"
		"k('built-in/Inport', [gcb, '/f32IObsrv_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n"
		"        pos = get_param(    [gcb '/f32EObsrv_D_Out'], 'Position');\n        orient = get_param( [gcb '/f32EObsrv_D_O"
		"ut'], 'Orientation');\n        delete_block(       [gcb '/f32EObsrv_D_Out']);\n        add_block('built-in/Outport',"
		" [gcb '/f32EObsrv_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32EObsrv_"
		"Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32EObsrv_Q_Out'], 'Orientation');\n        delete_block( "
		"      [gcb '/f32EObsrv_Q_Out']);\n        add_block('built-in/Outport', [gcb '/f32EObsrv_Q_Out'], 'Position', pos, '"
		"Orientation', orient);\n\n        pos = get_param(    [gcb '/f32Acc_D_Out'], 'Position');\n        orient = get_para"
		"m( [gcb '/f32Acc_D_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_D_Out']);\n        add_block('b"
		"uilt-in/Outport', [gcb '/f32Acc_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gc"
		"b '/f32InErrK1_D_Out'], 'Position');\n        orient = get_param( [gcb '/f32InErrK1_D_Out'], 'Orientation');\n      "
		"  delete_block(       [gcb '/f32InErrK1_D_Out']);\n        add_block('built-in/Outport', [gcb '/f32InErrK1_D_Out'], "
		"'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32Acc_Q_Out'], 'Position');\n       "
		" orient = get_param( [gcb '/f32Acc_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Q_Out']);\n  "
		"      add_block('built-in/Outport', [gcb '/f32Acc_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos ="
		" get_param(    [gcb '/f32InErrK1_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32InErrK1_Q_Out'], 'Orie"
		"ntation');\n        delete_block(       [gcb '/f32InErrK1_Q_Out']);\n        add_block('built-in/Outport', [gcb '/f3"
		"2InErrK1_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IObsrvIn_1L_D_Ou"
		"t'], 'Position');\n        orient = get_param( [gcb '/f32IObsrvIn_1L_D_Out'], 'Orientation');\n        delete_block("
		"       [gcb '/f32IObsrvIn_1L_D_Out']);\n        add_block('built-in/Outport', [gcb '/f32IObsrvIn_1L_D_Out'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16IObsrvIn_1H_D_Out'], 'Position');\n      "
		"  orient = get_param( [gcb '/f16IObsrvIn_1H_D_Out'], 'Orientation');\n        delete_block(       [gcb '/f16IObsrvIn"
		"_1H_D_Out']);\n        add_block('built-in/Outport', [gcb '/f16IObsrvIn_1H_D_Out'], 'Position', pos, 'Orientation', "
		"orient);\n\n        pos = get_param(    [gcb '/f32IObsrvIn_1L_Q_Out'], 'Position');\n        orient = get_param( [gc"
		"b '/f32IObsrvIn_1L_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IObsrvIn_1L_Q_Out']);\n        ad"
		"d_block('built-in/Outport', [gcb '/f32IObsrvIn_1L_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos ="
		" get_param(    [gcb '/f16IObsrvIn_1H_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f16IObsrvIn_1H_Q_Out'"
		"], 'Orientation');\n        delete_block(       [gcb '/f16IObsrvIn_1H_Q_Out']);\n        add_block('built-in/Outport"
		"', [gcb '/f16IObsrvIn_1H_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32"
		"IObsrv_D_Out'], 'Position');\n        orient = get_param( [gcb '/f32IObsrv_D_Out'], 'Orientation');\n        delete_"
		"block(       [gcb '/f32IObsrv_D_Out']);\n        add_block('built-in/Outport', [gcb '/f32IObsrv_D_Out'], 'Position',"
		" pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IObsrv_Q_Out'], 'Position');\n        orient "
		"= get_param( [gcb '/f32IObsrv_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IObsrv_Q_Out']);\n    "
		"    add_block('built-in/Outport', [gcb '/f32IObsrv_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        se"
		"t_param([gcb '/pIAB'], 'Port', '1');\n        set_param([gcb '/pUAB'], 'Port', '2');\n        set_param([gcb '/f32Ve"
		"locity'], 'Port', '3');\n        set_param([gcb '/f32Phase'], 'Port', '4');\n        set_param([gcb '/f32IGain'], 'P"
		"ort', '5');\n        set_param([gcb '/f32UGain'], 'Port', '6');\n        set_param([gcb '/f32WIGain'], 'Port', '7');"
		"\n        set_param([gcb '/f32EGain'], 'Port', '8');\n        set_param([gcb '/s16Shift'], 'Port', '9');\n        se"
		"t_param([gcb '/f32CC1sc_D'], 'Port', '10');\n        set_param([gcb '/f32CC2sc_D'], 'Port', '11');\n        set_para"
		"m([gcb '/f32UpperLimit_D'], 'Port', '12');\n        set_param([gcb '/f32LowerLimit_D'], 'Port', '13');\n        set_"
		"param([gcb '/f32CC1sc_Q'], 'Port', '14');\n        set_param([gcb '/f32CC2sc_Q'], 'Port', '15');\n        set_param("
		"[gcb '/f32UpperLimit_Q'], 'Port', '16');\n        set_param([gcb '/f32LowerLimit_Q'], 'Port', '17');\n        set_pa"
		"ram([gcb '/u16NShift'], 'Port', '18');\n        set_param([gcb '/f32Acc_D'], 'Port', '19');\n        set_param([gcb "
		"'/f32InErrK1_D'], 'Port', '20');\n        set_param([gcb '/f32Acc_Q'], 'Port', '21');\n        set_param([gcb '/f32I"
		"nErrK1_Q'], 'Port', '22');\n        set_param([gcb '/f32IObsrvIn_1L_D'], 'Port', '23');\n        set_param([gcb '/f1"
		"6IObsrvIn_1H_D'], 'Port', '24');\n        set_param([gcb '/f32IObsrvIn_1L_Q'], 'Port', '25');\n        set_param([gc"
		"b '/f16IObsrvIn_1H_Q'], 'Port', '26');\n        set_param([gcb '/f32IObsrv_D'], 'Port', '27');\n        set_param([g"
		"cb '/f32IObsrv_Q'], 'Port', '28');\n\n        set_param([gcb '/f32PhaseErr'], 'Port', '1');\n        set_param([gcb "
		"'/f32EObsrv_D_Out'], 'Port', '2');\n        set_param([gcb '/f32EObsrv_Q_Out'], 'Port', '3');\n        set_param([gc"
		"b '/f32Acc_D_Out'], 'Port', '4');\n        set_param([gcb '/f32InErrK1_D_Out'], 'Port', '5');\n        set_param([gc"
		"b '/f32Acc_Q_Out'], 'Port', '6');\n        set_param([gcb '/f32InErrK1_Q_Out'], 'Port', '7');\n        set_param([gc"
		"b '/f32IObsrvIn_1L_D_Out'], 'Port', '8');\n        set_param([gcb '/f16IObsrvIn_1H_D_Out'], 'Port', '9');\n        s"
		"et_param([gcb '/f32IObsrvIn_1L_Q_Out'], 'Port', '10');\n        set_param([gcb '/f16IObsrvIn_1H_Q_Out'], 'Port', '11"
		"');\n        set_param([gcb '/f32IObsrv_D_Out'], 'Port', '12');\n        set_param([gcb '/f32IObsrv_Q_Out'], 'Port',"
		" '13');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off','off','off','off','off','off','off"
		"','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 725\n          height = 725;\n          set_par"
		"am(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_BemfObsrvDQ_F32', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  16
		  Object {
		    $ObjectID		    120
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on','on','on','on','on','on','on','on','on'});\nelse\n"
		    "    set_param(gcb,'MaskEnables',{'on','on','off','off','off','off','off','off','off','off','off','off','off','of"
		    "f','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    121
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    122
		    Type		    "edit"
		    Name		    "f32IGain"
		    Prompt		    "f32IGain (Scaled RL circuit constant)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    123
		    Type		    "edit"
		    Name		    "f32UGain"
		    Prompt		    "f32UGain (Scaled voltage cross-coupling constant)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    124
		    Type		    "edit"
		    Name		    "f32WIGain"
		    Prompt		    "f32WIGain (Scaled angular velocity cross-coupling constant)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    125
		    Type		    "edit"
		    Name		    "f32EGain"
		    Prompt		    "f32EGain (Scaled back-EMF cross-coupling constant)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    126
		    Type		    "edit"
		    Name		    "s16Shift"
		    Prompt		    "s16Shift (Scaling bitwise shift applied to all cross-coupling constants)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    127
		    Type		    "edit"
		    Name		    "f32CC1sc_D"
		    Prompt		    "f32CC1sc_D (CC1 coefficient of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    128
		    Type		    "edit"
		    Name		    "f32CC2sc_D"
		    Prompt		    "f32CC2sc_D (CC2 coefficient of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    129
		    Type		    "edit"
		    Name		    "f32UpperLimit_D"
		    Prompt		    "f32UpperLimit_D (Upper Limit of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    130
		    Type		    "edit"
		    Name		    "f32LowerLimit_D"
		    Prompt		    "f32LowerLimit_D (Lower Limit of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    131
		    Type		    "edit"
		    Name		    "f32CC1sc_Q"
		    Prompt		    "f32CC1sc_Q (CC1 coefficient of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    132
		    Type		    "edit"
		    Name		    "f32CC2sc_Q"
		    Prompt		    "f32CC2sc_Q (CC2 coefficient of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    133
		    Type		    "edit"
		    Name		    "f32UpperLimit_Q"
		    Prompt		    "f32UpperLimit_Q (Upper Limit of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    134
		    Type		    "edit"
		    Name		    "f32LowerLimit_Q"
		    Prompt		    "f32LowerLimit_Q (Lower Limit of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    135
		    Type		    "edit"
		    Name		    "u16NShift"
		    Prompt		    "u16NShift (Scaling bitwise shift applied to the controller coefficients)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_BemfObsrvDQ_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"88"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIAB"
		  SID			  "11:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pUAB"
		  SID			  "11:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32Velocity"
		  SID			  "11:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32Phase"
		  SID			  "11:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "11:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_BemfObsrvDQ_SF"
		  SID			  "11:5"
		  Ports			  [28, 13]
		  Position		  [135, 140, 285, 275]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_BemfObsrvDQ_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,f32IGain,f32UGain,f32WIGain,f32EGain,s16Shift,f32CC1sc_D,f32CC2sc_D,f3"
		  "2UpperLimit_D,f32LowerLimit_D,f32CC1sc_Q,f32CC2sc_Q,f32UpperLimit_Q,f32LowerLimit_Q,u16NShift"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "11:47"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  49
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    136
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "11:50"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  50
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    137
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_BemfObsrvDQ_BAM_F32.mdl');text(10,75,'PMSM back-EMF observer DQ.');text(10,60,'"
		    "NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IObsrvIn_1H_D"
		  SID			  "11:72"
		  Position		  [40, 1118, 70, 1132]
		  ZOrder		  70
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16IObsrvIn_1H_D_Out"
		  SID			  "11:84"
		  Position		  [340, 518, 370, 532]
		  ZOrder		  82
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IObsrvIn_1H_Q"
		  SID			  "11:74"
		  Position		  [40, 1198, 70, 1212]
		  ZOrder		  72
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16IObsrvIn_1H_Q_Out"
		  SID			  "11:86"
		  Position		  [340, 598, 370, 612]
		  ZOrder		  84
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc_D"
		  SID			  "11:67"
		  Position		  [40, 918, 70, 932]
		  ZOrder		  65
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_D_Out"
		  SID			  "11:79"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  77
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc_Q"
		  SID			  "11:69"
		  Position		  [40, 998, 70, 1012]
		  ZOrder		  67
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Q_Out"
		  SID			  "11:81"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  79
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC1sc_D"
		  SID			  "11:58"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  56
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC1sc_Q"
		  SID			  "11:62"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  60
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC2sc_D"
		  SID			  "11:59"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  57
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC2sc_Q"
		  SID			  "11:63"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  61
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32EGain"
		  SID			  "11:56"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  54
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32EObsrv_D_Out"
		  SID			  "11:77"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  75
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32EObsrv_Q_Out"
		  SID			  "11:78"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  76
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IGain"
		  SID			  "11:53"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  51
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IObsrvIn_1L_D"
		  SID			  "11:71"
		  Position		  [40, 1078, 70, 1092]
		  ZOrder		  69
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IObsrvIn_1L_D_Out"
		  SID			  "11:83"
		  Position		  [340, 478, 370, 492]
		  ZOrder		  81
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IObsrvIn_1L_Q"
		  SID			  "11:73"
		  Position		  [40, 1158, 70, 1172]
		  ZOrder		  71
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IObsrvIn_1L_Q_Out"
		  SID			  "11:85"
		  Position		  [340, 558, 370, 572]
		  ZOrder		  83
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IObsrv_D"
		  SID			  "11:75"
		  Position		  [40, 1238, 70, 1252]
		  ZOrder		  73
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IObsrv_D_Out"
		  SID			  "11:87"
		  Position		  [340, 638, 370, 652]
		  ZOrder		  85
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IObsrv_Q"
		  SID			  "11:76"
		  Position		  [40, 1278, 70, 1292]
		  ZOrder		  74
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IObsrv_Q_Out"
		  SID			  "11:88"
		  Position		  [340, 678, 370, 692]
		  ZOrder		  86
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InErrK1_D"
		  SID			  "11:68"
		  Position		  [40, 958, 70, 972]
		  ZOrder		  66
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InErrK1_D_Out"
		  SID			  "11:80"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  78
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InErrK1_Q"
		  SID			  "11:70"
		  Position		  [40, 1038, 70, 1052]
		  ZOrder		  68
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InErrK1_Q_Out"
		  SID			  "11:82"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  80
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimit_D"
		  SID			  "11:61"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  59
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimit_Q"
		  SID			  "11:65"
		  Position		  [40, 838, 70, 852]
		  ZOrder		  63
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UGain"
		  SID			  "11:54"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  52
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimit_D"
		  SID			  "11:60"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  58
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimit_Q"
		  SID			  "11:64"
		  Position		  [40, 798, 70, 812]
		  ZOrder		  62
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32WIGain"
		  SID			  "11:55"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  53
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16Shift"
		  SID			  "11:57"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  55
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShift"
		  SID			  "11:66"
		  Position		  [40, 878, 70, 892]
		  ZOrder		  64
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32PhaseErr"
		  SID			  "11:34"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  36
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  13
		  DstBlock		  "f32IObsrv_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  12
		  DstBlock		  "f32IObsrv_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  11
		  DstBlock		  "f16IObsrvIn_1H_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  10
		  DstBlock		  "f32IObsrvIn_1L_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  9
		  DstBlock		  "f16IObsrvIn_1H_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  8
		  DstBlock		  "f32IObsrvIn_1L_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  7
		  DstBlock		  "f32InErrK1_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  6
		  DstBlock		  "f32Acc_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  5
		  DstBlock		  "f32InErrK1_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  4
		  DstBlock		  "f32Acc_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  3
		  DstBlock		  "f32EObsrv_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  2
		  DstBlock		  "f32EObsrv_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  1
		  DstBlock		  "f32PhaseErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f32IObsrv_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  28
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f32IObsrv_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  27
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f16IObsrvIn_1H_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  26
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f32IObsrvIn_1L_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  25
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "f16IObsrvIn_1H_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  24
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "f32IObsrvIn_1L_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  23
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "f32InErrK1_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  22
		}
		Line {
		  ZOrder		  21
		  SrcBlock		  "f32Acc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  21
		}
		Line {
		  ZOrder		  22
		  SrcBlock		  "f32InErrK1_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  20
		}
		Line {
		  ZOrder		  23
		  SrcBlock		  "f32Acc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  19
		}
		Line {
		  ZOrder		  24
		  SrcBlock		  "u16NShift"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  18
		}
		Line {
		  ZOrder		  25
		  SrcBlock		  "f32LowerLimit_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  17
		}
		Line {
		  ZOrder		  26
		  SrcBlock		  "f32UpperLimit_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  16
		}
		Line {
		  ZOrder		  27
		  SrcBlock		  "f32CC2sc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  28
		  SrcBlock		  "f32CC1sc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  29
		  SrcBlock		  "f32LowerLimit_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  30
		  SrcBlock		  "f32UpperLimit_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  31
		  SrcBlock		  "f32CC2sc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  32
		  SrcBlock		  "f32CC1sc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  33
		  SrcBlock		  "s16Shift"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  34
		  SrcBlock		  "f32EGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  35
		  SrcBlock		  "f32WIGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  36
		  SrcBlock		  "f32UGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  37
		  SrcBlock		  "f32IGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  38
		  SrcBlock		  "f32Phase"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  39
		  SrcBlock		  "f32Velocity"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  40
		  SrcBlock		  "pUAB"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  41
		  SrcBlock		  "pIAB"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_CurrentLoop_F32"
	      SID		      "12"
	      Ports		      [5, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 145, 260, 295]
	      ZOrder		      9
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		138
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_CurrentLoop_F32"
		Description		"Current control loop of the PMSM field-oriented control algorithm in 32-bit fixed-point fractional imp"
		"lementation. This block supports re-initialization of the internal state during simulation. If the block is reset, t"
		"he outputs of the PI controllers will be aligned with the inputs f32ControllerPIrAWDOut_preset and f32ControllerPIrA"
		"WQOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32CC1sc_D'], 'BlockType'), 'Inport')\n        posblk = get_pa"
		"ram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32CC1sc_D'], 'Position');\n        orient = get_param("
		" [gcb, '/f32CC1sc_D'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc_D']);\n        add_block('built"
		"-in/Ground', [gcb, '/f32CC1sc_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f"
		"32CC2sc_D'], 'Position');\n        orient = get_param( [gcb, '/f32CC2sc_D'], 'Orientation');\n        delete_block( "
		"      [gcb, '/f32CC2sc_D']);\n        add_block('built-in/Ground', [gcb, '/f32CC2sc_D'], 'Position', pos, 'Orientati"
		"on', orient);\n\n        pos = get_param(    [gcb, '/u16NShift_D'], 'Position');\n        orient = get_param( [gcb, "
		"'/u16NShift_D'], 'Orientation');\n        delete_block(       [gcb, '/u16NShift_D']);\n        add_block('built-in/G"
		"round', [gcb, '/u16NShift_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32CC"
		"1sc_Q'], 'Position');\n        orient = get_param( [gcb, '/f32CC1sc_Q'], 'Orientation');\n        delete_block(     "
		"  [gcb, '/f32CC1sc_Q']);\n        add_block('built-in/Ground', [gcb, '/f32CC1sc_Q'], 'Position', pos, 'Orientation',"
		" orient);\n\n        pos = get_param(    [gcb, '/f32CC2sc_Q'], 'Position');\n        orient = get_param( [gcb, '/f32"
		"CC2sc_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32CC2sc_Q']);\n        add_block('built-in/Ground',"
		" [gcb, '/f32CC2sc_Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/u16NShift_Q']"
		", 'Position');\n        orient = get_param( [gcb, '/u16NShift_Q'], 'Orientation');\n        delete_block(       [gcb"
		", '/u16NShift_Q']);\n        add_block('built-in/Ground', [gcb, '/u16NShift_Q'], 'Position', pos, 'Orientation', ori"
		"ent);\n\n        pos = get_param(    [gcb, '/f32Acc_D'], 'Position');\n        orient = get_param( [gcb, '/f32Acc_D'"
		"], 'Orientation');\n        delete_block(       [gcb, '/f32Acc_D']);\n        add_block('built-in/Ground', [gcb, '/f"
		"32Acc_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32InErrK1_D'], 'Position"
		"');\n        orient = get_param( [gcb, '/f32InErrK1_D'], 'Orientation');\n        delete_block(       [gcb, '/f32InE"
		"rrK1_D']);\n        add_block('built-in/Ground', [gcb, '/f32InErrK1_D'], 'Position', pos, 'Orientation', orient);\n\n"
		"        pos = get_param(    [gcb, '/f32Acc_Q'], 'Position');\n        orient = get_param( [gcb, '/f32Acc_Q'], 'Orien"
		"tation');\n        delete_block(       [gcb, '/f32Acc_Q']);\n        add_block('built-in/Ground', [gcb, '/f32Acc_Q']"
		", 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32InErrK1_Q'], 'Position');\n    "
		"    orient = get_param( [gcb, '/f32InErrK1_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32InErrK1_Q'])"
		";\n        add_block('built-in/Ground', [gcb, '/f32InErrK1_Q'], 'Position', pos, 'Orientation', orient);\n\n\n      "
		"  pos = get_param(    [gcb '/f32Acc_D_Out'], 'Position');\n        orient = get_param( [gcb '/f32Acc_D_Out'], 'Orien"
		"tation');\n        delete_block(       [gcb '/f32Acc_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f32A"
		"cc_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InErrK1_D_Out'], 'Posi"
		"tion');\n        orient = get_param( [gcb '/f32InErrK1_D_Out'], 'Orientation');\n        delete_block(       [gcb '/"
		"f32InErrK1_D_Out']);\n        add_block('built-in/Terminator', [gcb '/f32InErrK1_D_Out'], 'Position', pos, 'Orientat"
		"ion', orient);\n\n        pos = get_param(    [gcb '/f32Acc_Q_Out'], 'Position');\n        orient = get_param( [gcb "
		"'/f32Acc_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Q_Out']);\n        add_block('built-in/"
		"Terminator', [gcb '/f32Acc_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f"
		"32InErrK1_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32InErrK1_Q_Out'], 'Orientation');\n        del"
		"ete_block(       [gcb '/f32InErrK1_Q_Out']);\n        add_block('built-in/Terminator', [gcb '/f32InErrK1_Q_Out'], 'P"
		"osition', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32UDcBus'], 'Port', '1');\n        set_param(["
		"gcb '/pIDQReq'], 'Port', '2');\n        set_param([gcb '/pIDQFbck'], 'Port', '3');\n        set_param([gcb '/f32Cont"
		"rollerPIrAWDOut_preset'], 'Port', '4');\n        set_param([gcb '/f32ControllerPIrAWQOut_preset'], 'Port', '5');\n\n"
		"        set_param([gcb '/pUDQReq'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','"
		"on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 150\n          height = 150;\n          set_param(gcb,'Posi"
		"tion',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n"
		"    if strcmp(get_param([gcb '/f32CC1sc_D'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n"
		"\n        pos = get_param(    [gcb, '/f32CC1sc_D'], 'Position');\n        orient = get_param( [gcb, '/f32CC1sc_D'], "
		"'Orientation');\n        delete_block(       [gcb, '/f32CC1sc_D']);\n        add_block('built-in/Inport', [gcb, '/f3"
		"2CC1sc_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb,"
		" '/f32CC2sc_D'], 'Position');\n        orient = get_param( [gcb, '/f32CC2sc_D'], 'Orientation');\n        delete_blo"
		"ck(       [gcb, '/f32CC2sc_D']);\n        add_block('built-in/Inport', [gcb, '/f32CC2sc_D'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/u16NShift_D'], 'Position');\n   "
		"     orient = get_param( [gcb, '/u16NShift_D'], 'Orientation');\n        delete_block(       [gcb, '/u16NShift_D']);"
		"\n        add_block('built-in/Inport', [gcb, '/u16NShift_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeSt"
		"r', 'uint16');\n\n        pos = get_param(    [gcb, '/f32CC1sc_Q'], 'Position');\n        orient = get_param( [gcb, "
		"'/f32CC1sc_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc_Q']);\n        add_block('built-in/Inp"
		"ort', [gcb, '/f32CC1sc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get"
		"_param(    [gcb, '/f32CC2sc_Q'], 'Position');\n        orient = get_param( [gcb, '/f32CC2sc_Q'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/f32CC2sc_Q']);\n        add_block('built-in/Inport', [gcb, '/f32CC2sc_Q'], 'Positi"
		"on', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/u16NShift_Q'], '"
		"Position');\n        orient = get_param( [gcb, '/u16NShift_Q'], 'Orientation');\n        delete_block(       [gcb, '"
		"/u16NShift_Q']);\n        add_block('built-in/Inport', [gcb, '/u16NShift_Q'], 'Position', pos, 'Orientation', orient"
		", 'OutDataTypeStr', 'uint16');\n\n        pos = get_param(    [gcb, '/f32Acc_D'], 'Position');\n        orient = get"
		"_param( [gcb, '/f32Acc_D'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc_D']);\n        add_block('bu"
		"ilt-in/Inport', [gcb, '/f32Acc_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        p"
		"os = get_param(    [gcb, '/f32InErrK1_D'], 'Position');\n        orient = get_param( [gcb, '/f32InErrK1_D'], 'Orient"
		"ation');\n        delete_block(       [gcb, '/f32InErrK1_D']);\n        add_block('built-in/Inport', [gcb, '/f32InEr"
		"rK1_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/"
		"f32Acc_Q'], 'Position');\n        orient = get_param( [gcb, '/f32Acc_Q'], 'Orientation');\n        delete_block(    "
		"   [gcb, '/f32Acc_Q']);\n        add_block('built-in/Inport', [gcb, '/f32Acc_Q'], 'Position', pos, 'Orientation', or"
		"ient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32InErrK1_Q'], 'Position');\n        orien"
		"t = get_param( [gcb, '/f32InErrK1_Q'], 'Orientation');\n        delete_block(       [gcb, '/f32InErrK1_Q']);\n      "
		"  add_block('built-in/Inport', [gcb, '/f32InErrK1_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'in"
		"t32');\n\n\n        pos = get_param(    [gcb '/f32Acc_D_Out'], 'Position');\n        orient = get_param( [gcb '/f32A"
		"cc_D_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_D_Out']);\n        add_block('built-in/Outpor"
		"t', [gcb '/f32Acc_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InErrK1"
		"_D_Out'], 'Position');\n        orient = get_param( [gcb '/f32InErrK1_D_Out'], 'Orientation');\n        delete_block"
		"(       [gcb '/f32InErrK1_D_Out']);\n        add_block('built-in/Outport', [gcb '/f32InErrK1_D_Out'], 'Position', po"
		"s, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32Acc_Q_Out'], 'Position');\n        orient = get_"
		"param( [gcb '/f32Acc_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Q_Out']);\n        add_bloc"
		"k('built-in/Outport', [gcb '/f32Acc_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(   "
		" [gcb '/f32InErrK1_Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32InErrK1_Q_Out'], 'Orientation');\n  "
		"      delete_block(       [gcb '/f32InErrK1_Q_Out']);\n        add_block('built-in/Outport', [gcb '/f32InErrK1_Q_Out"
		"'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32UDcBus'], 'Port', '1');\n        set_p"
		"aram([gcb '/pIDQReq'], 'Port', '2');\n        set_param([gcb '/pIDQFbck'], 'Port', '3');\n        set_param([gcb '/f"
		"32ControllerPIrAWDOut_preset'], 'Port', '4');\n        set_param([gcb '/f32ControllerPIrAWQOut_preset'], 'Port', '5'"
		");\n        set_param([gcb '/f32CC1sc_D'], 'Port', '6');\n        set_param([gcb '/f32CC2sc_D'], 'Port', '7');\n    "
		"    set_param([gcb '/u16NShift_D'], 'Port', '8');\n        set_param([gcb '/f32CC1sc_Q'], 'Port', '9');\n        set"
		"_param([gcb '/f32CC2sc_Q'], 'Port', '10');\n        set_param([gcb '/u16NShift_Q'], 'Port', '11');\n        set_para"
		"m([gcb '/f32Acc_D'], 'Port', '12');\n        set_param([gcb '/f32InErrK1_D'], 'Port', '13');\n        set_param([gcb"
		" '/f32Acc_Q'], 'Port', '14');\n        set_param([gcb '/f32InErrK1_Q'], 'Port', '15');\n\n        set_param([gcb '/p"
		"UDQReq'], 'Port', '1');\n        set_param([gcb '/f32Acc_D_Out'], 'Port', '2');\n        set_param([gcb '/f32InErrK1"
		"_D_Out'], 'Port', '3');\n        set_param([gcb '/f32Acc_Q_Out'], 'Port', '4');\n        set_param([gcb '/f32InErrK1"
		"_Q_Out'], 'Port', '5');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off','off','off'});\n\n"
		"        if (posblk(4) - posblk(2)) < 400\n          height = 400;\n          set_param(gcb,'Position',[posblk(1), po"
		"sblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_CurrentLoop_F32', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  8
		  Object {
		    $ObjectID		    139
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','"
		    "on','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    140
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    141
		    Type		    "edit"
		    Name		    "f32CC1sc_D"
		    Prompt		    "f32CC1sc_D (CC1 coefficient of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    142
		    Type		    "edit"
		    Name		    "f32CC2sc_D"
		    Prompt		    "f32CC2sc_D (CC2 coefficient of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    143
		    Type		    "edit"
		    Name		    "u16NShift_D"
		    Prompt		    "u16NShift_D (Scaling bitwise shift applied to the D-axis controller coefficients)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    144
		    Type		    "edit"
		    Name		    "f32CC1sc_Q"
		    Prompt		    "f32CC1sc_Q (CC1 coefficient of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    145
		    Type		    "edit"
		    Name		    "f32CC2sc_Q"
		    Prompt		    "f32CC2sc_Q (CC2 coefficient of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    146
		    Type		    "edit"
		    Name		    "u16NShift_Q"
		    Prompt		    "u16NShift_Q (Scaling bitwise shift applied to the Q-axis controller coefficients)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_CurrentLoop_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"45"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32UDcBus"
		  SID			  "12:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIDQReq"
		  SID			  "12:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIDQFbck"
		  SID			  "12:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32ControllerPIrAWDOut_preset"
		  SID			  "12:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32ControllerPIrAWQOut_preset"
		  SID			  "12:10"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  12
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "12:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_CurrentLoop_SF"
		  SID			  "12:5"
		  Ports			  [15, 5]
		  Position		  [135, 170, 285, 240]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_CurrentLoop_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,f32CC1sc_D,f32CC2sc_D,u16NShift_D,f32CC1sc_Q,f32CC2sc_Q,u16NShift_Q"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "12:26"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  28
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    147
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "12:29"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  29
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    148
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_CurrentLoop_BAM_F32.mdl');text(10,75,'PMSM Current Loop.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc_D"
		  SID			  "12:38"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  36
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_D_Out"
		  SID			  "12:42"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  40
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc_Q"
		  SID			  "12:40"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Q_Out"
		  SID			  "12:44"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  42
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC1sc_D"
		  SID			  "12:32"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC1sc_Q"
		  SID			  "12:35"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC2sc_D"
		  SID			  "12:33"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC2sc_Q"
		  SID			  "12:36"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  34
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InErrK1_D"
		  SID			  "12:39"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InErrK1_D_Out"
		  SID			  "12:43"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  41
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InErrK1_Q"
		  SID			  "12:41"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InErrK1_Q_Out"
		  SID			  "12:45"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  43
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShift_D"
		  SID			  "12:34"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShift_Q"
		  SID			  "12:37"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Outport
		  Name			  "pUDQReq"
		  SID			  "12:21"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  23
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  5
		  DstBlock		  "f32InErrK1_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  4
		  DstBlock		  "f32Acc_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  3
		  DstBlock		  "f32InErrK1_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  2
		  DstBlock		  "f32Acc_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  1
		  DstBlock		  "pUDQReq"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32InErrK1_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f32Acc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32InErrK1_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f32Acc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "u16NShift_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f32CC2sc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "f32CC1sc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "u16NShift_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f32CC2sc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f32CC1sc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f32ControllerPIrAWQOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f32ControllerPIrAWDOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "pIDQFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "pIDQReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "f32UDcBus"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_FWSpeedLoop_F32"
	      SID		      "13"
	      Ports		      [10, 3, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 315, 260, 590]
	      ZOrder		      10
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		149
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_FWSpeedLoop_F32"
		Description		"Speed loop controller with Field Weakening capability for the PMSM field-oriented control algorithm in"
		" 32-bit fixed-point fractional implementation. This block supports re-initialization of the internal state during si"
		"mulation. If the block is reset, the outputs of the MA filters, PI controllers, and the ramp will be aligned with th"
		"e inputs f32FilterMAWOut_preset, f32FilterMAFWOut_preset, f32ControllerPIpAWQOut_preset, f32ControllerPIpAWFWOut_pre"
		"set, and f32RampOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/u16NSamplesW'], 'BlockType'), 'Inport')\n        posblk = get_"
		"param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/u16NSamplesW'], 'Position');\n        orient = get_pa"
		"ram( [gcb, '/u16NSamplesW'], 'Orientation');\n        delete_block(       [gcb, '/u16NSamplesW']);\n        add_bloc"
		"k('built-in/Ground', [gcb, '/u16NSamplesW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(   "
		" [gcb, '/u16NSamplesFW'], 'Position');\n        orient = get_param( [gcb, '/u16NSamplesFW'], 'Orientation');\n      "
		"  delete_block(       [gcb, '/u16NSamplesFW']);\n        add_block('built-in/Ground', [gcb, '/u16NSamplesFW'], 'Posi"
		"tion', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32PropGainQ'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/f32PropGainQ'], 'Orientation');\n        delete_block(       [gcb, '/f32PropGainQ']);\n    "
		"    add_block('built-in/Ground', [gcb, '/f32PropGainQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = g"
		"et_param(    [gcb, '/f32IntegGainQ'], 'Position');\n        orient = get_param( [gcb, '/f32IntegGainQ'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/f32IntegGainQ']);\n        add_block('built-in/Ground', [gcb, '/f32IntegGa"
		"inQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16PropGainShiftQ'], 'Positio"
		"n');\n        orient = get_param( [gcb, '/s16PropGainShiftQ'], 'Orientation');\n        delete_block(       [gcb, '/"
		"s16PropGainShiftQ']);\n        add_block('built-in/Ground', [gcb, '/s16PropGainShiftQ'], 'Position', pos, 'Orientati"
		"on', orient);\n\n        pos = get_param(    [gcb, '/s16IntegGainShiftQ'], 'Position');\n        orient = get_param("
		" [gcb, '/s16IntegGainShiftQ'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShiftQ']);\n        "
		"add_block('built-in/Ground', [gcb, '/s16IntegGainShiftQ'], 'Position', pos, 'Orientation', orient);\n\n        pos ="
		" get_param(    [gcb, '/f32LowerLimitQ'], 'Position');\n        orient = get_param( [gcb, '/f32LowerLimitQ'], 'Orient"
		"ation');\n        delete_block(       [gcb, '/f32LowerLimitQ']);\n        add_block('built-in/Ground', [gcb, '/f32Lo"
		"werLimitQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32UpperLimitQ'], 'Posi"
		"tion');\n        orient = get_param( [gcb, '/f32UpperLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/"
		"f32UpperLimitQ']);\n        add_block('built-in/Ground', [gcb, '/f32UpperLimitQ'], 'Position', pos, 'Orientation', o"
		"rient);\n\n        pos = get_param(    [gcb, '/f32PropGainFW'], 'Position');\n        orient = get_param( [gcb, '/f3"
		"2PropGainFW'], 'Orientation');\n        delete_block(       [gcb, '/f32PropGainFW']);\n        add_block('built-in/G"
		"round', [gcb, '/f32PropGainFW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32"
		"IntegGainFW'], 'Position');\n        orient = get_param( [gcb, '/f32IntegGainFW'], 'Orientation');\n        delete_b"
		"lock(       [gcb, '/f32IntegGainFW']);\n        add_block('built-in/Ground', [gcb, '/f32IntegGainFW'], 'Position', p"
		"os, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16PropGainShiftFW'], 'Position');\n        orien"
		"t = get_param( [gcb, '/s16PropGainShiftFW'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShiftFW"
		"']);\n        add_block('built-in/Ground', [gcb, '/s16PropGainShiftFW'], 'Position', pos, 'Orientation', orient);\n\n"
		"        pos = get_param(    [gcb, '/s16IntegGainShiftFW'], 'Position');\n        orient = get_param( [gcb, '/s16Inte"
		"gGainShiftFW'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShiftFW']);\n        add_block('bui"
		"lt-in/Ground', [gcb, '/s16IntegGainShiftFW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(  "
		"  [gcb, '/f32LowerLimitFW'], 'Position');\n        orient = get_param( [gcb, '/f32LowerLimitFW'], 'Orientation');\n "
		"       delete_block(       [gcb, '/f32LowerLimitFW']);\n        add_block('built-in/Ground', [gcb, '/f32LowerLimitFW"
		"'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32UpperLimitFW'], 'Position');\n"
		"        orient = get_param( [gcb, '/f32UpperLimitFW'], 'Orientation');\n        delete_block(       [gcb, '/f32Upper"
		"LimitFW']);\n        add_block('built-in/Ground', [gcb, '/f32UpperLimitFW'], 'Position', pos, 'Orientation', orient)"
		";\n\n        pos = get_param(    [gcb, '/f32RampUp'], 'Position');\n        orient = get_param( [gcb, '/f32RampUp'],"
		" 'Orientation');\n        delete_block(       [gcb, '/f32RampUp']);\n        add_block('built-in/Ground', [gcb, '/f3"
		"2RampUp'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32RampDown'], 'Position'"
		");\n        orient = get_param( [gcb, '/f32RampDown'], 'Orientation');\n        delete_block(       [gcb, '/f32RampD"
		"own']);\n        add_block('built-in/Ground', [gcb, '/f32RampDown'], 'Position', pos, 'Orientation', orient);\n\n   "
		"     pos = get_param(    [gcb, '/f32IQReqK_1'], 'Position');\n        orient = get_param( [gcb, '/f32IQReqK_1'], 'Or"
		"ientation');\n        delete_block(       [gcb, '/f32IQReqK_1']);\n        add_block('built-in/Ground', [gcb, '/f32I"
		"QReqK_1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32AccW'], 'Position');\n"
		"        orient = get_param( [gcb, '/f32AccW'], 'Orientation');\n        delete_block(       [gcb, '/f32AccW']);\n   "
		"     add_block('built-in/Ground', [gcb, '/f32AccW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_p"
		"aram(    [gcb, '/f32AccFW'], 'Position');\n        orient = get_param( [gcb, '/f32AccFW'], 'Orientation');\n        "
		"delete_block(       [gcb, '/f32AccFW']);\n        add_block('built-in/Ground', [gcb, '/f32AccFW'], 'Position', pos, "
		"'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1Q'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/f32IntegPartK_1Q'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegPartK_1Q']);\n    "
		"    add_block('built-in/Ground', [gcb, '/f32IntegPartK_1Q'], 'Position', pos, 'Orientation', orient);\n\n        pos"
		" = get_param(    [gcb, '/f32InK_1Q'], 'Position');\n        orient = get_param( [gcb, '/f32InK_1Q'], 'Orientation');"
		"\n        delete_block(       [gcb, '/f32InK_1Q']);\n        add_block('built-in/Ground', [gcb, '/f32InK_1Q'], 'Posi"
		"tion', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1FW'], 'Position');\n      "
		"  orient = get_param( [gcb, '/f32IntegPartK_1FW'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegPart"
		"K_1FW']);\n        add_block('built-in/Ground', [gcb, '/f32IntegPartK_1FW'], 'Position', pos, 'Orientation', orient)"
		";\n\n        pos = get_param(    [gcb, '/f32InK_1FW'], 'Position');\n        orient = get_param( [gcb, '/f32InK_1FW'"
		"], 'Orientation');\n        delete_block(       [gcb, '/f32InK_1FW']);\n        add_block('built-in/Ground', [gcb, '"
		"/f32InK_1FW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32State'], 'Position"
		"');\n        orient = get_param( [gcb, '/f32State'], 'Orientation');\n        delete_block(       [gcb, '/f32State']"
		");\n        add_block('built-in/Ground', [gcb, '/f32State'], 'Position', pos, 'Orientation', orient);\n\n\n        p"
		"os = get_param(    [gcb '/f32AccW_Out'], 'Position');\n        orient = get_param( [gcb '/f32AccW_Out'], 'Orientatio"
		"n');\n        delete_block(       [gcb '/f32AccW_Out']);\n        add_block('built-in/Terminator', [gcb '/f32AccW_Ou"
		"t'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32AccFW_Out'], 'Position');\n  "
		"      orient = get_param( [gcb '/f32AccFW_Out'], 'Orientation');\n        delete_block(       [gcb '/f32AccFW_Out'])"
		";\n        add_block('built-in/Terminator', [gcb '/f32AccFW_Out'], 'Position', pos, 'Orientation', orient);\n\n     "
		"   pos = get_param(    [gcb '/f32IntegPartK_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK"
		"_1Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IntegPartK_1Q_Out']);\n        add_block('built-in"
		"/Terminator', [gcb '/f32IntegPartK_1Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(   "
		" [gcb '/f32InK_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32InK_1Q_Out'], 'Orientation');\n        "
		"delete_block(       [gcb '/f32InK_1Q_Out']);\n        add_block('built-in/Terminator', [gcb '/f32InK_1Q_Out'], 'Posi"
		"tion', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IntegPartK_1FW_Out'], 'Position');\n   "
		"     orient = get_param( [gcb '/f32IntegPartK_1FW_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Inte"
		"gPartK_1FW_Out']);\n        add_block('built-in/Terminator', [gcb '/f32IntegPartK_1FW_Out'], 'Position', pos, 'Orien"
		"tation', orient);\n\n        pos = get_param(    [gcb '/f32InK_1FW_Out'], 'Position');\n        orient = get_param( "
		"[gcb '/f32InK_1FW_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InK_1FW_Out']);\n        add_block('"
		"built-in/Terminator', [gcb '/f32InK_1FW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param( "
		"   [gcb '/f32State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n        "
		"delete_block(       [gcb '/f32State_Out']);\n        add_block('built-in/Terminator', [gcb '/f32State_Out'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n\n        if strcmp(get_param([gcb '/f32WReqFilt'], 'BlockType'), 'Outport')\n "
		"           pos = get_param(    [gcb '/f32WReqFilt'], 'Position');\n            orient = get_param( [gcb '/f32WReqFil"
		"t'], 'Orientation');\n            delete_block(       [gcb '/f32WReqFilt']);\n            add_block('built-in/Termin"
		"ator', [gcb '/f32WReqFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32W"
		"Err'], 'Position');\n            orient = get_param( [gcb '/f32WErr'], 'Orientation');\n            delete_block(   "
		"    [gcb '/f32WErr']);\n            add_block('built-in/Terminator', [gcb '/f32WErr'], 'Position', pos, 'Orientation"
		"', orient);\n\n            pos = get_param(    [gcb '/f32WFbckFilt'], 'Position');\n            orient = get_param( "
		"[gcb '/f32WFbckFilt'], 'Orientation');\n            delete_block(       [gcb '/f32WFbckFilt']);\n            add_blo"
		"ck('built-in/Terminator', [gcb '/f32WFbckFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_p"
		"aram(    [gcb '/f32IDQReqAmp'], 'Position');\n            orient = get_param( [gcb '/f32IDQReqAmp'], 'Orientation');"
		"\n            delete_block(       [gcb '/f32IDQReqAmp']);\n            add_block('built-in/Terminator', [gcb '/f32ID"
		"QReqAmp'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32IQErrSign'], 'Posit"
		"ion');\n            orient = get_param( [gcb '/f32IQErrSign'], 'Orientation');\n            delete_block(       [gcb"
		" '/f32IQErrSign']);\n            add_block('built-in/Terminator', [gcb '/f32IQErrSign'], 'Position', pos, 'Orientati"
		"on', orient);\n\n            pos = get_param(    [gcb '/f32IQErr'], 'Position');\n            orient = get_param( [g"
		"cb '/f32IQErr'], 'Orientation');\n            delete_block(       [gcb '/f32IQErr']);\n            add_block('built-"
		"in/Terminator', [gcb '/f32IQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb "
		"'/f32FWErr'], 'Position');\n            orient = get_param( [gcb '/f32FWErr'], 'Orientation');\n            delete_b"
		"lock(       [gcb '/f32FWErr']);\n            add_block('built-in/Terminator', [gcb '/f32FWErr'], 'Position', pos, 'O"
		"rientation', orient);\n\n            pos = get_param(    [gcb '/f32UQErr'], 'Position');\n            orient = get_p"
		"aram( [gcb '/f32UQErr'], 'Orientation');\n            delete_block(       [gcb '/f32UQErr']);\n            add_block"
		"('built-in/Terminator', [gcb '/f32UQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param( "
		"   [gcb '/f32FWErrFilt'], 'Position');\n            orient = get_param( [gcb '/f32FWErrFilt'], 'Orientation');\n    "
		"        delete_block(       [gcb '/f32FWErrFilt']);\n            add_block('built-in/Terminator', [gcb '/f32FWErrFil"
		"t'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWAngle'], 'Position');\n"
		"            orient = get_param( [gcb '/f32FWAngle'], 'Orientation');\n            delete_block(       [gcb '/f32FWAn"
		"gle']);\n            add_block('built-in/Terminator', [gcb '/f32FWAngle'], 'Position', pos, 'Orientation', orient);\n"
		"\n            pos = get_param(    [gcb '/f32FWSin'], 'Position');\n            orient = get_param( [gcb '/f32FWSin']"
		", 'Orientation');\n            delete_block(       [gcb '/f32FWSin']);\n            add_block('built-in/Terminator',"
		" [gcb '/f32FWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWCos'], '"
		"Position');\n            orient = get_param( [gcb '/f32FWCos'], 'Orientation');\n            delete_block(       [gc"
		"b '/f32FWCos']);\n            add_block('built-in/Terminator', [gcb '/f32FWCos'], 'Position', pos, 'Orientation', or"
		"ient);\n\n        end\n\n        set_param([gcb '/f32VelocityReq'], 'Port', '1');\n        set_param([gcb '/f32Veloc"
		"ityFbck'], 'Port', '2');\n        set_param([gcb '/f32IQFbck'], 'Port', '3');\n        set_param([gcb '/f32UQReq'], "
		"'Port', '4');\n        set_param([gcb '/f32UQLim'], 'Port', '5');\n        set_param([gcb '/f32FilterMAWOut_preset']"
		", 'Port', '6');\n        set_param([gcb '/f32FilterMAFWOut_preset'], 'Port', '7');\n        set_param([gcb '/f32Cont"
		"rollerPIpAWQOut_preset'], 'Port', '8');\n        set_param([gcb '/f32ControllerPIpAWFWOut_preset'], 'Port', '9');\n "
		"       set_param([gcb '/f32RampOut_preset'], 'Port', '10');\n\n        set_param([gcb '/pIDQReq'], 'Port', '1');\n  "
		"      set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n        set_param([gcb '/u16LimitFlagFW'], 'Port', '3');\n\n "
		"       set_param(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on','on','on','on','on','on','on'"
		",'on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 275\n          height = 275;\n          set_param(gcb,'Po"
		"sition',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variable"
		"s\n    if strcmp(get_param([gcb '/u16NSamplesW'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position"
		"');\n\n        pos = get_param(    [gcb, '/u16NSamplesW'], 'Position');\n        orient = get_param( [gcb, '/u16NSam"
		"plesW'], 'Orientation');\n        delete_block(       [gcb, '/u16NSamplesW']);\n        add_block('built-in/Inport',"
		" [gcb, '/u16NSamplesW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n        pos = get_p"
		"aram(    [gcb, '/u16NSamplesFW'], 'Position');\n        orient = get_param( [gcb, '/u16NSamplesFW'], 'Orientation');"
		"\n        delete_block(       [gcb, '/u16NSamplesFW']);\n        add_block('built-in/Inport', [gcb, '/u16NSamplesFW'"
		"], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n        pos = get_param(    [gcb, '/f32Pr"
		"opGainQ'], 'Position');\n        orient = get_param( [gcb, '/f32PropGainQ'], 'Orientation');\n        delete_block( "
		"      [gcb, '/f32PropGainQ']);\n        add_block('built-in/Inport', [gcb, '/f32PropGainQ'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IntegGainQ'], 'Position');\n "
		"       orient = get_param( [gcb, '/f32IntegGainQ'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegGai"
		"nQ']);\n        add_block('built-in/Inport', [gcb, '/f32IntegGainQ'], 'Position', pos, 'Orientation', orient, 'OutDa"
		"taTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/s16PropGainShiftQ'], 'Position');\n        orient = get"
		"_param( [gcb, '/s16PropGainShiftQ'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShiftQ']);\n   "
		"     add_block('built-in/Inport', [gcb, '/s16PropGainShiftQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeS"
		"tr', 'int16');\n\n        pos = get_param(    [gcb, '/s16IntegGainShiftQ'], 'Position');\n        orient = get_param"
		"( [gcb, '/s16IntegGainShiftQ'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShiftQ']);\n       "
		" add_block('built-in/Inport', [gcb, '/s16IntegGainShiftQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr'"
		", 'int16');\n\n        pos = get_param(    [gcb, '/f32LowerLimitQ'], 'Position');\n        orient = get_param( [gcb,"
		" '/f32LowerLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimitQ']);\n        add_block('bui"
		"lt-in/Inport', [gcb, '/f32LowerLimitQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n    "
		"    pos = get_param(    [gcb, '/f32UpperLimitQ'], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimitQ']"
		", 'Orientation');\n        delete_block(       [gcb, '/f32UpperLimitQ']);\n        add_block('built-in/Inport', [gcb"
		", '/f32UpperLimitQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param"
		"(    [gcb, '/f32PropGainFW'], 'Position');\n        orient = get_param( [gcb, '/f32PropGainFW'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/f32PropGainFW']);\n        add_block('built-in/Inport', [gcb, '/f32PropGainFW'], '"
		"Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IntegGa"
		"inFW'], 'Position');\n        orient = get_param( [gcb, '/f32IntegGainFW'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/f32IntegGainFW']);\n        add_block('built-in/Inport', [gcb, '/f32IntegGainFW'], 'Position', pos, 'Or"
		"ientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/s16PropGainShiftFW'], 'Positi"
		"on');\n        orient = get_param( [gcb, '/s16PropGainShiftFW'], 'Orientation');\n        delete_block(       [gcb, "
		"'/s16PropGainShiftFW']);\n        add_block('built-in/Inport', [gcb, '/s16PropGainShiftFW'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/s16IntegGainShiftFW'], 'Position"
		"');\n        orient = get_param( [gcb, '/s16IntegGainShiftFW'], 'Orientation');\n        delete_block(       [gcb, '"
		"/s16IntegGainShiftFW']);\n        add_block('built-in/Inport', [gcb, '/s16IntegGainShiftFW'], 'Position', pos, 'Orie"
		"ntation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32LowerLimitFW'], 'Position');"
		"\n        orient = get_param( [gcb, '/f32LowerLimitFW'], 'Orientation');\n        delete_block(       [gcb, '/f32Low"
		"erLimitFW']);\n        add_block('built-in/Inport', [gcb, '/f32LowerLimitFW'], 'Position', pos, 'Orientation', orien"
		"t, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32UpperLimitFW'], 'Position');\n        orien"
		"t = get_param( [gcb, '/f32UpperLimitFW'], 'Orientation');\n        delete_block(       [gcb, '/f32UpperLimitFW']);\n"
		"        add_block('built-in/Inport', [gcb, '/f32UpperLimitFW'], 'Position', pos, 'Orientation', orient, 'OutDataType"
		"Str', 'int32');\n\n        pos = get_param(    [gcb, '/f32RampUp'], 'Position');\n        orient = get_param( [gcb, "
		"'/f32RampUp'], 'Orientation');\n        delete_block(       [gcb, '/f32RampUp']);\n        add_block('built-in/Inpor"
		"t', [gcb, '/f32RampUp'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_pa"
		"ram(    [gcb, '/f32RampDown'], 'Position');\n        orient = get_param( [gcb, '/f32RampDown'], 'Orientation');\n   "
		"     delete_block(       [gcb, '/f32RampDown']);\n        add_block('built-in/Inport', [gcb, '/f32RampDown'], 'Posit"
		"ion', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IQReqK_1'], "
		"'Position');\n        orient = get_param( [gcb, '/f32IQReqK_1'], 'Orientation');\n        delete_block(       [gcb, "
		"'/f32IQReqK_1']);\n        add_block('built-in/Inport', [gcb, '/f32IQReqK_1'], 'Position', pos, 'Orientation', orien"
		"t, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32AccW'], 'Position');\n        orient = get_"
		"param( [gcb, '/f32AccW'], 'Orientation');\n        delete_block(       [gcb, '/f32AccW']);\n        add_block('built"
		"-in/Inport', [gcb, '/f32AccW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos ="
		" get_param(    [gcb, '/f32AccFW'], 'Position');\n        orient = get_param( [gcb, '/f32AccFW'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/f32AccFW']);\n        add_block('built-in/Inport', [gcb, '/f32AccFW'], 'Position',"
		" pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1Q'], "
		"'Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1Q'], 'Orientation');\n        delete_block(       ["
		"gcb, '/f32IntegPartK_1Q']);\n        add_block('built-in/Inport', [gcb, '/f32IntegPartK_1Q'], 'Position', pos, 'Orie"
		"ntation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32InK_1Q'], 'Position');\n    "
		"    orient = get_param( [gcb, '/f32InK_1Q'], 'Orientation');\n        delete_block(       [gcb, '/f32InK_1Q']);\n   "
		"     add_block('built-in/Inport', [gcb, '/f32InK_1Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'in"
		"t32');\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1FW'], 'Position');\n        orient = get_param( [gcb, '"
		"/f32IntegPartK_1FW'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegPartK_1FW']);\n        add_block("
		"'built-in/Inport', [gcb, '/f32IntegPartK_1FW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n"
		"\n        pos = get_param(    [gcb, '/f32InK_1FW'], 'Position');\n        orient = get_param( [gcb, '/f32InK_1FW'], "
		"'Orientation');\n        delete_block(       [gcb, '/f32InK_1FW']);\n        add_block('built-in/Inport', [gcb, '/f3"
		"2InK_1FW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb,"
		" '/f32State'], 'Position');\n        orient = get_param( [gcb, '/f32State'], 'Orientation');\n        delete_block( "
		"      [gcb, '/f32State']);\n        add_block('built-in/Inport', [gcb, '/f32State'], 'Position', pos, 'Orientation',"
		" orient, 'OutDataTypeStr', 'int32');\n\n\n        pos = get_param(    [gcb '/f32AccW_Out'], 'Position');\n        or"
		"ient = get_param( [gcb '/f32AccW_Out'], 'Orientation');\n        delete_block(       [gcb '/f32AccW_Out']);\n       "
		" add_block('built-in/Outport', [gcb '/f32AccW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_p"
		"aram(    [gcb '/f32AccFW_Out'], 'Position');\n        orient = get_param( [gcb '/f32AccFW_Out'], 'Orientation');\n  "
		"      delete_block(       [gcb '/f32AccFW_Out']);\n        add_block('built-in/Outport', [gcb '/f32AccFW_Out'], 'Pos"
		"ition', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IntegPartK_1Q_Out'], 'Position');\n   "
		"     orient = get_param( [gcb '/f32IntegPartK_1Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Integ"
		"PartK_1Q_Out']);\n        add_block('built-in/Outport', [gcb '/f32IntegPartK_1Q_Out'], 'Position', pos, 'Orientation"
		"', orient);\n\n        pos = get_param(    [gcb '/f32InK_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/"
		"f32InK_1Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InK_1Q_Out']);\n        add_block('built-in/"
		"Outport', [gcb '/f32InK_1Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32"
		"IntegPartK_1FW_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1FW_Out'], 'Orientation');\n   "
		"     delete_block(       [gcb '/f32IntegPartK_1FW_Out']);\n        add_block('built-in/Outport', [gcb '/f32IntegPart"
		"K_1FW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InK_1FW_Out'], 'Posit"
		"ion');\n        orient = get_param( [gcb '/f32InK_1FW_Out'], 'Orientation');\n        delete_block(       [gcb '/f32"
		"InK_1FW_Out']);\n        add_block('built-in/Outport', [gcb '/f32InK_1FW_Out'], 'Position', pos, 'Orientation', orie"
		"nt);\n\n        pos = get_param(    [gcb '/f32State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State"
		"_Out'], 'Orientation');\n        delete_block(       [gcb '/f32State_Out']);\n        add_block('built-in/Outport', "
		"[gcb '/f32State_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        if (showDebugOutputs == 2) && (strcmp(g"
		"et_param([gcb '/f32WReqFilt'], 'BlockType'), 'Terminator'))\n            pos = get_param(    [gcb '/f32WReqFilt'], '"
		"Position');\n            orient = get_param( [gcb '/f32WReqFilt'], 'Orientation');\n            delete_block(       "
		"[gcb '/f32WReqFilt']);\n            add_block('built-in/Outport', [gcb '/f32WReqFilt'], 'Position', pos, 'Orientatio"
		"n', orient);\n\n            pos = get_param(    [gcb '/f32WErr'], 'Position');\n            orient = get_param( [gcb"
		" '/f32WErr'], 'Orientation');\n            delete_block(       [gcb '/f32WErr']);\n            add_block('built-in/O"
		"utport', [gcb '/f32WErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32WFb"
		"ckFilt'], 'Position');\n            orient = get_param( [gcb '/f32WFbckFilt'], 'Orientation');\n            delete_b"
		"lock(       [gcb '/f32WFbckFilt']);\n            add_block('built-in/Outport', [gcb '/f32WFbckFilt'], 'Position', po"
		"s, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32IDQReqAmp'], 'Position');\n            orien"
		"t = get_param( [gcb '/f32IDQReqAmp'], 'Orientation');\n            delete_block(       [gcb '/f32IDQReqAmp']);\n    "
		"        add_block('built-in/Outport', [gcb '/f32IDQReqAmp'], 'Position', pos, 'Orientation', orient);\n\n           "
		" pos = get_param(    [gcb '/f32IQErrSign'], 'Position');\n            orient = get_param( [gcb '/f32IQErrSign'], 'Or"
		"ientation');\n            delete_block(       [gcb '/f32IQErrSign']);\n            add_block('built-in/Outport', [gc"
		"b '/f32IQErrSign'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32IQErr'], '"
		"Position');\n            orient = get_param( [gcb '/f32IQErr'], 'Orientation');\n            delete_block(       [gc"
		"b '/f32IQErr']);\n            add_block('built-in/Outport', [gcb '/f32IQErr'], 'Position', pos, 'Orientation', orien"
		"t);\n\n            pos = get_param(    [gcb '/f32FWErr'], 'Position');\n            orient = get_param( [gcb '/f32FW"
		"Err'], 'Orientation');\n            delete_block(       [gcb '/f32FWErr']);\n            add_block('built-in/Outport"
		"', [gcb '/f32FWErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32UQErr'],"
		" 'Position');\n            orient = get_param( [gcb '/f32UQErr'], 'Orientation');\n            delete_block(       ["
		"gcb '/f32UQErr']);\n            add_block('built-in/Outport', [gcb '/f32UQErr'], 'Position', pos, 'Orientation', ori"
		"ent);\n\n            pos = get_param(    [gcb '/f32FWErrFilt'], 'Position');\n            orient = get_param( [gcb '"
		"/f32FWErrFilt'], 'Orientation');\n            delete_block(       [gcb '/f32FWErrFilt']);\n            add_block('bu"
		"ilt-in/Outport', [gcb '/f32FWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    "
		"[gcb '/f32FWAngle'], 'Position');\n            orient = get_param( [gcb '/f32FWAngle'], 'Orientation');\n           "
		" delete_block(       [gcb '/f32FWAngle']);\n            add_block('built-in/Outport', [gcb '/f32FWAngle'], 'Position"
		"', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWSin'], 'Position');\n            orie"
		"nt = get_param( [gcb '/f32FWSin'], 'Orientation');\n            delete_block(       [gcb '/f32FWSin']);\n           "
		" add_block('built-in/Outport', [gcb '/f32FWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_"
		"param(    [gcb '/f32FWCos'], 'Position');\n            orient = get_param( [gcb '/f32FWCos'], 'Orientation');\n     "
		"       delete_block(       [gcb '/f32FWCos']);\n            add_block('built-in/Outport', [gcb '/f32FWCos'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        end\n\n        set_param([gcb '/f32VelocityReq'], 'Port', '1');\n      "
		"  set_param([gcb '/f32VelocityFbck'], 'Port', '2');\n        set_param([gcb '/f32IQFbck'], 'Port', '3');\n        se"
		"t_param([gcb '/f32UQReq'], 'Port', '4');\n        set_param([gcb '/f32UQLim'], 'Port', '5');\n        set_param([gcb"
		" '/f32FilterMAWOut_preset'], 'Port', '6');\n        set_param([gcb '/f32FilterMAFWOut_preset'], 'Port', '7');\n     "
		"   set_param([gcb '/f32ControllerPIpAWQOut_preset'], 'Port', '8');\n        set_param([gcb '/f32ControllerPIpAWFWOut"
		"_preset'], 'Port', '9');\n        set_param([gcb '/f32RampOut_preset'], 'Port', '10');\n        set_param([gcb '/u16"
		"NSamplesW'], 'Port', '11');\n        set_param([gcb '/u16NSamplesFW'], 'Port', '12');\n        set_param([gcb '/f32P"
		"ropGainQ'], 'Port', '13');\n        set_param([gcb '/f32IntegGainQ'], 'Port', '14');\n        set_param([gcb '/s16Pr"
		"opGainShiftQ'], 'Port', '15');\n        set_param([gcb '/s16IntegGainShiftQ'], 'Port', '16');\n        set_param([gc"
		"b '/f32LowerLimitQ'], 'Port', '17');\n        set_param([gcb '/f32UpperLimitQ'], 'Port', '18');\n        set_param(["
		"gcb '/f32PropGainFW'], 'Port', '19');\n        set_param([gcb '/f32IntegGainFW'], 'Port', '20');\n        set_param("
		"[gcb '/s16PropGainShiftFW'], 'Port', '21');\n        set_param([gcb '/s16IntegGainShiftFW'], 'Port', '22');\n       "
		" set_param([gcb '/f32LowerLimitFW'], 'Port', '23');\n        set_param([gcb '/f32UpperLimitFW'], 'Port', '24');\n   "
		"     set_param([gcb '/f32RampUp'], 'Port', '25');\n        set_param([gcb '/f32RampDown'], 'Port', '26');\n        s"
		"et_param([gcb '/f32IQReqK_1'], 'Port', '27');\n        set_param([gcb '/f32AccW'], 'Port', '28');\n        set_param"
		"([gcb '/f32AccFW'], 'Port', '29');\n        set_param([gcb '/f32IntegPartK_1Q'], 'Port', '30');\n        set_param(["
		"gcb '/f32InK_1Q'], 'Port', '31');\n        set_param([gcb '/f32IntegPartK_1FW'], 'Port', '32');\n        set_param(["
		"gcb '/f32InK_1FW'], 'Port', '33');\n        set_param([gcb '/f32State'], 'Port', '34');\n\n        if (showDebugOutp"
		"uts == 2)\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Por"
		"t', '2');\n            set_param([gcb '/u16LimitFlagFW'], 'Port', '3');\n            set_param([gcb '/f32WReqFilt'],"
		" 'Port', '4');\n            set_param([gcb '/f32WErr'], 'Port', '5');\n            set_param([gcb '/f32WFbckFilt'], "
		"'Port', '6');\n            set_param([gcb '/f32IDQReqAmp'], 'Port', '7');\n            set_param([gcb '/f32IQErrSign"
		"'], 'Port', '8');\n            set_param([gcb '/f32IQErr'], 'Port', '9');\n            set_param([gcb '/f32FWErr'], "
		"'Port', '10');\n            set_param([gcb '/f32UQErr'], 'Port', '11');\n            set_param([gcb '/f32FWErrFilt']"
		", 'Port', '12');\n            set_param([gcb '/f32FWAngle'], 'Port', '13');\n            set_param([gcb '/f32FWSin']"
		", 'Port', '14');\n            set_param([gcb '/f32FWCos'], 'Port', '15');\n            set_param([gcb '/f32AccW_Out'"
		"], 'Port', '16');\n            set_param([gcb '/f32AccFW_Out'], 'Port', '17');\n            set_param([gcb '/f32Inte"
		"gPartK_1Q_Out'], 'Port', '18');\n            set_param([gcb '/f32InK_1Q_Out'], 'Port', '19');\n            set_param"
		"([gcb '/f32IntegPartK_1FW_Out'], 'Port', '20');\n            set_param([gcb '/f32InK_1FW_Out'], 'Port', '21');\n    "
		"        set_param([gcb '/f32State_Out'], 'Port', '22');\n        else\n            set_param([gcb '/pIDQReq'], 'Port"
		"', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n            set_param([gcb '/u16LimitFlagFW']"
		", 'Port', '3');\n            set_param([gcb '/f32AccW_Out'], 'Port', '4');\n            set_param([gcb '/f32AccFW_Ou"
		"t'], 'Port', '5');\n            set_param([gcb '/f32IntegPartK_1Q_Out'], 'Port', '6');\n            set_param([gcb '"
		"/f32InK_1Q_Out'], 'Port', '7');\n            set_param([gcb '/f32IntegPartK_1FW_Out'], 'Port', '8');\n            se"
		"t_param([gcb '/f32InK_1FW_Out'], 'Port', '9');\n            set_param([gcb '/f32State_Out'], 'Port', '10');\n       "
		" end\n\n        set_param(gcb,'MaskEnables',{'on','on','on','off','off','off','off','off','off','off','off','off','o"
		"ff','off','off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 875\n          height = 875;\n   "
		"       set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    else\n       "
		" if (showDebugOutputs == 2) && (strcmp(get_param([gcb '/f32WReqFilt'], 'BlockType'), 'Terminator'))\n            % s"
		"hown debugging outputs\n            pos = get_param(    [gcb '/f32WReqFilt'], 'Position');\n            orient = get"
		"_param( [gcb '/f32WReqFilt'], 'Orientation');\n            delete_block(       [gcb '/f32WReqFilt']);\n            a"
		"dd_block('built-in/Outport', [gcb '/f32WReqFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get"
		"_param(    [gcb '/f32WErr'], 'Position');\n            orient = get_param( [gcb '/f32WErr'], 'Orientation');\n      "
		"      delete_block(       [gcb '/f32WErr']);\n            add_block('built-in/Outport', [gcb '/f32WErr'], 'Position'"
		", pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32WFbckFilt'], 'Position');\n            o"
		"rient = get_param( [gcb '/f32WFbckFilt'], 'Orientation');\n            delete_block(       [gcb '/f32WFbckFilt']);\n"
		"            add_block('built-in/Outport', [gcb '/f32WFbckFilt'], 'Position', pos, 'Orientation', orient);\n\n       "
		"     pos = get_param(    [gcb '/f32IDQReqAmp'], 'Position');\n            orient = get_param( [gcb '/f32IDQReqAmp'],"
		" 'Orientation');\n            delete_block(       [gcb '/f32IDQReqAmp']);\n            add_block('built-in/Outport',"
		" [gcb '/f32IDQReqAmp'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32IQErrS"
		"ign'], 'Position');\n            orient = get_param( [gcb '/f32IQErrSign'], 'Orientation');\n            delete_bloc"
		"k(       [gcb '/f32IQErrSign']);\n            add_block('built-in/Outport', [gcb '/f32IQErrSign'], 'Position', pos, "
		"'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32IQErr'], 'Position');\n            orient = get"
		"_param( [gcb '/f32IQErr'], 'Orientation');\n            delete_block(       [gcb '/f32IQErr']);\n            add_blo"
		"ck('built-in/Outport', [gcb '/f32IQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(  "
		"  [gcb '/f32FWErr'], 'Position');\n            orient = get_param( [gcb '/f32FWErr'], 'Orientation');\n            d"
		"elete_block(       [gcb '/f32FWErr']);\n            add_block('built-in/Outport', [gcb '/f32FWErr'], 'Position', pos"
		", 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32UQErr'], 'Position');\n            orient = g"
		"et_param( [gcb '/f32UQErr'], 'Orientation');\n            delete_block(       [gcb '/f32UQErr']);\n            add_b"
		"lock('built-in/Outport', [gcb '/f32UQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param("
		"    [gcb '/f32FWErrFilt'], 'Position');\n            orient = get_param( [gcb '/f32FWErrFilt'], 'Orientation');\n   "
		"         delete_block(       [gcb '/f32FWErrFilt']);\n            add_block('built-in/Outport', [gcb '/f32FWErrFilt'"
		"], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWAngle'], 'Position');\n  "
		"          orient = get_param( [gcb '/f32FWAngle'], 'Orientation');\n            delete_block(       [gcb '/f32FWAngl"
		"e']);\n            add_block('built-in/Outport', [gcb '/f32FWAngle'], 'Position', pos, 'Orientation', orient);\n\n  "
		"          pos = get_param(    [gcb '/f32FWSin'], 'Position');\n            orient = get_param( [gcb '/f32FWSin'], 'O"
		"rientation');\n            delete_block(       [gcb '/f32FWSin']);\n            add_block('built-in/Outport', [gcb '"
		"/f32FWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWCos'], 'Positio"
		"n');\n            orient = get_param( [gcb '/f32FWCos'], 'Orientation');\n            delete_block(       [gcb '/f32"
		"FWCos']);\n            add_block('built-in/Outport', [gcb '/f32FWCos'], 'Position', pos, 'Orientation', orient);\n\n"
		"            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n"
		"            set_param([gcb '/u16LimitFlagFW'], 'Port', '3');\n            set_param([gcb '/f32WReqFilt'], 'Port', '4"
		"');\n            set_param([gcb '/f32WErr'], 'Port', '5');\n            set_param([gcb '/f32WFbckFilt'], 'Port', '6'"
		");\n            set_param([gcb '/f32IDQReqAmp'], 'Port', '7');\n            set_param([gcb '/f32IQErrSign'], 'Port',"
		" '8');\n            set_param([gcb '/f32IQErr'], 'Port', '9');\n            set_param([gcb '/f32FWErr'], 'Port', '10"
		"');\n            set_param([gcb '/f32UQErr'], 'Port', '11');\n            set_param([gcb '/f32FWErrFilt'], 'Port', '"
		"12');\n            set_param([gcb '/f32FWAngle'], 'Port', '13');\n            set_param([gcb '/f32FWSin'], 'Port', '"
		"14');\n            set_param([gcb '/f32FWCos'], 'Port', '15');\n            set_param([gcb '/f32AccW_Out'], 'Port', "
		"'16');\n            set_param([gcb '/f32AccFW_Out'], 'Port', '17');\n            set_param([gcb '/f32IntegPartK_1Q_O"
		"ut'], 'Port', '18');\n            set_param([gcb '/f32InK_1Q_Out'], 'Port', '19');\n            set_param([gcb '/f32"
		"IntegPartK_1FW_Out'], 'Port', '20');\n            set_param([gcb '/f32InK_1FW_Out'], 'Port', '21');\n            set"
		"_param([gcb '/f32State_Out'], 'Port', '22');\n        elseif (showDebugOutputs == 1) && (strcmp(get_param([gcb '/f32"
		"WReqFilt'], 'BlockType'), 'Outport'))\n            % hidden debugging outputs\n            pos = get_param(    [gcb "
		"'/f32WReqFilt'], 'Position');\n            orient = get_param( [gcb '/f32WReqFilt'], 'Orientation');\n            de"
		"lete_block(       [gcb '/f32WReqFilt']);\n            add_block('built-in/Terminator', [gcb '/f32WReqFilt'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32WErr'], 'Position');\n            ori"
		"ent = get_param( [gcb '/f32WErr'], 'Orientation');\n            delete_block(       [gcb '/f32WErr']);\n            "
		"add_block('built-in/Terminator', [gcb '/f32WErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get"
		"_param(    [gcb '/f32WFbckFilt'], 'Position');\n            orient = get_param( [gcb '/f32WFbckFilt'], 'Orientation'"
		");\n            delete_block(       [gcb '/f32WFbckFilt']);\n            add_block('built-in/Terminator', [gcb '/f32"
		"WFbckFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32IDQReqAmp'], 'Pos"
		"ition');\n            orient = get_param( [gcb '/f32IDQReqAmp'], 'Orientation');\n            delete_block(       [g"
		"cb '/f32IDQReqAmp']);\n            add_block('built-in/Terminator', [gcb '/f32IDQReqAmp'], 'Position', pos, 'Orienta"
		"tion', orient);\n\n            pos = get_param(    [gcb '/f32IQErrSign'], 'Position');\n            orient = get_par"
		"am( [gcb '/f32IQErrSign'], 'Orientation');\n            delete_block(       [gcb '/f32IQErrSign']);\n            add"
		"_block('built-in/Terminator', [gcb '/f32IQErrSign'], 'Position', pos, 'Orientation', orient);\n\n            pos = g"
		"et_param(    [gcb '/f32IQErr'], 'Position');\n            orient = get_param( [gcb '/f32IQErr'], 'Orientation');\n  "
		"          delete_block(       [gcb '/f32IQErr']);\n            add_block('built-in/Terminator', [gcb '/f32IQErr'], '"
		"Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWErr'], 'Position');\n        "
		"    orient = get_param( [gcb '/f32FWErr'], 'Orientation');\n            delete_block(       [gcb '/f32FWErr']);\n   "
		"         add_block('built-in/Terminator', [gcb '/f32FWErr'], 'Position', pos, 'Orientation', orient);\n\n           "
		" pos = get_param(    [gcb '/f32UQErr'], 'Position');\n            orient = get_param( [gcb '/f32UQErr'], 'Orientatio"
		"n');\n            delete_block(       [gcb '/f32UQErr']);\n            add_block('built-in/Terminator', [gcb '/f32UQ"
		"Err'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWErrFilt'], 'Position'"
		");\n            orient = get_param( [gcb '/f32FWErrFilt'], 'Orientation');\n            delete_block(       [gcb '/f"
		"32FWErrFilt']);\n            add_block('built-in/Terminator', [gcb '/f32FWErrFilt'], 'Position', pos, 'Orientation',"
		" orient);\n\n            pos = get_param(    [gcb '/f32FWAngle'], 'Position');\n            orient = get_param( [gcb"
		" '/f32FWAngle'], 'Orientation');\n            delete_block(       [gcb '/f32FWAngle']);\n            add_block('buil"
		"t-in/Terminator', [gcb '/f32FWAngle'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    ["
		"gcb '/f32FWSin'], 'Position');\n            orient = get_param( [gcb '/f32FWSin'], 'Orientation');\n            dele"
		"te_block(       [gcb '/f32FWSin']);\n            add_block('built-in/Terminator', [gcb '/f32FWSin'], 'Position', pos"
		", 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWCos'], 'Position');\n            orient = g"
		"et_param( [gcb '/f32FWCos'], 'Orientation');\n            delete_block(       [gcb '/f32FWCos']);\n            add_b"
		"lock('built-in/Terminator', [gcb '/f32FWCos'], 'Position', pos, 'Orientation', orient);\n\n            set_param([gc"
		"b '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n            set_param([gc"
		"b '/u16LimitFlagFW'], 'Port', '3');\n            set_param([gcb '/f32AccW_Out'], 'Port', '4');\n            set_para"
		"m([gcb '/f32AccFW_Out'], 'Port', '5');\n            set_param([gcb '/f32IntegPartK_1Q_Out'], 'Port', '6');\n        "
		"    set_param([gcb '/f32InK_1Q_Out'], 'Port', '7');\n            set_param([gcb '/f32IntegPartK_1FW_Out'], 'Port', '"
		"8');\n            set_param([gcb '/f32InK_1FW_Out'], 'Port', '9');\n            set_param([gcb '/f32State_Out'], 'Po"
		"rt', '10');\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_FWSpeedLoop_F32', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  19
		  Object {
		    $ObjectID		    150
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on','on','on','on','on','on','on','on','on"
		    "','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','on','off','off','off','off','off','off','off','off'"
		    ",'off','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    151
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    152
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide"
		    Cell		    "Show"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showDebugOutputs"
		    Prompt		    "Show debugging outputs"
		    Value		    "Hide"
		    Enabled		    "off"
		  }
		  Object {
		    $ObjectID		    153
		    Type		    "edit"
		    Name		    "u16NSamplesW"
		    Prompt		    "u16NSamplesW (velocity GDFLIB_FilterMA - recalculated smoothing factor)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    154
		    Type		    "edit"
		    Name		    "u16NSamplesFW"
		    Prompt		    "u16NSamplesFW (FW GDFLIB_FilterMA - recalculated smoothing factor)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    155
		    Type		    "edit"
		    Name		    "f32PropGainQ"
		    Prompt		    "f32PropGainQ (q-axis GFLIB_ControllerPIpAW - proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    156
		    Type		    "edit"
		    Name		    "f32IntegGainQ"
		    Prompt		    "f32IntegGainQ (q-axis GFLIB_ControllerPIpAW - integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    157
		    Type		    "edit"
		    Name		    "s16PropGainShiftQ"
		    Prompt		    "s16PropGainShiftQ (q-axis GFLIB_ControllerPIpAW - scaling bitwise shift applied to the proportional"
		    " gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    158
		    Type		    "edit"
		    Name		    "s16IntegGainShiftQ"
		    Prompt		    "s16IntegGainShiftQ (q-axis GFLIB_ControllerPIpAW - scaling bitwise shift applied to the integral ga"
		    "in)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    159
		    Type		    "edit"
		    Name		    "f32LowerLimitQ"
		    Prompt		    "f32LowerLimitQ (q-axis GFLIB_ControllerPIpAW - lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    160
		    Type		    "edit"
		    Name		    "f32UpperLimitQ"
		    Prompt		    "f32UpperLimitQ (q-axis GFLIB_ControllerPIpAW - upper limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    161
		    Type		    "edit"
		    Name		    "f32PropGainFW"
		    Prompt		    "f32PropGainFW (FW GFLIB_ControllerPIpAW - proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    162
		    Type		    "edit"
		    Name		    "f32IntegGainFW"
		    Prompt		    "f32IntegGainFW (FW GFLIB_ControllerPIpAW - integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    163
		    Type		    "edit"
		    Name		    "s16PropGainShiftFW"
		    Prompt		    "s16PropGainShiftFW (FW GFLIB_ControllerPIpAW - scaling bitwise shift applied to the proportional ga"
		    "in)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    164
		    Type		    "edit"
		    Name		    "s16IntegGainShiftFW"
		    Prompt		    "s16IntegGainShiftFW (FW GFLIB_ControllerPIpAW - scaling bitwise shift applied to the integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    165
		    Type		    "edit"
		    Name		    "f32LowerLimitFW"
		    Prompt		    "f32LowerLimitFW (FW GFLIB_ControllerPIpAW - lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    166
		    Type		    "edit"
		    Name		    "f32UpperLimitFW"
		    Prompt		    "f32UpperLimitFW (FW GFLIB_ControllerPIpAW - upper limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    167
		    Type		    "edit"
		    Name		    "f32RampUp"
		    Prompt		    "f32RampUp (Ramp up increment coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    168
		    Type		    "edit"
		    Name		    "f32RampDown"
		    Prompt		    "f32RampDown (Ramp decrement coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_FWSpeedLoop_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"110"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32VelocityReq"
		  SID			  "13:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32VelocityFbck"
		  SID			  "13:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32IQFbck"
		  SID			  "13:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32UQReq"
		  SID			  "13:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32UQLim"
		  SID			  "13:10"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  12
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32FilterMAWOut_preset"
		  SID			  "13:11"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  13
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "6"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32FilterMAFWOut_preset"
		  SID			  "13:12"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  14
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "7"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32ControllerPIpAWQOut_preset"
		  SID			  "13:13"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  15
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "8"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32ControllerPIpAWFWOut_preset"
		  SID			  "13:14"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  16
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "9"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32RampOut_preset"
		  SID			  "13:15"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  17
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "10"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "13:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_FWSpeedLoop_SF"
		  SID			  "13:5"
		  Ports			  [34, 22]
		  Position		  [135, 125, 285, 290]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_FWSpeedLoop_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,showDebugOutputs,u16NSamplesW,u16NSamplesFW,f32PropGainQ,f32IntegGainQ"
		  ",s16PropGainShiftQ,s16IntegGainShiftQ,f32LowerLimitQ,f32UpperLimitQ,f32PropGainFW,f32IntegGainFW,s16PropGainShiftF"
		  "W,s16IntegGainShiftFW,f32LowerLimitFW,f32UpperLimitFW,f32RampUp,f32RampDown"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "13:62"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  64
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    169
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "13:65"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  65
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    170
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_FWSpeedLoop_BAM_F32.mdl');text(10,75,'PMSM Speed Loop with Field Weakening.');t"
		    "ext(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32AccFW"
		  SID			  "13:86"
		  Position		  [40, 1318, 70, 1332]
		  ZOrder		  84
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32AccFW_Out"
		  SID			  "13:93"
		  Position		  [340, 838, 370, 852]
		  ZOrder		  91
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32AccW"
		  SID			  "13:85"
		  Position		  [40, 1278, 70, 1292]
		  ZOrder		  83
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32AccW_Out"
		  SID			  "13:92"
		  Position		  [340, 798, 370, 812]
		  ZOrder		  90
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FWAngle"
		  SID			  "13:108"
		  Position		  [340, 678, 370, 692]
		  ZOrder		  106
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FWCos"
		  SID			  "13:110"
		  Position		  [340, 758, 370, 772]
		  ZOrder		  108
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FWErr"
		  SID			  "13:105"
		  Position		  [340, 558, 370, 572]
		  ZOrder		  103
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FWErrFilt"
		  SID			  "13:107"
		  Position		  [340, 638, 370, 652]
		  ZOrder		  105
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FWSin"
		  SID			  "13:109"
		  Position		  [340, 718, 370, 732]
		  ZOrder		  107
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IDQReqAmp"
		  SID			  "13:102"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  100
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IQErr"
		  SID			  "13:104"
		  Position		  [340, 518, 370, 532]
		  ZOrder		  102
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IQErrSign"
		  SID			  "13:103"
		  Position		  [340, 478, 370, 492]
		  ZOrder		  101
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IQReqK_1"
		  SID			  "13:84"
		  Position		  [40, 1238, 70, 1252]
		  ZOrder		  82
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InK_1FW"
		  SID			  "13:90"
		  Position		  [40, 1478, 70, 1492]
		  ZOrder		  88
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InK_1FW_Out"
		  SID			  "13:97"
		  Position		  [340, 998, 370, 1012]
		  ZOrder		  95
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InK_1Q"
		  SID			  "13:88"
		  Position		  [40, 1398, 70, 1412]
		  ZOrder		  86
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InK_1Q_Out"
		  SID			  "13:95"
		  Position		  [340, 918, 370, 932]
		  ZOrder		  93
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegGainFW"
		  SID			  "13:77"
		  Position		  [40, 958, 70, 972]
		  ZOrder		  75
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegGainQ"
		  SID			  "13:71"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  69
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1FW"
		  SID			  "13:89"
		  Position		  [40, 1438, 70, 1452]
		  ZOrder		  87
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1FW_Out"
		  SID			  "13:96"
		  Position		  [340, 958, 370, 972]
		  ZOrder		  94
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1Q"
		  SID			  "13:87"
		  Position		  [40, 1358, 70, 1372]
		  ZOrder		  85
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1Q_Out"
		  SID			  "13:94"
		  Position		  [340, 878, 370, 892]
		  ZOrder		  92
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimitFW"
		  SID			  "13:80"
		  Position		  [40, 1078, 70, 1092]
		  ZOrder		  78
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimitQ"
		  SID			  "13:74"
		  Position		  [40, 838, 70, 852]
		  ZOrder		  72
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32PropGainFW"
		  SID			  "13:76"
		  Position		  [40, 918, 70, 932]
		  ZOrder		  74
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32PropGainQ"
		  SID			  "13:70"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  68
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32RampDown"
		  SID			  "13:83"
		  Position		  [40, 1198, 70, 1212]
		  ZOrder		  81
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32RampUp"
		  SID			  "13:82"
		  Position		  [40, 1158, 70, 1172]
		  ZOrder		  80
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32State"
		  SID			  "13:91"
		  Position		  [40, 1518, 70, 1532]
		  ZOrder		  89
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32State_Out"
		  SID			  "13:98"
		  Position		  [340, 1038, 370, 1052]
		  ZOrder		  96
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32UQErr"
		  SID			  "13:106"
		  Position		  [340, 598, 370, 612]
		  ZOrder		  104
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimitFW"
		  SID			  "13:81"
		  Position		  [40, 1118, 70, 1132]
		  ZOrder		  79
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimitQ"
		  SID			  "13:75"
		  Position		  [40, 878, 70, 892]
		  ZOrder		  73
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32WErr"
		  SID			  "13:100"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  98
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32WFbckFilt"
		  SID			  "13:101"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  99
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32WReqFilt"
		  SID			  "13:99"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  97
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShiftFW"
		  SID			  "13:79"
		  Position		  [40, 1038, 70, 1052]
		  ZOrder		  77
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShiftQ"
		  SID			  "13:73"
		  Position		  [40, 798, 70, 812]
		  ZOrder		  71
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShiftFW"
		  SID			  "13:78"
		  Position		  [40, 998, 70, 1012]
		  ZOrder		  76
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShiftQ"
		  SID			  "13:72"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  70
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NSamplesFW"
		  SID			  "13:69"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  67
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NSamplesW"
		  SID			  "13:68"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  66
		}
		Block {
		  BlockType		  Outport
		  Name			  "pIDQReq"
		  SID			  "13:40"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  42
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlagQ"
		  SID			  "13:41"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  43
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlagFW"
		  SID			  "13:42"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  44
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  22
		  DstBlock		  "f32State_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  21
		  DstBlock		  "f32InK_1FW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  20
		  DstBlock		  "f32IntegPartK_1FW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  19
		  DstBlock		  "f32InK_1Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  18
		  DstBlock		  "f32IntegPartK_1Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  17
		  DstBlock		  "f32AccFW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  16
		  DstBlock		  "f32AccW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  15
		  DstBlock		  "f32FWCos"
		  DstPort		  1
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  14
		  DstBlock		  "f32FWSin"
		  DstPort		  1
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  13
		  DstBlock		  "f32FWAngle"
		  DstPort		  1
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  12
		  DstBlock		  "f32FWErrFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  11
		  DstBlock		  "f32UQErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  10
		  DstBlock		  "f32FWErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  9
		  DstBlock		  "f32IQErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  8
		  DstBlock		  "f32IQErrSign"
		  DstPort		  1
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  7
		  DstBlock		  "f32IDQReqAmp"
		  DstPort		  1
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  6
		  DstBlock		  "f32WFbckFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  5
		  DstBlock		  "f32WErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  4
		  DstBlock		  "f32WReqFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  3
		  DstBlock		  "u16LimitFlagFW"
		  DstPort		  1
		}
		Line {
		  ZOrder		  21
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlagQ"
		  DstPort		  1
		}
		Line {
		  ZOrder		  22
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  1
		  DstBlock		  "pIDQReq"
		  DstPort		  1
		}
		Line {
		  ZOrder		  23
		  SrcBlock		  "f32State"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  34
		}
		Line {
		  ZOrder		  24
		  SrcBlock		  "f32InK_1FW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  33
		}
		Line {
		  ZOrder		  25
		  SrcBlock		  "f32IntegPartK_1FW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  32
		}
		Line {
		  ZOrder		  26
		  SrcBlock		  "f32InK_1Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  31
		}
		Line {
		  ZOrder		  27
		  SrcBlock		  "f32IntegPartK_1Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  30
		}
		Line {
		  ZOrder		  28
		  SrcBlock		  "f32AccFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  29
		}
		Line {
		  ZOrder		  29
		  SrcBlock		  "f32AccW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  28
		}
		Line {
		  ZOrder		  30
		  SrcBlock		  "f32IQReqK_1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  27
		}
		Line {
		  ZOrder		  31
		  SrcBlock		  "f32RampDown"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  26
		}
		Line {
		  ZOrder		  32
		  SrcBlock		  "f32RampUp"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  25
		}
		Line {
		  ZOrder		  33
		  SrcBlock		  "f32UpperLimitFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  24
		}
		Line {
		  ZOrder		  34
		  SrcBlock		  "f32LowerLimitFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  23
		}
		Line {
		  ZOrder		  35
		  SrcBlock		  "s16IntegGainShiftFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  22
		}
		Line {
		  ZOrder		  36
		  SrcBlock		  "s16PropGainShiftFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  21
		}
		Line {
		  ZOrder		  37
		  SrcBlock		  "f32IntegGainFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  20
		}
		Line {
		  ZOrder		  38
		  SrcBlock		  "f32PropGainFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  19
		}
		Line {
		  ZOrder		  39
		  SrcBlock		  "f32UpperLimitQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  18
		}
		Line {
		  ZOrder		  40
		  SrcBlock		  "f32LowerLimitQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  17
		}
		Line {
		  ZOrder		  41
		  SrcBlock		  "s16IntegGainShiftQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  16
		}
		Line {
		  ZOrder		  42
		  SrcBlock		  "s16PropGainShiftQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  43
		  SrcBlock		  "f32IntegGainQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  44
		  SrcBlock		  "f32PropGainQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  45
		  SrcBlock		  "u16NSamplesFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  46
		  SrcBlock		  "u16NSamplesW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  47
		  SrcBlock		  "f32RampOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  48
		  SrcBlock		  "f32ControllerPIpAWFWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  49
		  SrcBlock		  "f32ControllerPIpAWQOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  50
		  SrcBlock		  "f32FilterMAFWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  51
		  SrcBlock		  "f32FilterMAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  52
		  SrcBlock		  "f32UQLim"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  53
		  SrcBlock		  "f32UQReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  54
		  SrcBlock		  "f32IQFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  55
		  SrcBlock		  "f32VelocityFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  56
		  SrcBlock		  "f32VelocityReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_FW_F32"
	      SID		      "14"
	      Ports		      [7, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 610, 215, 810]
	      ZOrder		      11
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		171
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_FW_F32"
		Description		"Field Weakening controller for the PMSM field-oriented control algorithm in 32-bit fixed-point fractio"
		"nal implementation. This block supports re-initialization of the internal state during simulation. If the block is r"
		"eset, the output of the MA filter and PI controller will be aligned with the inputs f32FilterMAFWOut_preset and f32C"
		"ontrollerPIpAWFWOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/u16NSamples'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/u16NSamples'], 'Position');\n        orient = get_para"
		"m( [gcb, '/u16NSamples'], 'Orientation');\n        delete_block(       [gcb, '/u16NSamples']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/u16NSamples'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/f32PropGain'], 'Position');\n        orient = get_param( [gcb, '/f32PropGain'], 'Orientation');\n        delete_"
		"block(       [gcb, '/f32PropGain']);\n        add_block('built-in/Ground', [gcb, '/f32PropGain'], 'Position', pos, '"
		"Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IntegGain'], 'Position');\n        orient = get_par"
		"am( [gcb, '/f32IntegGain'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegGain']);\n        add_block"
		"('built-in/Ground', [gcb, '/f32IntegGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    "
		"[gcb, '/s16PropGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16PropGainShift'], 'Orientation');\n "
		"       delete_block(       [gcb, '/s16PropGainShift']);\n        add_block('built-in/Ground', [gcb, '/s16PropGainShi"
		"ft'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16IntegGainShift'], 'Position"
		"');\n        orient = get_param( [gcb, '/s16IntegGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s"
		"16IntegGainShift']);\n        add_block('built-in/Ground', [gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientatio"
		"n', orient);\n\n        pos = get_param(    [gcb, '/f32LowerLimit'], 'Position');\n        orient = get_param( [gcb,"
		" '/f32LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimit']);\n        add_block('built"
		"-in/Ground', [gcb, '/f32LowerLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, "
		"'/f32UpperLimit'], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimit'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/f32UpperLimit']);\n        add_block('built-in/Ground', [gcb, '/f32UpperLimit'], 'Position', "
		"pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IQReqK_1'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/f32IQReqK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32IQReqK_1']);\n        add_bl"
		"ock('built-in/Ground', [gcb, '/f32IQReqK_1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(  "
		"  [gcb, '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/f32Acc'], 'Orientation');\n        delete_bloc"
		"k(       [gcb, '/f32Acc']);\n        add_block('built-in/Ground', [gcb, '/f32Acc'], 'Position', pos, 'Orientation', "
		"orient);\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1'], 'Position');\n        orient = get_param( [gcb, '"
		"/f32IntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegPartK_1']);\n        add_block('bui"
		"lt-in/Ground', [gcb, '/f32IntegPartK_1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [g"
		"cb, '/f32InK_1'], 'Position');\n        orient = get_param( [gcb, '/f32InK_1'], 'Orientation');\n        delete_bloc"
		"k(       [gcb, '/f32InK_1']);\n        add_block('built-in/Ground', [gcb, '/f32InK_1'], 'Position', pos, 'Orientatio"
		"n', orient);\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n        orient = get_param( [gcb '/"
		"f32Acc_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n        add_block('built-in/Termin"
		"ator', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IntegP"
		"artK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1_Out'], 'Orientation');\n        delet"
		"e_block(       [gcb '/f32IntegPartK_1_Out']);\n        add_block('built-in/Terminator', [gcb '/f32IntegPartK_1_Out']"
		", 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InK_1_Out'], 'Position');\n     "
		"   orient = get_param( [gcb '/f32InK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InK_1_Out']);\n"
		"        add_block('built-in/Terminator', [gcb '/f32InK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n      "
		"  if strcmp(get_param([gcb '/f32IQErrSign'], 'BlockType'), 'Outport')\n            pos = get_param(    [gcb '/f32IQE"
		"rrSign'], 'Position');\n            orient = get_param( [gcb '/f32IQErrSign'], 'Orientation');\n            delete_b"
		"lock(       [gcb '/f32IQErrSign']);\n            add_block('built-in/Terminator', [gcb '/f32IQErrSign'], 'Position',"
		" pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32IQErr'], 'Position');\n            orient"
		" = get_param( [gcb '/f32IQErr'], 'Orientation');\n            delete_block(       [gcb '/f32IQErr']);\n            a"
		"dd_block('built-in/Terminator', [gcb '/f32IQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get"
		"_param(    [gcb '/f32FWErr'], 'Position');\n            orient = get_param( [gcb '/f32FWErr'], 'Orientation');\n    "
		"        delete_block(       [gcb '/f32FWErr']);\n            add_block('built-in/Terminator', [gcb '/f32FWErr'], 'Po"
		"sition', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32UQErr'], 'Position');\n          "
		"  orient = get_param( [gcb '/f32UQErr'], 'Orientation');\n            delete_block(       [gcb '/f32UQErr']);\n     "
		"       add_block('built-in/Terminator', [gcb '/f32UQErr'], 'Position', pos, 'Orientation', orient);\n\n            p"
		"os = get_param(    [gcb '/f32FWErrFilt'], 'Position');\n            orient = get_param( [gcb '/f32FWErrFilt'], 'Orie"
		"ntation');\n            delete_block(       [gcb '/f32FWErrFilt']);\n            add_block('built-in/Terminator', [g"
		"cb '/f32FWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWAngle']"
		", 'Position');\n            orient = get_param( [gcb '/f32FWAngle'], 'Orientation');\n            delete_block(     "
		"  [gcb '/f32FWAngle']);\n            add_block('built-in/Terminator', [gcb '/f32FWAngle'], 'Position', pos, 'Orienta"
		"tion', orient);\n\n            pos = get_param(    [gcb '/f32FWSin'], 'Position');\n            orient = get_param( "
		"[gcb '/f32FWSin'], 'Orientation');\n            delete_block(       [gcb '/f32FWSin']);\n            add_block('buil"
		"t-in/Terminator', [gcb '/f32FWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gc"
		"b '/f32FWCos'], 'Position');\n            orient = get_param( [gcb '/f32FWCos'], 'Orientation');\n            delete"
		"_block(       [gcb '/f32FWCos']);\n            add_block('built-in/Terminator', [gcb '/f32FWCos'], 'Position', pos, "
		"'Orientation', orient);\n\n        end\n\n        set_param([gcb '/f32IDQReqAmp'], 'Port', '1');\n        set_param("
		"[gcb '/f32VelocityFbck'], 'Port', '2');\n        set_param([gcb '/f32IQFbck'], 'Port', '3');\n        set_param([gcb"
		" '/f32UQReq'], 'Port', '4');\n        set_param([gcb '/f32UQLim'], 'Port', '5');\n        set_param([gcb '/f32Filter"
		"MAFWOut_preset'], 'Port', '6');\n        set_param([gcb '/f32ControllerPIpAWFWOut_preset'], 'Port', '7');\n\n       "
		" set_param([gcb '/pIDQReq'], 'Port', '1');\n        set_param([gcb '/u16LimitFlag'], 'Port', '2');\n\n        set_pa"
		"ram(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) >"
		" 200\n          height = 200;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height"
		"])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/u16NSamples'], 'BlockTyp"
		"e'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/u16NSamples'], '"
		"Position');\n        orient = get_param( [gcb, '/u16NSamples'], 'Orientation');\n        delete_block(       [gcb, '"
		"/u16NSamples']);\n        add_block('built-in/Inport', [gcb, '/u16NSamples'], 'Position', pos, 'Orientation', orient"
		", 'OutDataTypeStr', 'uint16');\n\n        pos = get_param(    [gcb, '/f32PropGain'], 'Position');\n        orient = "
		"get_param( [gcb, '/f32PropGain'], 'Orientation');\n        delete_block(       [gcb, '/f32PropGain']);\n        add_"
		"block('built-in/Inport', [gcb, '/f32PropGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n"
		"\n        pos = get_param(    [gcb, '/f32IntegGain'], 'Position');\n        orient = get_param( [gcb, '/f32IntegGain"
		"'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegGain']);\n        add_block('built-in/Inport', [gcb"
		", '/f32IntegGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param( "
		"   [gcb, '/s16PropGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16PropGainShift'], 'Orientation');"
		"\n        delete_block(       [gcb, '/s16PropGainShift']);\n        add_block('built-in/Inport', [gcb, '/s16PropGain"
		"Shift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/"
		"s16IntegGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16IntegGainShift'], 'Orientation');\n       "
		" delete_block(       [gcb, '/s16IntegGainShift']);\n        add_block('built-in/Inport', [gcb, '/s16IntegGainShift']"
		", 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32Lowe"
		"rLimit'], 'Position');\n        orient = get_param( [gcb, '/f32LowerLimit'], 'Orientation');\n        delete_block( "
		"      [gcb, '/f32LowerLimit']);\n        add_block('built-in/Inport', [gcb, '/f32LowerLimit'], 'Position', pos, 'Ori"
		"entation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32UpperLimit'], 'Position');\n"
		"        orient = get_param( [gcb, '/f32UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32UpperLi"
		"mit']);\n        add_block('built-in/Inport', [gcb, '/f32UpperLimit'], 'Position', pos, 'Orientation', orient, 'OutD"
		"ataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IQReqK_1'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f32IQReqK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32IQReqK_1']);\n        add_block('b"
		"uilt-in/Inport', [gcb, '/f32IQReqK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n     "
		"   pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/f32Acc'], 'Orientation');"
		"\n        delete_block(       [gcb, '/f32Acc']);\n        add_block('built-in/Inport', [gcb, '/f32Acc'], 'Position',"
		" pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1'], '"
		"Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n        delete_block(       [gc"
		"b, '/f32IntegPartK_1']);\n        add_block('built-in/Inport', [gcb, '/f32IntegPartK_1'], 'Position', pos, 'Orientat"
		"ion', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32InK_1'], 'Position');\n        o"
		"rient = get_param( [gcb, '/f32InK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32InK_1']);\n        ad"
		"d_block('built-in/Inport', [gcb, '/f32InK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n"
		"\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n        orient = get_param( [gcb '/f32Acc_Out'], "
		"'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n        add_block('built-in/Outport', [gcb '/f32"
		"Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IntegPartK_1_Out'], 'Po"
		"sition');\n        orient = get_param( [gcb '/f32IntegPartK_1_Out'], 'Orientation');\n        delete_block(       [g"
		"cb '/f32IntegPartK_1_Out']);\n        add_block('built-in/Outport', [gcb '/f32IntegPartK_1_Out'], 'Position', pos, '"
		"Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InK_1_Out'], 'Position');\n        orient = get_para"
		"m( [gcb '/f32InK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InK_1_Out']);\n        add_block('b"
		"uilt-in/Outport', [gcb '/f32InK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        if (showDebugOutputs "
		"== 2) && (strcmp(get_param([gcb '/f32IQErrSign'], 'BlockType'), 'Terminator'))\n            pos = get_param(    [gcb"
		" '/f32IQErrSign'], 'Position');\n            orient = get_param( [gcb '/f32IQErrSign'], 'Orientation');\n           "
		" delete_block(       [gcb '/f32IQErrSign']);\n            add_block('built-in/Outport', [gcb '/f32IQErrSign'], 'Posi"
		"tion', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32IQErr'], 'Position');\n            "
		"orient = get_param( [gcb '/f32IQErr'], 'Orientation');\n            delete_block(       [gcb '/f32IQErr']);\n       "
		"     add_block('built-in/Outport', [gcb '/f32IQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = "
		"get_param(    [gcb '/f32FWErr'], 'Position');\n            orient = get_param( [gcb '/f32FWErr'], 'Orientation');\n "
		"           delete_block(       [gcb '/f32FWErr']);\n            add_block('built-in/Outport', [gcb '/f32FWErr'], 'Po"
		"sition', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32UQErr'], 'Position');\n          "
		"  orient = get_param( [gcb '/f32UQErr'], 'Orientation');\n            delete_block(       [gcb '/f32UQErr']);\n     "
		"       add_block('built-in/Outport', [gcb '/f32UQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos "
		"= get_param(    [gcb '/f32FWErrFilt'], 'Position');\n            orient = get_param( [gcb '/f32FWErrFilt'], 'Orienta"
		"tion');\n            delete_block(       [gcb '/f32FWErrFilt']);\n            add_block('built-in/Outport', [gcb '/f"
		"32FWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWAngle'], 'Pos"
		"ition');\n            orient = get_param( [gcb '/f32FWAngle'], 'Orientation');\n            delete_block(       [gcb"
		" '/f32FWAngle']);\n            add_block('built-in/Outport', [gcb '/f32FWAngle'], 'Position', pos, 'Orientation', or"
		"ient);\n\n            pos = get_param(    [gcb '/f32FWSin'], 'Position');\n            orient = get_param( [gcb '/f3"
		"2FWSin'], 'Orientation');\n            delete_block(       [gcb '/f32FWSin']);\n            add_block('built-in/Outp"
		"ort', [gcb '/f32FWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWCos"
		"'], 'Position');\n            orient = get_param( [gcb '/f32FWCos'], 'Orientation');\n            delete_block(     "
		"  [gcb '/f32FWCos']);\n            add_block('built-in/Outport', [gcb '/f32FWCos'], 'Position', pos, 'Orientation', "
		"orient);\n\n        end\n\n        set_param([gcb '/f32IDQReqAmp'], 'Port', '1');\n        set_param([gcb '/f32Veloc"
		"ityFbck'], 'Port', '2');\n        set_param([gcb '/f32IQFbck'], 'Port', '3');\n        set_param([gcb '/f32UQReq'], "
		"'Port', '4');\n        set_param([gcb '/f32UQLim'], 'Port', '5');\n        set_param([gcb '/f32FilterMAFWOut_preset'"
		"], 'Port', '6');\n        set_param([gcb '/f32ControllerPIpAWFWOut_preset'], 'Port', '7');\n        set_param([gcb '"
		"/u16NSamples'], 'Port', '8');\n        set_param([gcb '/f32PropGain'], 'Port', '9');\n        set_param([gcb '/f32In"
		"tegGain'], 'Port', '10');\n        set_param([gcb '/s16PropGainShift'], 'Port', '11');\n        set_param([gcb '/s16"
		"IntegGainShift'], 'Port', '12');\n        set_param([gcb '/f32LowerLimit'], 'Port', '13');\n        set_param([gcb '"
		"/f32UpperLimit'], 'Port', '14');\n        set_param([gcb '/f32IQReqK_1'], 'Port', '15');\n        set_param([gcb '/f"
		"32Acc'], 'Port', '16');\n        set_param([gcb '/f32IntegPartK_1'], 'Port', '17');\n        set_param([gcb '/f32InK"
		"_1'], 'Port', '18');\n\n        if (showDebugOutputs == 2)\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n "
		"           set_param([gcb '/u16LimitFlag'], 'Port', '2');\n            set_param([gcb '/f32IQErrSign'], 'Port', '3')"
		";\n            set_param([gcb '/f32IQErr'], 'Port', '4');\n            set_param([gcb '/f32FWErr'], 'Port', '5');\n "
		"           set_param([gcb '/f32UQErr'], 'Port', '6');\n            set_param([gcb '/f32FWErrFilt'], 'Port', '7');\n "
		"           set_param([gcb '/f32FWAngle'], 'Port', '8');\n            set_param([gcb '/f32FWSin'], 'Port', '9');\n   "
		"         set_param([gcb '/f32FWCos'], 'Port', '10');\n            set_param([gcb '/f32Acc_Out'], 'Port', '11');\n   "
		"         set_param([gcb '/f32IntegPartK_1_Out'], 'Port', '12');\n            set_param([gcb '/f32InK_1_Out'], 'Port'"
		", '13');\n        else\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16Limit"
		"Flag'], 'Port', '2');\n            set_param([gcb '/f32Acc_Out'], 'Port', '3');\n            set_param([gcb '/f32Int"
		"egPartK_1_Out'], 'Port', '4');\n            set_param([gcb '/f32InK_1_Out'], 'Port', '5');\n        end\n\n        s"
		"et_param(gcb,'MaskEnables',{'on','on','on','off','off','off','off','off','off','off'});\n\n        if (posblk(4) - p"
		"osblk(2)) < 475\n          height = 475;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posbl"
		"k(2)+height])\n        end\n    else\n        if (showDebugOutputs == 2) && (strcmp(get_param([gcb '/f32IQErrSign'],"
		" 'BlockType'), 'Terminator'))\n            % shown debugging outputs\n            pos = get_param(    [gcb '/f32IQEr"
		"rSign'], 'Position');\n            orient = get_param( [gcb '/f32IQErrSign'], 'Orientation');\n            delete_bl"
		"ock(       [gcb '/f32IQErrSign']);\n            add_block('built-in/Outport', [gcb '/f32IQErrSign'], 'Position', pos"
		", 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32IQErr'], 'Position');\n            orient = g"
		"et_param( [gcb '/f32IQErr'], 'Orientation');\n            delete_block(       [gcb '/f32IQErr']);\n            add_b"
		"lock('built-in/Outport', [gcb '/f32IQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param("
		"    [gcb '/f32FWErr'], 'Position');\n            orient = get_param( [gcb '/f32FWErr'], 'Orientation');\n           "
		" delete_block(       [gcb '/f32FWErr']);\n            add_block('built-in/Outport', [gcb '/f32FWErr'], 'Position', p"
		"os, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32UQErr'], 'Position');\n            orient ="
		" get_param( [gcb '/f32UQErr'], 'Orientation');\n            delete_block(       [gcb '/f32UQErr']);\n            add"
		"_block('built-in/Outport', [gcb '/f32UQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_para"
		"m(    [gcb '/f32FWErrFilt'], 'Position');\n            orient = get_param( [gcb '/f32FWErrFilt'], 'Orientation');\n "
		"           delete_block(       [gcb '/f32FWErrFilt']);\n            add_block('built-in/Outport', [gcb '/f32FWErrFil"
		"t'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWAngle'], 'Position');\n"
		"            orient = get_param( [gcb '/f32FWAngle'], 'Orientation');\n            delete_block(       [gcb '/f32FWAn"
		"gle']);\n            add_block('built-in/Outport', [gcb '/f32FWAngle'], 'Position', pos, 'Orientation', orient);\n\n"
		"            pos = get_param(    [gcb '/f32FWSin'], 'Position');\n            orient = get_param( [gcb '/f32FWSin'], "
		"'Orientation');\n            delete_block(       [gcb '/f32FWSin']);\n            add_block('built-in/Outport', [gcb"
		" '/f32FWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWCos'], 'Posit"
		"ion');\n            orient = get_param( [gcb '/f32FWCos'], 'Orientation');\n            delete_block(       [gcb '/f"
		"32FWCos']);\n            add_block('built-in/Outport', [gcb '/f32FWCos'], 'Position', pos, 'Orientation', orient);\n"
		"\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlag'], 'Port', '2');\n"
		"            set_param([gcb '/f32IQErrSign'], 'Port', '3');\n            set_param([gcb '/f32IQErr'], 'Port', '4');\n"
		"            set_param([gcb '/f32FWErr'], 'Port', '5');\n            set_param([gcb '/f32UQErr'], 'Port', '6');\n    "
		"        set_param([gcb '/f32FWErrFilt'], 'Port', '7');\n            set_param([gcb '/f32FWAngle'], 'Port', '8');\n  "
		"          set_param([gcb '/f32FWSin'], 'Port', '9');\n            set_param([gcb '/f32FWCos'], 'Port', '10');\n     "
		"       set_param([gcb '/f32Acc_Out'], 'Port', '11');\n            set_param([gcb '/f32IntegPartK_1_Out'], 'Port', '1"
		"2');\n            set_param([gcb '/f32InK_1_Out'], 'Port', '13');\n        elseif (showDebugOutputs == 1) && (strcmp"
		"(get_param([gcb '/f32IQErrSign'], 'BlockType'), 'Outport'))\n            % hidden debugging outputs\n            pos"
		" = get_param(    [gcb '/f32IQErrSign'], 'Position');\n            orient = get_param( [gcb '/f32IQErrSign'], 'Orient"
		"ation');\n            delete_block(       [gcb '/f32IQErrSign']);\n            add_block('built-in/Terminator', [gcb"
		" '/f32IQErrSign'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32IQErr'], 'P"
		"osition');\n            orient = get_param( [gcb '/f32IQErr'], 'Orientation');\n            delete_block(       [gcb"
		" '/f32IQErr']);\n            add_block('built-in/Terminator', [gcb '/f32IQErr'], 'Position', pos, 'Orientation', ori"
		"ent);\n\n            pos = get_param(    [gcb '/f32FWErr'], 'Position');\n            orient = get_param( [gcb '/f32"
		"FWErr'], 'Orientation');\n            delete_block(       [gcb '/f32FWErr']);\n            add_block('built-in/Termi"
		"nator', [gcb '/f32FWErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32UQE"
		"rr'], 'Position');\n            orient = get_param( [gcb '/f32UQErr'], 'Orientation');\n            delete_block(   "
		"    [gcb '/f32UQErr']);\n            add_block('built-in/Terminator', [gcb '/f32UQErr'], 'Position', pos, 'Orientati"
		"on', orient);\n\n            pos = get_param(    [gcb '/f32FWErrFilt'], 'Position');\n            orient = get_param"
		"( [gcb '/f32FWErrFilt'], 'Orientation');\n            delete_block(       [gcb '/f32FWErrFilt']);\n            add_b"
		"lock('built-in/Terminator', [gcb '/f32FWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get"
		"_param(    [gcb '/f32FWAngle'], 'Position');\n            orient = get_param( [gcb '/f32FWAngle'], 'Orientation');\n"
		"            delete_block(       [gcb '/f32FWAngle']);\n            add_block('built-in/Terminator', [gcb '/f32FWAngl"
		"e'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32FWSin'], 'Position');\n  "
		"          orient = get_param( [gcb '/f32FWSin'], 'Orientation');\n            delete_block(       [gcb '/f32FWSin'])"
		";\n            add_block('built-in/Terminator', [gcb '/f32FWSin'], 'Position', pos, 'Orientation', orient);\n\n     "
		"       pos = get_param(    [gcb '/f32FWCos'], 'Position');\n            orient = get_param( [gcb '/f32FWCos'], 'Orie"
		"ntation');\n            delete_block(       [gcb '/f32FWCos']);\n            add_block('built-in/Terminator', [gcb '"
		"/f32FWCos'], 'Position', pos, 'Orientation', orient);\n\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n    "
		"        set_param([gcb '/u16LimitFlag'], 'Port', '2');\n            set_param([gcb '/f32Acc_Out'], 'Port', '3');\n  "
		"          set_param([gcb '/f32IntegPartK_1_Out'], 'Port', '4');\n            set_param([gcb '/f32InK_1_Out'], 'Port'"
		", '5');\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_FW_F32', 'horizontalAlignment', 'center');\nif sh"
		"owStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)'], 'ho"
		"rizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  10
		  Object {
		    $ObjectID		    172
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnabl"
		    "es',{'on','on','on','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    173
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    174
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide"
		    Cell		    "Show"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showDebugOutputs"
		    Prompt		    "Show debugging outputs"
		    Value		    "Hide"
		    Enabled		    "off"
		  }
		  Object {
		    $ObjectID		    175
		    Type		    "edit"
		    Name		    "u16NSamples"
		    Prompt		    "u16NSamples (GDFLIB_FilterMA - recalculated smoothing factor)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    176
		    Type		    "edit"
		    Name		    "f32PropGain"
		    Prompt		    "f32PropGain (GFLIB_ControllerPIpAW - proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    177
		    Type		    "edit"
		    Name		    "f32IntegGain"
		    Prompt		    "f32IntegGain (GFLIB_ControllerPIpAW - integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    178
		    Type		    "edit"
		    Name		    "s16PropGainShift"
		    Prompt		    "s16PropGainShift (GFLIB_ControllerPIpAW - scaling bitwise shift applied to the proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    179
		    Type		    "edit"
		    Name		    "s16IntegGainShift"
		    Prompt		    "s16IntegGainShift (GFLIB_ControllerPIpAW - scaling bitwise shift applied to the integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    180
		    Type		    "edit"
		    Name		    "f32LowerLimit"
		    Prompt		    "f32LowerLimit (GFLIB_ControllerPIpAW - lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    181
		    Type		    "edit"
		    Name		    "f32UpperLimit"
		    Prompt		    "f32UpperLimit (GFLIB_ControllerPIpAW - upper limit)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_FW_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"64"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32IDQReqAmp"
		  SID			  "14:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32VelocityFbck"
		  SID			  "14:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32IQFbck"
		  SID			  "14:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32UQReq"
		  SID			  "14:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32UQLim"
		  SID			  "14:10"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  12
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32FilterMAFWOut_preset"
		  SID			  "14:11"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  13
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "6"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32ControllerPIpAWFWOut_preset"
		  SID			  "14:12"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  14
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "7"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "14:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_FW_SF"
		  SID			  "14:5"
		  Ports			  [18, 13]
		  Position		  [135, 165, 285, 250]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_FW_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,showDebugOutputs,u16NSamples,f32PropGain,f32IntegGain,s16PropGainShift"
		  ",s16IntegGainShift,f32LowerLimit,f32UpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "14:37"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  39
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    182
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "14:40"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  40
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    183
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_FW_BAM_F32.mdl');text(10,75,'PMSM Field Weakening Controller');text(10,60,'NXP "
		    "2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc"
		  SID			  "14:51"
		  Position		  [40, 798, 70, 812]
		  ZOrder		  49
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Out"
		  SID			  "14:54"
		  Position		  [340, 598, 370, 612]
		  ZOrder		  52
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FWAngle"
		  SID			  "14:62"
		  Position		  [340, 478, 370, 492]
		  ZOrder		  60
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FWCos"
		  SID			  "14:64"
		  Position		  [340, 558, 370, 572]
		  ZOrder		  62
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FWErr"
		  SID			  "14:59"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  57
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FWErrFilt"
		  SID			  "14:61"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  59
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FWSin"
		  SID			  "14:63"
		  Position		  [340, 518, 370, 532]
		  ZOrder		  61
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IQErr"
		  SID			  "14:58"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  56
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IQErrSign"
		  SID			  "14:57"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  55
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IQReqK_1"
		  SID			  "14:50"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  48
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InK_1"
		  SID			  "14:53"
		  Position		  [40, 878, 70, 892]
		  ZOrder		  51
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InK_1_Out"
		  SID			  "14:56"
		  Position		  [340, 678, 370, 692]
		  ZOrder		  54
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegGain"
		  SID			  "14:45"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  43
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1"
		  SID			  "14:52"
		  Position		  [40, 838, 70, 852]
		  ZOrder		  50
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1_Out"
		  SID			  "14:55"
		  Position		  [340, 638, 370, 652]
		  ZOrder		  53
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimit"
		  SID			  "14:48"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  46
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32PropGain"
		  SID			  "14:44"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  42
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32UQErr"
		  SID			  "14:60"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  58
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimit"
		  SID			  "14:49"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  47
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShift"
		  SID			  "14:47"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  45
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShift"
		  SID			  "14:46"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  44
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NSamples"
		  SID			  "14:43"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  41
		}
		Block {
		  BlockType		  Outport
		  Name			  "pIDQReq"
		  SID			  "14:24"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  26
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlag"
		  SID			  "14:25"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  27
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  13
		  DstBlock		  "f32InK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  12
		  DstBlock		  "f32IntegPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  11
		  DstBlock		  "f32Acc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  10
		  DstBlock		  "f32FWCos"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  9
		  DstBlock		  "f32FWSin"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  8
		  DstBlock		  "f32FWAngle"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  7
		  DstBlock		  "f32FWErrFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  6
		  DstBlock		  "f32UQErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  5
		  DstBlock		  "f32FWErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  4
		  DstBlock		  "f32IQErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  3
		  DstBlock		  "f32IQErrSign"
		  DstPort		  1
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlag"
		  DstPort		  1
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  1
		  DstBlock		  "pIDQReq"
		  DstPort		  1
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f32InK_1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  18
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f32IntegPartK_1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  17
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f32Acc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  16
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f32IQReqK_1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "f32UpperLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "f32LowerLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "s16IntegGainShift"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  21
		  SrcBlock		  "s16PropGainShift"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  22
		  SrcBlock		  "f32IntegGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  23
		  SrcBlock		  "f32PropGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  24
		  SrcBlock		  "u16NSamples"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  25
		  SrcBlock		  "f32ControllerPIpAWFWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  26
		  SrcBlock		  "f32FilterMAFWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  27
		  SrcBlock		  "f32UQLim"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  28
		  SrcBlock		  "f32UQReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  29
		  SrcBlock		  "f32IQFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  30
		  SrcBlock		  "f32VelocityFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  31
		  SrcBlock		  "f32IDQReqAmp"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_SpeedLoop_F32"
	      SID		      "15"
	      Ports		      [5, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 830, 250, 980]
	      ZOrder		      12
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		184
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_SpeedLoop_F32"
		Description		"Speed loop controller for the PMSM field-oriented control algorithm in 32-bit fixed-point fractional i"
		"mplementation. This block supports re-initialization of the internal state during simulation. If the block is reset,"
		" the outputs of the MA filter, PI controller, and the ramp will be aligned with the inputs f32FilterMAWOut_preset, f"
		"32ControllerPIpAWQOut_preset, and f32RampOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/u16NSamplesW'], 'BlockType'), 'Inport')\n        posblk = get_"
		"param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/u16NSamplesW'], 'Position');\n        orient = get_pa"
		"ram( [gcb, '/u16NSamplesW'], 'Orientation');\n        delete_block(       [gcb, '/u16NSamplesW']);\n        add_bloc"
		"k('built-in/Ground', [gcb, '/u16NSamplesW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(   "
		" [gcb, '/f32PropGainQ'], 'Position');\n        orient = get_param( [gcb, '/f32PropGainQ'], 'Orientation');\n        "
		"delete_block(       [gcb, '/f32PropGainQ']);\n        add_block('built-in/Ground', [gcb, '/f32PropGainQ'], 'Position"
		"', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IntegGainQ'], 'Position');\n        orient"
		" = get_param( [gcb, '/f32IntegGainQ'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegGainQ']);\n     "
		"   add_block('built-in/Ground', [gcb, '/f32IntegGainQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = g"
		"et_param(    [gcb, '/s16PropGainShiftQ'], 'Position');\n        orient = get_param( [gcb, '/s16PropGainShiftQ'], 'Or"
		"ientation');\n        delete_block(       [gcb, '/s16PropGainShiftQ']);\n        add_block('built-in/Ground', [gcb, "
		"'/s16PropGainShiftQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16IntegGainS"
		"hiftQ'], 'Position');\n        orient = get_param( [gcb, '/s16IntegGainShiftQ'], 'Orientation');\n        delete_blo"
		"ck(       [gcb, '/s16IntegGainShiftQ']);\n        add_block('built-in/Ground', [gcb, '/s16IntegGainShiftQ'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32LowerLimitQ'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/f32LowerLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimitQ']);\n"
		"        add_block('built-in/Ground', [gcb, '/f32LowerLimitQ'], 'Position', pos, 'Orientation', orient);\n\n        p"
		"os = get_param(    [gcb, '/f32UpperLimitQ'], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimitQ'], 'Or"
		"ientation');\n        delete_block(       [gcb, '/f32UpperLimitQ']);\n        add_block('built-in/Ground', [gcb, '/f"
		"32UpperLimitQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32RampUp'], 'Posit"
		"ion');\n        orient = get_param( [gcb, '/f32RampUp'], 'Orientation');\n        delete_block(       [gcb, '/f32Ram"
		"pUp']);\n        add_block('built-in/Ground', [gcb, '/f32RampUp'], 'Position', pos, 'Orientation', orient);\n\n     "
		"   pos = get_param(    [gcb, '/f32RampDown'], 'Position');\n        orient = get_param( [gcb, '/f32RampDown'], 'Orie"
		"ntation');\n        delete_block(       [gcb, '/f32RampDown']);\n        add_block('built-in/Ground', [gcb, '/f32Ram"
		"pDown'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32AccW'], 'Position');\n  "
		"      orient = get_param( [gcb, '/f32AccW'], 'Orientation');\n        delete_block(       [gcb, '/f32AccW']);\n     "
		"   add_block('built-in/Ground', [gcb, '/f32AccW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_par"
		"am(    [gcb, '/f32IntegPartK_1Q'], 'Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1Q'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/f32IntegPartK_1Q']);\n        add_block('built-in/Ground', [gcb, '/f32Inte"
		"gPartK_1Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32InK_1Q'], 'Position'"
		");\n        orient = get_param( [gcb, '/f32InK_1Q'], 'Orientation');\n        delete_block(       [gcb, '/f32InK_1Q'"
		"]);\n        add_block('built-in/Ground', [gcb, '/f32InK_1Q'], 'Position', pos, 'Orientation', orient);\n\n        p"
		"os = get_param(    [gcb, '/f32State'], 'Position');\n        orient = get_param( [gcb, '/f32State'], 'Orientation');"
		"\n        delete_block(       [gcb, '/f32State']);\n        add_block('built-in/Ground', [gcb, '/f32State'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f32AccW_Out'], 'Position');\n        orien"
		"t = get_param( [gcb '/f32AccW_Out'], 'Orientation');\n        delete_block(       [gcb '/f32AccW_Out']);\n        ad"
		"d_block('built-in/Terminator', [gcb '/f32AccW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_p"
		"aram(    [gcb '/f32IntegPartK_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1Q_Out'], 'Or"
		"ientation');\n        delete_block(       [gcb '/f32IntegPartK_1Q_Out']);\n        add_block('built-in/Terminator', "
		"[gcb '/f32IntegPartK_1Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InK"
		"_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/f32InK_1Q_Out'], 'Orientation');\n        delete_block( "
		"      [gcb '/f32InK_1Q_Out']);\n        add_block('built-in/Terminator', [gcb '/f32InK_1Q_Out'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb '/f32State_Out'], 'Position');\n        orient = get_param"
		"( [gcb '/f32State_Out'], 'Orientation');\n        delete_block(       [gcb '/f32State_Out']);\n        add_block('bu"
		"ilt-in/Terminator', [gcb '/f32State_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        if strcmp(get_param"
		"([gcb '/f32WReqFilt'], 'BlockType'), 'Outport')\n            pos = get_param(    [gcb '/f32WReqFilt'], 'Position');\n"
		"            orient = get_param( [gcb '/f32WReqFilt'], 'Orientation');\n            delete_block(       [gcb '/f32WRe"
		"qFilt']);\n            add_block('built-in/Terminator', [gcb '/f32WReqFilt'], 'Position', pos, 'Orientation', orient"
		");\n\n            pos = get_param(    [gcb '/f32WErr'], 'Position');\n            orient = get_param( [gcb '/f32WErr"
		"'], 'Orientation');\n            delete_block(       [gcb '/f32WErr']);\n            add_block('built-in/Terminator'"
		", [gcb '/f32WErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32WFbckFilt'"
		"], 'Position');\n            orient = get_param( [gcb '/f32WFbckFilt'], 'Orientation');\n            delete_block(  "
		"     [gcb '/f32WFbckFilt']);\n            add_block('built-in/Terminator', [gcb '/f32WFbckFilt'], 'Position', pos, '"
		"Orientation', orient);\n\n        end\n\n        set_param([gcb '/f32VelocityReq'], 'Port', '1');\n        set_param"
		"([gcb '/f32VelocityFbck'], 'Port', '2');\n        set_param([gcb '/f32FilterMAWOut_preset'], 'Port', '3');\n        "
		"set_param([gcb '/f32ControllerPIpAWQOut_preset'], 'Port', '4');\n        set_param([gcb '/f32RampOut_preset'], 'Port"
		"', '5');\n\n        set_param([gcb '/pIDQReq'], 'Port', '1');\n        set_param([gcb '/u16LimitFlagQ'], 'Port', '2'"
		");\n\n        set_param(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on','on','on'});\n\n      "
		"  if (posblk(4) - posblk(2)) > 150\n          height = 150;\n          set_param(gcb,'Position',[posblk(1), posblk(2"
		"), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param(["
		"gcb '/u16NSamplesW'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_par"
		"am(    [gcb, '/u16NSamplesW'], 'Position');\n        orient = get_param( [gcb, '/u16NSamplesW'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/u16NSamplesW']);\n        add_block('built-in/Inport', [gcb, '/u16NSamplesW'], 'Po"
		"sition', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n        pos = get_param(    [gcb, '/f32PropGain"
		"Q'], 'Position');\n        orient = get_param( [gcb, '/f32PropGainQ'], 'Orientation');\n        delete_block(       "
		"[gcb, '/f32PropGainQ']);\n        add_block('built-in/Inport', [gcb, '/f32PropGainQ'], 'Position', pos, 'Orientation"
		"', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IntegGainQ'], 'Position');\n       "
		" orient = get_param( [gcb, '/f32IntegGainQ'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegGainQ']);"
		"\n        add_block('built-in/Inport', [gcb, '/f32IntegGainQ'], 'Position', pos, 'Orientation', orient, 'OutDataType"
		"Str', 'int32');\n\n        pos = get_param(    [gcb, '/s16PropGainShiftQ'], 'Position');\n        orient = get_param"
		"( [gcb, '/s16PropGainShiftQ'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShiftQ']);\n        a"
		"dd_block('built-in/Inport', [gcb, '/s16PropGainShiftQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', '"
		"int16');\n\n        pos = get_param(    [gcb, '/s16IntegGainShiftQ'], 'Position');\n        orient = get_param( [gcb"
		", '/s16IntegGainShiftQ'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShiftQ']);\n        add_b"
		"lock('built-in/Inport', [gcb, '/s16IntegGainShiftQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int"
		"16');\n\n        pos = get_param(    [gcb, '/f32LowerLimitQ'], 'Position');\n        orient = get_param( [gcb, '/f32"
		"LowerLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimitQ']);\n        add_block('built-in/"
		"Inport', [gcb, '/f32LowerLimitQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        po"
		"s = get_param(    [gcb, '/f32UpperLimitQ'], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimitQ'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/f32UpperLimitQ']);\n        add_block('built-in/Inport', [gcb, '/f3"
		"2UpperLimitQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    ["
		"gcb, '/f32RampUp'], 'Position');\n        orient = get_param( [gcb, '/f32RampUp'], 'Orientation');\n        delete_b"
		"lock(       [gcb, '/f32RampUp']);\n        add_block('built-in/Inport', [gcb, '/f32RampUp'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32RampDown'], 'Position');\n   "
		"     orient = get_param( [gcb, '/f32RampDown'], 'Orientation');\n        delete_block(       [gcb, '/f32RampDown']);"
		"\n        add_block('built-in/Inport', [gcb, '/f32RampDown'], 'Position', pos, 'Orientation', orient, 'OutDataTypeSt"
		"r', 'int32');\n\n        pos = get_param(    [gcb, '/f32AccW'], 'Position');\n        orient = get_param( [gcb, '/f3"
		"2AccW'], 'Orientation');\n        delete_block(       [gcb, '/f32AccW']);\n        add_block('built-in/Inport', [gcb"
		", '/f32AccW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [g"
		"cb, '/f32IntegPartK_1Q'], 'Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1Q'], 'Orientation');\n   "
		"     delete_block(       [gcb, '/f32IntegPartK_1Q']);\n        add_block('built-in/Inport', [gcb, '/f32IntegPartK_1Q"
		"'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32In"
		"K_1Q'], 'Position');\n        orient = get_param( [gcb, '/f32InK_1Q'], 'Orientation');\n        delete_block(       "
		"[gcb, '/f32InK_1Q']);\n        add_block('built-in/Inport', [gcb, '/f32InK_1Q'], 'Position', pos, 'Orientation', ori"
		"ent, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32State'], 'Position');\n        orient = g"
		"et_param( [gcb, '/f32State'], 'Orientation');\n        delete_block(       [gcb, '/f32State']);\n        add_block('"
		"built-in/Inport', [gcb, '/f32State'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n     "
		"   pos = get_param(    [gcb '/f32AccW_Out'], 'Position');\n        orient = get_param( [gcb '/f32AccW_Out'], 'Orient"
		"ation');\n        delete_block(       [gcb '/f32AccW_Out']);\n        add_block('built-in/Outport', [gcb '/f32AccW_O"
		"ut'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32IntegPartK_1Q_Out'], 'Positi"
		"on');\n        orient = get_param( [gcb '/f32IntegPartK_1Q_Out'], 'Orientation');\n        delete_block(       [gcb "
		"'/f32IntegPartK_1Q_Out']);\n        add_block('built-in/Outport', [gcb '/f32IntegPartK_1Q_Out'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb '/f32InK_1Q_Out'], 'Position');\n        orient = get_para"
		"m( [gcb '/f32InK_1Q_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InK_1Q_Out']);\n        add_block("
		"'built-in/Outport', [gcb '/f32InK_1Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    "
		"[gcb '/f32State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n        del"
		"ete_block(       [gcb '/f32State_Out']);\n        add_block('built-in/Outport', [gcb '/f32State_Out'], 'Position', p"
		"os, 'Orientation', orient);\n\n\n        if (showDebugOutputs == 2) && (strcmp(get_param([gcb '/f32WReqFilt'], 'Bloc"
		"kType'), 'Terminator'))\n            pos = get_param(    [gcb '/f32WReqFilt'], 'Position');\n            orient = ge"
		"t_param( [gcb '/f32WReqFilt'], 'Orientation');\n            delete_block(       [gcb '/f32WReqFilt']);\n            "
		"add_block('built-in/Outport', [gcb '/f32WReqFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = ge"
		"t_param(    [gcb '/f32WErr'], 'Position');\n            orient = get_param( [gcb '/f32WErr'], 'Orientation');\n     "
		"       delete_block(       [gcb '/f32WErr']);\n            add_block('built-in/Outport', [gcb '/f32WErr'], 'Position"
		"', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32WFbckFilt'], 'Position');\n            "
		"orient = get_param( [gcb '/f32WFbckFilt'], 'Orientation');\n            delete_block(       [gcb '/f32WFbckFilt']);\n"
		"            add_block('built-in/Outport', [gcb '/f32WFbckFilt'], 'Position', pos, 'Orientation', orient);\n\n       "
		" end\n\n        set_param([gcb '/f32VelocityReq'], 'Port', '1');\n        set_param([gcb '/f32VelocityFbck'], 'Port'"
		", '2');\n        set_param([gcb '/f32FilterMAWOut_preset'], 'Port', '3');\n        set_param([gcb '/f32ControllerPIp"
		"AWQOut_preset'], 'Port', '4');\n        set_param([gcb '/f32RampOut_preset'], 'Port', '5');\n        set_param([gcb "
		"'/u16NSamplesW'], 'Port', '6');\n        set_param([gcb '/f32PropGainQ'], 'Port', '7');\n        set_param([gcb '/f3"
		"2IntegGainQ'], 'Port', '8');\n        set_param([gcb '/s16PropGainShiftQ'], 'Port', '9');\n        set_param([gcb '/"
		"s16IntegGainShiftQ'], 'Port', '10');\n        set_param([gcb '/f32LowerLimitQ'], 'Port', '11');\n        set_param(["
		"gcb '/f32UpperLimitQ'], 'Port', '12');\n        set_param([gcb '/f32RampUp'], 'Port', '13');\n        set_param([gcb"
		" '/f32RampDown'], 'Port', '14');\n        set_param([gcb '/f32AccW'], 'Port', '15');\n        set_param([gcb '/f32In"
		"tegPartK_1Q'], 'Port', '16');\n        set_param([gcb '/f32InK_1Q'], 'Port', '17');\n        set_param([gcb '/f32Sta"
		"te'], 'Port', '18');\n\n        if (showDebugOutputs == 2)\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n "
		"           set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n            set_param([gcb '/f32WReqFilt'], 'Port', '3')"
		";\n            set_param([gcb '/f32WErr'], 'Port', '4');\n            set_param([gcb '/f32WFbckFilt'], 'Port', '5');"
		"\n            set_param([gcb '/f32AccW_Out'], 'Port', '6');\n            set_param([gcb '/f32IntegPartK_1Q_Out'], 'P"
		"ort', '7');\n            set_param([gcb '/f32InK_1Q_Out'], 'Port', '8');\n            set_param([gcb '/f32State_Out'"
		"], 'Port', '9');\n        else\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/"
		"u16LimitFlagQ'], 'Port', '2');\n            set_param([gcb '/f32AccW_Out'], 'Port', '3');\n            set_param([gc"
		"b '/f32IntegPartK_1Q_Out'], 'Port', '4');\n            set_param([gcb '/f32InK_1Q_Out'], 'Port', '5');\n            "
		"set_param([gcb '/f32State_Out'], 'Port', '6');\n        end\n\n        set_param(gcb,'MaskEnables',{'on','on','on','"
		"off','off','off','off','off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 475\n          heigh"
		"t = 475;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    "
		"else\n        if (showDebugOutputs == 2) && (strcmp(get_param([gcb '/f32WReqFilt'], 'BlockType'), 'Terminator'))\n  "
		"          % shown debugging outputs\n            pos = get_param(    [gcb '/f32WReqFilt'], 'Position');\n           "
		" orient = get_param( [gcb '/f32WReqFilt'], 'Orientation');\n            delete_block(       [gcb '/f32WReqFilt']);\n"
		"            add_block('built-in/Outport', [gcb '/f32WReqFilt'], 'Position', pos, 'Orientation', orient);\n\n        "
		"    pos = get_param(    [gcb '/f32WErr'], 'Position');\n            orient = get_param( [gcb '/f32WErr'], 'Orientati"
		"on');\n            delete_block(       [gcb '/f32WErr']);\n            add_block('built-in/Outport', [gcb '/f32WErr'"
		"], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32WFbckFilt'], 'Position');\n"
		"            orient = get_param( [gcb '/f32WFbckFilt'], 'Orientation');\n            delete_block(       [gcb '/f32WF"
		"bckFilt']);\n            add_block('built-in/Outport', [gcb '/f32WFbckFilt'], 'Position', pos, 'Orientation', orient"
		");\n\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '"
		"2');\n            set_param([gcb '/f32WReqFilt'], 'Port', '3');\n            set_param([gcb '/f32WErr'], 'Port', '4'"
		");\n            set_param([gcb '/f32WFbckFilt'], 'Port', '5');\n            set_param([gcb '/f32AccW_Out'], 'Port', "
		"'6');\n            set_param([gcb '/f32IntegPartK_1Q_Out'], 'Port', '7');\n            set_param([gcb '/f32InK_1Q_Ou"
		"t'], 'Port', '8');\n            set_param([gcb '/f32State_Out'], 'Port', '9');\n        elseif (showDebugOutputs == "
		"1) && (strcmp(get_param([gcb '/f32WReqFilt'], 'BlockType'), 'Outport'))\n            % hidden debugging outputs\n   "
		"         pos = get_param(    [gcb '/f32WReqFilt'], 'Position');\n            orient = get_param( [gcb '/f32WReqFilt'"
		"], 'Orientation');\n            delete_block(       [gcb '/f32WReqFilt']);\n            add_block('built-in/Terminat"
		"or', [gcb '/f32WReqFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f32WEr"
		"r'], 'Position');\n            orient = get_param( [gcb '/f32WErr'], 'Orientation');\n            delete_block(     "
		"  [gcb '/f32WErr']);\n            add_block('built-in/Terminator', [gcb '/f32WErr'], 'Position', pos, 'Orientation',"
		" orient);\n\n            pos = get_param(    [gcb '/f32WFbckFilt'], 'Position');\n            orient = get_param( [g"
		"cb '/f32WFbckFilt'], 'Orientation');\n            delete_block(       [gcb '/f32WFbckFilt']);\n            add_block"
		"('built-in/Terminator', [gcb '/f32WFbckFilt'], 'Position', pos, 'Orientation', orient);\n\n            set_param([gc"
		"b '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n            set_param([gc"
		"b '/f32AccW_Out'], 'Port', '3');\n            set_param([gcb '/f32IntegPartK_1Q_Out'], 'Port', '4');\n            se"
		"t_param([gcb '/f32InK_1Q_Out'], 'Port', '5');\n            set_param([gcb '/f32State_Out'], 'Port', '6');\n        e"
		"nd\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_SpeedLoop_F32', 'horizontalAlignment', 'center');"
		"\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)"
		"'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  12
		  Object {
		    $ObjectID		    185
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,"
		    "'MaskEnables',{'on','on','on','off','off','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    186
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    187
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide"
		    Cell		    "Show"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showDebugOutputs"
		    Prompt		    "Show debugging outputs"
		    Value		    "Hide"
		    Enabled		    "off"
		  }
		  Object {
		    $ObjectID		    188
		    Type		    "edit"
		    Name		    "u16NSamplesW"
		    Prompt		    "u16NSamplesW (GDFLIB_FilterMA - recalculated smoothing factor)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    189
		    Type		    "edit"
		    Name		    "f32PropGainQ"
		    Prompt		    "f32PropGainQ (GFLIB_ControllerPIpAW - proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    190
		    Type		    "edit"
		    Name		    "f32IntegGainQ"
		    Prompt		    "f32IntegGainQ (GFLIB_ControllerPIpAW - integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    191
		    Type		    "edit"
		    Name		    "s16PropGainShiftQ"
		    Prompt		    "s16PropGainShiftQ (GFLIB_ControllerPIpAW - scaling bitwise shift applied to the proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    192
		    Type		    "edit"
		    Name		    "s16IntegGainShiftQ"
		    Prompt		    "s16IntegGainShiftQ (GFLIB_ControllerPIpAW - scaling bitwise shift applied to the integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    193
		    Type		    "edit"
		    Name		    "f32LowerLimitQ"
		    Prompt		    "f32LowerLimitQ (GFLIB_ControllerPIpAW - lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    194
		    Type		    "edit"
		    Name		    "f32UpperLimitQ"
		    Prompt		    "f32UpperLimitQ (GFLIB_ControllerPIpAW - upper limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    195
		    Type		    "edit"
		    Name		    "f32RampUp"
		    Prompt		    "f32RampUp (Ramp up increment coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    196
		    Type		    "edit"
		    Name		    "f32RampDown"
		    Prompt		    "f32RampDown (Ramp decrement coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_SpeedLoop_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"58"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32VelocityReq"
		  SID			  "15:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32VelocityFbck"
		  SID			  "15:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32FilterMAWOut_preset"
		  SID			  "15:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32ControllerPIpAWQOut_preset"
		  SID			  "15:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32RampOut_preset"
		  SID			  "15:10"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  12
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "15:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_SpeedLoop_SF"
		  SID			  "15:5"
		  Ports			  [18, 9]
		  Position		  [135, 165, 285, 250]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_SpeedLoop_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,showDebugOutputs,u16NSamplesW,f32PropGainQ,f32IntegGainQ,s16PropGainSh"
		  "iftQ,s16IntegGainShiftQ,f32LowerLimitQ,f32UpperLimitQ,f32RampUp,f32RampDown"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "15:33"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  35
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    197
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "15:36"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  36
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    198
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_SpeedLoop_BAM_F32.mdl');text(10,75,'PMSM Speed Loop Controller.');text(10,60,'N"
		    "XP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32AccW"
		  SID			  "15:48"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  46
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32AccW_Out"
		  SID			  "15:52"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  50
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InK_1Q"
		  SID			  "15:50"
		  Position		  [40, 838, 70, 852]
		  ZOrder		  48
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InK_1Q_Out"
		  SID			  "15:54"
		  Position		  [340, 478, 370, 492]
		  ZOrder		  52
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegGainQ"
		  SID			  "15:41"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1Q"
		  SID			  "15:49"
		  Position		  [40, 798, 70, 812]
		  ZOrder		  47
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1Q_Out"
		  SID			  "15:53"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  51
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimitQ"
		  SID			  "15:44"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  42
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32PropGainQ"
		  SID			  "15:40"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32RampDown"
		  SID			  "15:47"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  45
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32RampUp"
		  SID			  "15:46"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  44
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32State"
		  SID			  "15:51"
		  Position		  [40, 878, 70, 892]
		  ZOrder		  49
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32State_Out"
		  SID			  "15:55"
		  Position		  [340, 518, 370, 532]
		  ZOrder		  53
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimitQ"
		  SID			  "15:45"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  43
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32WErr"
		  SID			  "15:57"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  55
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32WFbckFilt"
		  SID			  "15:58"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  56
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32WReqFilt"
		  SID			  "15:56"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  54
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShiftQ"
		  SID			  "15:43"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  41
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShiftQ"
		  SID			  "15:42"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  40
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NSamplesW"
		  SID			  "15:39"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Outport
		  Name			  "pIDQReq"
		  SID			  "15:24"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  26
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlagQ"
		  SID			  "15:25"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  27
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  9
		  DstBlock		  "f32State_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  8
		  DstBlock		  "f32InK_1Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  7
		  DstBlock		  "f32IntegPartK_1Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  6
		  DstBlock		  "f32AccW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  5
		  DstBlock		  "f32WFbckFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  4
		  DstBlock		  "f32WErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  3
		  DstBlock		  "f32WReqFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlagQ"
		  DstPort		  1
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  1
		  DstBlock		  "pIDQReq"
		  DstPort		  1
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f32State"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  18
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f32InK_1Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  17
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "f32IntegPartK_1Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  16
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "f32AccW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f32RampDown"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f32RampUp"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f32UpperLimitQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f32LowerLimitQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "s16IntegGainShiftQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "s16PropGainShiftQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "f32IntegGainQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  21
		  SrcBlock		  "f32PropGainQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  22
		  SrcBlock		  "u16NSamplesW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  23
		  SrcBlock		  "f32RampOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  24
		  SrcBlock		  "f32ControllerPIpAWQOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  25
		  SrcBlock		  "f32FilterMAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  26
		  SrcBlock		  "f32VelocityFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  27
		  SrcBlock		  "f32VelocityReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_TrackObsrv_F32"
	      SID		      "16"
	      Ports		      [3, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 1000, 255, 1100]
	      ZOrder		      13
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		199
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_TrackObsrv_F32"
		Description		"Tracking observer in 32-bit fixed-point fractional implementation. This block supports re-initializati"
		"on of the internal state during simulation. If the block is reset, the outputs of the PI controller and integrator w"
		"ill be aligned with the inputs f32VelocityOut_preset and f32PosOut_preset. Refer to the AMMCLIB User's Guide for fur"
		"ther details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32CC1sc'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32CC1sc'], 'Position');\n        orient = get_param( [gc"
		"b, '/f32CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/f32CC1sc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32CC2sc'],"
		" 'Position');\n        orient = get_param( [gcb, '/f32CC2sc'], 'Orientation');\n        delete_block(       [gcb, '/"
		"f32CC2sc']);\n        add_block('built-in/Ground', [gcb, '/f32CC2sc'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/f32UpperLimit'], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimit'"
		"], 'Orientation');\n        delete_block(       [gcb, '/f32UpperLimit']);\n        add_block('built-in/Ground', [gcb"
		", '/f32UpperLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32LowerLimit']"
		", 'Position');\n        orient = get_param( [gcb, '/f32LowerLimit'], 'Orientation');\n        delete_block(       [g"
		"cb, '/f32LowerLimit']);\n        add_block('built-in/Ground', [gcb, '/f32LowerLimit'], 'Position', pos, 'Orientation"
		"', orient);\n\n        pos = get_param(    [gcb, '/u16NShiftPI'], 'Position');\n        orient = get_param( [gcb, '/"
		"u16NShiftPI'], 'Orientation');\n        delete_block(       [gcb, '/u16NShiftPI']);\n        add_block('built-in/Gro"
		"und', [gcb, '/u16NShiftPI'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32C1']"
		", 'Position');\n        orient = get_param( [gcb, '/f32C1'], 'Orientation');\n        delete_block(       [gcb, '/f3"
		"2C1']);\n        add_block('built-in/Ground', [gcb, '/f32C1'], 'Position', pos, 'Orientation', orient);\n\n        p"
		"os = get_param(    [gcb, '/u16NShiftI'], 'Position');\n        orient = get_param( [gcb, '/u16NShiftI'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/u16NShiftI']);\n        add_block('built-in/Ground', [gcb, '/u16NShiftI'],"
		" 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/f32Acc'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc']);\n        add_bloc"
		"k('built-in/Ground', [gcb, '/f32Acc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb,"
		" '/f32InErrK1'], 'Position');\n        orient = get_param( [gcb, '/f32InErrK1'], 'Orientation');\n        delete_blo"
		"ck(       [gcb, '/f32InErrK1']);\n        add_block('built-in/Ground', [gcb, '/f32InErrK1'], 'Position', pos, 'Orien"
		"tation', orient);\n\n        pos = get_param(    [gcb, '/f32State'], 'Position');\n        orient = get_param( [gcb,"
		" '/f32State'], 'Orientation');\n        delete_block(       [gcb, '/f32State']);\n        add_block('built-in/Ground"
		"', [gcb, '/f32State'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32InK1'], 'P"
		"osition');\n        orient = get_param( [gcb, '/f32InK1'], 'Orientation');\n        delete_block(       [gcb, '/f32I"
		"nK1']);\n        add_block('built-in/Ground', [gcb, '/f32InK1'], 'Position', pos, 'Orientation', orient);\n\n\n     "
		"   pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n        orient = get_param( [gcb '/f32Acc_Out'], 'Orientat"
		"ion');\n        delete_block(       [gcb '/f32Acc_Out']);\n        add_block('built-in/Terminator', [gcb '/f32Acc_Ou"
		"t'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InErrK1_Out'], 'Position');\n"
		"        orient = get_param( [gcb '/f32InErrK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InErrK1_"
		"Out']);\n        add_block('built-in/Terminator', [gcb '/f32InErrK1_Out'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb '/f32State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out']"
		", 'Orientation');\n        delete_block(       [gcb '/f32State_Out']);\n        add_block('built-in/Terminator', [gc"
		"b '/f32State_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InK1_Out'], 'P"
		"osition');\n        orient = get_param( [gcb '/f32InK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f3"
		"2InK1_Out']);\n        add_block('built-in/Terminator', [gcb '/f32InK1_Out'], 'Position', pos, 'Orientation', orient"
		");\n\n\n        set_param([gcb '/f32PhaseErr'], 'Port', '1');\n        set_param([gcb '/f32VelocityOut_preset'], 'Po"
		"rt', '2');\n        set_param([gcb '/f32PosOut_preset'], 'Port', '3');\n\n        set_param([gcb '/pPosEst'], 'Port'"
		", '1');\n        set_param([gcb '/pVelocityEst'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','on','o"
		"n','on','on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 100\n          height = 100;\n          "
		"set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % sho"
		"wn state variables\n    if strcmp(get_param([gcb '/f32CC1sc'], 'BlockType'), 'Ground')\n        posblk = get_param(g"
		"cb, 'Position');\n\n        pos = get_param(    [gcb, '/f32CC1sc'], 'Position');\n        orient = get_param( [gcb, "
		"'/f32CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc']);\n        add_block('built-in/Inport'"
		", [gcb, '/f32CC1sc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param"
		"(    [gcb, '/f32CC2sc'], 'Position');\n        orient = get_param( [gcb, '/f32CC2sc'], 'Orientation');\n        dele"
		"te_block(       [gcb, '/f32CC2sc']);\n        add_block('built-in/Inport', [gcb, '/f32CC2sc'], 'Position', pos, 'Ori"
		"entation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32UpperLimit'], 'Position');\n"
		"        orient = get_param( [gcb, '/f32UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32UpperLi"
		"mit']);\n        add_block('built-in/Inport', [gcb, '/f32UpperLimit'], 'Position', pos, 'Orientation', orient, 'OutD"
		"ataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32LowerLimit'], 'Position');\n        orient = get_pa"
		"ram( [gcb, '/f32LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimit']);\n        add_bl"
		"ock('built-in/Inport', [gcb, '/f32LowerLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n"
		"\n        pos = get_param(    [gcb, '/u16NShiftPI'], 'Position');\n        orient = get_param( [gcb, '/u16NShiftPI']"
		", 'Orientation');\n        delete_block(       [gcb, '/u16NShiftPI']);\n        add_block('built-in/Inport', [gcb, '"
		"/u16NShiftPI'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n        pos = get_param(    "
		"[gcb, '/f32C1'], 'Position');\n        orient = get_param( [gcb, '/f32C1'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/f32C1']);\n        add_block('built-in/Inport', [gcb, '/f32C1'], 'Position', pos, 'Orientation', orient"
		", 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/u16NShiftI'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/u16NShiftI'], 'Orientation');\n        delete_block(       [gcb, '/u16NShiftI']);\n        add_bloc"
		"k('built-in/Inport', [gcb, '/u16NShiftI'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n "
		"       pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/f32Acc'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/f32Acc']);\n        add_block('built-in/Inport', [gcb, '/f32Acc'], 'Positi"
		"on', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32InErrK1'], 'P"
		"osition');\n        orient = get_param( [gcb, '/f32InErrK1'], 'Orientation');\n        delete_block(       [gcb, '/f"
		"32InErrK1']);\n        add_block('built-in/Inport', [gcb, '/f32InErrK1'], 'Position', pos, 'Orientation', orient, 'O"
		"utDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32State'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f32State'], 'Orientation');\n        delete_block(       [gcb, '/f32State']);\n        add_block('built-i"
		"n/Inport', [gcb, '/f32State'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = "
		"get_param(    [gcb, '/f32InK1'], 'Position');\n        orient = get_param( [gcb, '/f32InK1'], 'Orientation');\n     "
		"   delete_block(       [gcb, '/f32InK1']);\n        add_block('built-in/Inport', [gcb, '/f32InK1'], 'Position', pos,"
		" 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position'"
		");\n        orient = get_param( [gcb '/f32Acc_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out'"
		"]);\n        add_block('built-in/Outport', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        "
		"pos = get_param(    [gcb '/f32InErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/f32InErrK1_Out'], 'Ori"
		"entation');\n        delete_block(       [gcb '/f32InErrK1_Out']);\n        add_block('built-in/Outport', [gcb '/f32"
		"InErrK1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32State_Out'], 'Posit"
		"ion');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n        delete_block(       [gcb '/f32St"
		"ate_Out']);\n        add_block('built-in/Outport', [gcb '/f32State_Out'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb '/f32InK1_Out'], 'Position');\n        orient = get_param( [gcb '/f32InK1_Out'], "
		"'Orientation');\n        delete_block(       [gcb '/f32InK1_Out']);\n        add_block('built-in/Outport', [gcb '/f3"
		"2InK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32PhaseErr'], 'Port', '1');\n  "
		"      set_param([gcb '/f32VelocityOut_preset'], 'Port', '2');\n        set_param([gcb '/f32PosOut_preset'], 'Port', "
		"'3');\n        set_param([gcb '/f32CC1sc'], 'Port', '4');\n        set_param([gcb '/f32CC2sc'], 'Port', '5');\n     "
		"   set_param([gcb '/f32UpperLimit'], 'Port', '6');\n        set_param([gcb '/f32LowerLimit'], 'Port', '7');\n       "
		" set_param([gcb '/u16NShiftPI'], 'Port', '8');\n        set_param([gcb '/f32C1'], 'Port', '9');\n        set_param(["
		"gcb '/u16NShiftI'], 'Port', '10');\n        set_param([gcb '/f32Acc'], 'Port', '11');\n        set_param([gcb '/f32I"
		"nErrK1'], 'Port', '12');\n        set_param([gcb '/f32State'], 'Port', '13');\n        set_param([gcb '/f32InK1'], '"
		"Port', '14');\n\n        set_param([gcb '/pPosEst'], 'Port', '1');\n        set_param([gcb '/pVelocityEst'], 'Port',"
		" '2');\n        set_param([gcb '/f32Acc_Out'], 'Port', '3');\n        set_param([gcb '/f32InErrK1_Out'], 'Port', '4'"
		");\n        set_param([gcb '/f32State_Out'], 'Port', '5');\n        set_param([gcb '/f32InK1_Out'], 'Port', '6');\n\n"
		"        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off','off','off','off'});\n\n        if (posblk(4)"
		" - posblk(2)) < 375\n          height = 375;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), p"
		"osblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_TrackObsrv_F32', 'horizontalAlignment', 'center')"
		";\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance"
		")'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  9
		  Object {
		    $ObjectID		    200
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'"
		    "on','on','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    201
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    202
		    Type		    "edit"
		    Name		    "f32CC1sc"
		    Prompt		    "f32CC1sc (GFLIB_ControllerPIrAW - CC1 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    203
		    Type		    "edit"
		    Name		    "f32CC2sc"
		    Prompt		    "f32CC2sc (GFLIB_ControllerPIrAW - CC2 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    204
		    Type		    "edit"
		    Name		    "f32UpperLimit"
		    Prompt		    "f32UpperLimit (GFLIB_ControllerPIrAW - upper Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    205
		    Type		    "edit"
		    Name		    "f32LowerLimit"
		    Prompt		    "f32LowerLimit (GFLIB_ControllerPIrAW - lower Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    206
		    Type		    "edit"
		    Name		    "u16NShiftPI"
		    Prompt		    "u16NShiftPI (GFLIB_ControllerPIrAW - scaling bitwise shift applied to the controller coefficients)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    207
		    Type		    "edit"
		    Name		    "f32C1"
		    Prompt		    "f32C1 (GFLIB_IntegratorTR - integrator coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    208
		    Type		    "edit"
		    Name		    "u16NShiftI"
		    Prompt		    "u16NShiftI (GFLIB_IntegratorTR - scaling bitwise shift applied to the integrator coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_TrackObsrv_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"46"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32PhaseErr"
		  SID			  "16:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32VelocityOut_preset"
		  SID			  "16:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32PosOut_preset"
		  SID			  "16:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "16:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_TrackObsrv_SF"
		  SID			  "16:5"
		  Ports			  [14, 6]
		  Position		  [135, 175, 285, 240]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_TrackObsrv_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,f32CC1sc,f32CC2sc,f32UpperLimit,f32LowerLimit,u16NShiftPI,f32C1,u16NSh"
		  "iftI"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "16:26"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  28
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    209
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "16:29"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  29
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    210
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_TrackObsrv_BAM_F32.mdl');text(10,75,'Tracking observer');text(10,60,'NXP 2020')"
		    ";text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc"
		  SID			  "16:39"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Out"
		  SID			  "16:43"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  41
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32C1"
		  SID			  "16:37"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC1sc"
		  SID			  "16:32"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC2sc"
		  SID			  "16:33"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InErrK1"
		  SID			  "16:40"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InErrK1_Out"
		  SID			  "16:44"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  42
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InK1"
		  SID			  "16:42"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  40
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InK1_Out"
		  SID			  "16:46"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  44
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimit"
		  SID			  "16:35"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32State"
		  SID			  "16:41"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32State_Out"
		  SID			  "16:45"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  43
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimit"
		  SID			  "16:34"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShiftI"
		  SID			  "16:38"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  36
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShiftPI"
		  SID			  "16:36"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  34
		}
		Block {
		  BlockType		  Outport
		  Name			  "pPosEst"
		  SID			  "16:20"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  22
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pVelocityEst"
		  SID			  "16:21"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  23
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  6
		  DstBlock		  "f32InK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  5
		  DstBlock		  "f32State_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  4
		  DstBlock		  "f32InErrK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  3
		  DstBlock		  "f32Acc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  2
		  DstBlock		  "pVelocityEst"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  1
		  DstBlock		  "pPosEst"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f32InK1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32State"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f32InErrK1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f32Acc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "u16NShiftI"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "f32C1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "u16NShiftPI"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f32LowerLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f32UpperLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f32CC2sc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f32CC1sc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "f32PosOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "f32VelocityOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "f32PhaseErr"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_Windmilling_F32"
	      SID		      "17"
	      Ports		      [1, 3]
	      Position		      [20, 1122, 260, 1228]
	      ZOrder		      14
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		211
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_Windmilling_F32"
		Description		"PMSM Windmilling in 32-bit fixed-point fractional implementation. This function detects spontaneous ro"
		"tation of an unpowered 3-phase PMSM by measuring the generated back electromotive force. Output u32Lock represents t"
		"he return value of the C function (0 = undecided, 1 = spinning, 2 = stopped). Transition from 0 to 1 on the u32Lock "
		"output can be taken as a reset signal for the following AMCLIB_TrackObsrv_F32 block to synchronize the sensorless FO"
		"C loop with a freewheeling motor. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32ADCMaxError'], 'BlockType'), 'Inport')\n        posblk = ge"
		"t_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32ADCMaxError'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/f32ADCMaxError'], 'Orientation');\n        delete_block(       [gcb, '/f32ADCMaxError']);\n        "
		"add_block('built-in/Ground', [gcb, '/f32ADCMaxError'], 'Position', pos, 'Orientation', orient);\n\n        pos = get"
		"_param(    [gcb, '/f32CC1sc'], 'Position');\n        orient = get_param( [gcb, '/f32CC1sc'], 'Orientation');\n      "
		"  delete_block(       [gcb, '/f32CC1sc']);\n        add_block('built-in/Ground', [gcb, '/f32CC1sc'], 'Position', pos"
		", 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32CC2sc'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f32CC2sc'], 'Orientation');\n        delete_block(       [gcb, '/f32CC2sc']);\n        add_block('built-i"
		"n/Ground', [gcb, '/f32CC2sc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32Up"
		"perLimit'], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimit'], 'Orientation');\n        delete_block"
		"(       [gcb, '/f32UpperLimit']);\n        add_block('built-in/Ground', [gcb, '/f32UpperLimit'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb, '/f32LowerLimit'], 'Position');\n        orient = get_par"
		"am( [gcb, '/f32LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimit']);\n        add_blo"
		"ck('built-in/Ground', [gcb, '/f32LowerLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param( "
		"   [gcb, '/u16NShiftPI'], 'Position');\n        orient = get_param( [gcb, '/u16NShiftPI'], 'Orientation');\n        "
		"delete_block(       [gcb, '/u16NShiftPI']);\n        add_block('built-in/Ground', [gcb, '/u16NShiftPI'], 'Position',"
		" pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32C1'], 'Position');\n        orient = get_par"
		"am( [gcb, '/f32C1'], 'Orientation');\n        delete_block(       [gcb, '/f32C1']);\n        add_block('built-in/Gro"
		"und', [gcb, '/f32C1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/u16NShiftI'],"
		" 'Position');\n        orient = get_param( [gcb, '/u16NShiftI'], 'Orientation');\n        delete_block(       [gcb, "
		"'/u16NShiftI']);\n        add_block('built-in/Ground', [gcb, '/u16NShiftI'], 'Position', pos, 'Orientation', orient)"
		";\n\n        pos = get_param(    [gcb, '/f32AccPI'], 'Position');\n        orient = get_param( [gcb, '/f32AccPI'], '"
		"Orientation');\n        delete_block(       [gcb, '/f32AccPI']);\n        add_block('built-in/Ground', [gcb, '/f32Ac"
		"cPI'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32InErrK1'], 'Position');\n "
		"       orient = get_param( [gcb, '/f32InErrK1'], 'Orientation');\n        delete_block(       [gcb, '/f32InErrK1']);"
		"\n        add_block('built-in/Ground', [gcb, '/f32InErrK1'], 'Position', pos, 'Orientation', orient);\n\n        pos"
		" = get_param(    [gcb, '/f32State'], 'Position');\n        orient = get_param( [gcb, '/f32State'], 'Orientation');\n"
		"        delete_block(       [gcb, '/f32State']);\n        add_block('built-in/Ground', [gcb, '/f32State'], 'Position"
		"', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32InK1'], 'Position');\n        orient = get"
		"_param( [gcb, '/f32InK1'], 'Orientation');\n        delete_block(       [gcb, '/f32InK1']);\n        add_block('buil"
		"t-in/Ground', [gcb, '/f32InK1'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f3"
		"2AccPI_Out'], 'Position');\n        orient = get_param( [gcb '/f32AccPI_Out'], 'Orientation');\n        delete_block"
		"(       [gcb '/f32AccPI_Out']);\n        add_block('built-in/Terminator', [gcb '/f32AccPI_Out'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb '/f32InErrK1_Out'], 'Position');\n        orient = get_par"
		"am( [gcb '/f32InErrK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InErrK1_Out']);\n        add_blo"
		"ck('built-in/Terminator', [gcb '/f32InErrK1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_par"
		"am(    [gcb '/f32State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n    "
		"    delete_block(       [gcb '/f32State_Out']);\n        add_block('built-in/Terminator', [gcb '/f32State_Out'], 'Po"
		"sition', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InK1_Out'], 'Position');\n        ori"
		"ent = get_param( [gcb '/f32InK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InK1_Out']);\n        "
		"add_block('built-in/Terminator', [gcb '/f32InK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_par"
		"am([gcb '/pUabcIn'], 'Port', '1');\n\n        set_param([gcb '/u32Lock'], 'Port', '1');\n        set_param([gcb '/pP"
		"osEst'], 'Port', '2');\n        set_param([gcb '/pVelocityEst'], 'Port', '3');\n\n        set_param(gcb,'MaskEnables"
		"',{'on','on','on','on','on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 100\n          height = 1"
		"00;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\n"
		"else\n    % shown state variables\n    if strcmp(get_param([gcb '/f32ADCMaxError'], 'BlockType'), 'Ground')\n       "
		" posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32ADCMaxError'], 'Position');\n       "
		" orient = get_param( [gcb, '/f32ADCMaxError'], 'Orientation');\n        delete_block(       [gcb, '/f32ADCMaxError']"
		");\n        add_block('built-in/Inport', [gcb, '/f32ADCMaxError'], 'Position', pos, 'Orientation', orient, 'OutDataT"
		"ypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32CC1sc'], 'Position');\n        orient = get_param( [gcb"
		", '/f32CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc']);\n        add_block('built-in/Inpor"
		"t', [gcb, '/f32CC1sc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_par"
		"am(    [gcb, '/f32CC2sc'], 'Position');\n        orient = get_param( [gcb, '/f32CC2sc'], 'Orientation');\n        de"
		"lete_block(       [gcb, '/f32CC2sc']);\n        add_block('built-in/Inport', [gcb, '/f32CC2sc'], 'Position', pos, 'O"
		"rientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32UpperLimit'], 'Position')"
		";\n        orient = get_param( [gcb, '/f32UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32Uppe"
		"rLimit']);\n        add_block('built-in/Inport', [gcb, '/f32UpperLimit'], 'Position', pos, 'Orientation', orient, 'O"
		"utDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32LowerLimit'], 'Position');\n        orient = get"
		"_param( [gcb, '/f32LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimit']);\n        add"
		"_block('built-in/Inport', [gcb, '/f32LowerLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32'"
		");\n\n        pos = get_param(    [gcb, '/u16NShiftPI'], 'Position');\n        orient = get_param( [gcb, '/u16NShift"
		"PI'], 'Orientation');\n        delete_block(       [gcb, '/u16NShiftPI']);\n        add_block('built-in/Inport', [gc"
		"b, '/u16NShiftPI'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n        pos = get_param("
		"    [gcb, '/f32C1'], 'Position');\n        orient = get_param( [gcb, '/f32C1'], 'Orientation');\n        delete_bloc"
		"k(       [gcb, '/f32C1']);\n        add_block('built-in/Inport', [gcb, '/f32C1'], 'Position', pos, 'Orientation', or"
		"ient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/u16NShiftI'], 'Position');\n        orient "
		"= get_param( [gcb, '/u16NShiftI'], 'Orientation');\n        delete_block(       [gcb, '/u16NShiftI']);\n        add_"
		"block('built-in/Inport', [gcb, '/u16NShiftI'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n"
		"\n        pos = get_param(    [gcb, '/f32AccPI'], 'Position');\n        orient = get_param( [gcb, '/f32AccPI'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/f32AccPI']);\n        add_block('built-in/Inport', [gcb, '/f32AccPI"
		"'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32In"
		"ErrK1'], 'Position');\n        orient = get_param( [gcb, '/f32InErrK1'], 'Orientation');\n        delete_block(     "
		"  [gcb, '/f32InErrK1']);\n        add_block('built-in/Inport', [gcb, '/f32InErrK1'], 'Position', pos, 'Orientation',"
		" orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32State'], 'Position');\n        orient"
		" = get_param( [gcb, '/f32State'], 'Orientation');\n        delete_block(       [gcb, '/f32State']);\n        add_blo"
		"ck('built-in/Inport', [gcb, '/f32State'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n   "
		"     pos = get_param(    [gcb, '/f32InK1'], 'Position');\n        orient = get_param( [gcb, '/f32InK1'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/f32InK1']);\n        add_block('built-in/Inport', [gcb, '/f32InK1'], 'Posi"
		"tion', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n        pos = get_param(    [gcb '/f32AccPI_Out'"
		"], 'Position');\n        orient = get_param( [gcb '/f32AccPI_Out'], 'Orientation');\n        delete_block(       [gc"
		"b '/f32AccPI_Out']);\n        add_block('built-in/Outport', [gcb '/f32AccPI_Out'], 'Position', pos, 'Orientation', o"
		"rient);\n\n        pos = get_param(    [gcb '/f32InErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/f32"
		"InErrK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InErrK1_Out']);\n        add_block('built-in/O"
		"utport', [gcb '/f32InErrK1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32"
		"State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n        delete_block("
		"       [gcb '/f32State_Out']);\n        add_block('built-in/Outport', [gcb '/f32State_Out'], 'Position', pos, 'Orien"
		"tation', orient);\n\n        pos = get_param(    [gcb '/f32InK1_Out'], 'Position');\n        orient = get_param( [gc"
		"b '/f32InK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InK1_Out']);\n        add_block('built-in/"
		"Outport', [gcb '/f32InK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/pUabcIn'], 'P"
		"ort', '1');\n        set_param([gcb '/f32ADCMaxError'], 'Port', '2');\n        set_param([gcb '/f32CC1sc'], 'Port', "
		"'3');\n        set_param([gcb '/f32CC2sc'], 'Port', '4');\n        set_param([gcb '/f32UpperLimit'], 'Port', '5');\n"
		"        set_param([gcb '/f32LowerLimit'], 'Port', '6');\n        set_param([gcb '/u16NShiftPI'], 'Port', '7');\n    "
		"    set_param([gcb '/f32C1'], 'Port', '8');\n        set_param([gcb '/u16NShiftI'], 'Port', '9');\n        set_param"
		"([gcb '/f32AccPI'], 'Port', '10');\n        set_param([gcb '/f32InErrK1'], 'Port', '11');\n        set_param([gcb '/"
		"f32State'], 'Port', '12');\n        set_param([gcb '/f32InK1'], 'Port', '13');\n\n        set_param([gcb '/u32Lock']"
		", 'Port', '1');\n        set_param([gcb '/pPosEst'], 'Port', '2');\n        set_param([gcb '/pVelocityEst'], 'Port',"
		" '3');\n        set_param([gcb '/f32AccPI_Out'], 'Port', '4');\n        set_param([gcb '/f32InErrK1_Out'], 'Port', '"
		"5');\n        set_param([gcb '/f32State_Out'], 'Port', '6');\n        set_param([gcb '/f32InK1_Out'], 'Port', '7');\n"
		"\n        set_param(gcb,'MaskEnables',{'on','off','off','off','off','off','off','off','off'});\n\n        if (posblk"
		"(4) - posblk(2)) < 350\n          height = 350;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3)"
		", posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'AMCLIB_Windmilling_F32', 'horizontalAlignment', 'center')"
		";\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance"
		")'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  9
		  Object {
		    $ObjectID		    212
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'"
		    "on','off','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    213
		    Type		    "edit"
		    Name		    "f32ADCMaxError"
		    Prompt		    "f32ADCMaxError (Maximum differential offset error between any two phases of the 3-phase voltage-sen"
		    "sing A/D converters.)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    214
		    Type		    "edit"
		    Name		    "f32CC1sc"
		    Prompt		    "f32CC1sc (GFLIB_ControllerPIrAW - CC1 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    215
		    Type		    "edit"
		    Name		    "f32CC2sc"
		    Prompt		    "f32CC2sc (GFLIB_ControllerPIrAW - CC2 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    216
		    Type		    "edit"
		    Name		    "f32UpperLimit"
		    Prompt		    "f32UpperLimit (GFLIB_ControllerPIrAW - upper Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    217
		    Type		    "edit"
		    Name		    "f32LowerLimit"
		    Prompt		    "f32LowerLimit (GFLIB_ControllerPIrAW - lower Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    218
		    Type		    "edit"
		    Name		    "u16NShiftPI"
		    Prompt		    "u16NShiftPI (GFLIB_ControllerPIrAW - scaling bitwise shift applied to the controller coefficients)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    219
		    Type		    "edit"
		    Name		    "f32C1"
		    Prompt		    "f32C1 (GFLIB_IntegratorTR - integrator coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    220
		    Type		    "edit"
		    Name		    "u16NShiftI"
		    Prompt		    "u16NShiftI (GFLIB_IntegratorTR - scaling bitwise shift applied to the integrator coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_Windmilling_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"46"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pUabcIn"
		  SID			  "17:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_3Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_Windmilling_SF"
		  SID			  "17:4"
		  Ports			  [13, 7]
		  Position		  [135, 175, 285, 235]
		  ZOrder		  1
		  FunctionName		  "AMCLIB_Windmilling_SF_F32"
		  Parameters		  "showStates,f32ADCMaxError,f32CC1sc,f32CC2sc,f32UpperLimit,f32LowerLimit,u16NShiftPI,f32C1,u16NShiftI"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "17:25"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  22
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    221
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "17:28"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  23
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    222
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_Windmilling_BAM_F32.mdl');text(10,75,'PMSM Windmilling');text(10,60,'NXP 2020')"
		    ";text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32ADCMaxError"
		  SID			  "17:31"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32AccPI"
		  SID			  "17:39"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32AccPI_Out"
		  SID			  "17:43"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  36
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32C1"
		  SID			  "17:37"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC1sc"
		  SID			  "17:32"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC2sc"
		  SID			  "17:33"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InErrK1"
		  SID			  "17:40"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InErrK1_Out"
		  SID			  "17:44"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InK1"
		  SID			  "17:42"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InK1_Out"
		  SID			  "17:46"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimit"
		  SID			  "17:35"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32State"
		  SID			  "17:41"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  34
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32State_Out"
		  SID			  "17:45"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimit"
		  SID			  "17:34"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShiftI"
		  SID			  "17:38"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShiftPI"
		  SID			  "17:36"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Outport
		  Name			  "u32Lock"
		  SID			  "17:18"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  15
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pPosEst"
		  SID			  "17:19"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  16
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pVelocityEst"
		  SID			  "17:20"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  17
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  7
		  DstBlock		  "f32InK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  6
		  DstBlock		  "f32State_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  5
		  DstBlock		  "f32InErrK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  4
		  DstBlock		  "f32AccPI_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  3
		  DstBlock		  "pVelocityEst"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  2
		  DstBlock		  "pPosEst"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  1
		  DstBlock		  "u32Lock"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32InK1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f32State"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f32InErrK1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f32AccPI"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "u16NShiftI"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "f32C1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "u16NShiftPI"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f32LowerLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f32UpperLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f32CC2sc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "f32CC1sc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "f32ADCMaxError"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "pUabcIn"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "FLT"
	  SID			  "18"
	  Ports			  []
	  Position		  [240, 0, 340, 100]
	  ZOrder		  3
	  RequestExecContextInheritance	off
	  System {
	    Name		    "FLT"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_BemfObsrvDQ_FLT"
	      SID		      "19"
	      Ports		      [4, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 2, 260, 128]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		223
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_BemfObsrvDQ_FLT"
		Description		"PMSM back-EMF observer DQ in single precision floating-point implementation. This block supports re-in"
		"itialization of the internal state during simulation. If the block is reset, the observer will align with the motor'"
		"s position and speed measured in the next time step. This allows seamless on-the-fly transition to the closed-loop c"
		"ontrol. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltIGain'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltIGain'], 'Position');\n        orient = get_param( [gc"
		"b, '/fltIGain'], 'Orientation');\n        delete_block(       [gcb, '/fltIGain']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/fltIGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltUGain'],"
		" 'Position');\n        orient = get_param( [gcb, '/fltUGain'], 'Orientation');\n        delete_block(       [gcb, '/"
		"fltUGain']);\n        add_block('built-in/Ground', [gcb, '/fltUGain'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/fltWIGain'], 'Position');\n        orient = get_param( [gcb, '/fltWIGain'], 'Orie"
		"ntation');\n        delete_block(       [gcb, '/fltWIGain']);\n        add_block('built-in/Ground', [gcb, '/fltWIGai"
		"n'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltEGain'], 'Position');\n     "
		"   orient = get_param( [gcb, '/fltEGain'], 'Orientation');\n        delete_block(       [gcb, '/fltEGain']);\n      "
		"  add_block('built-in/Ground', [gcb, '/fltEGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_par"
		"am(    [gcb, '/fltCC1sc_D'], 'Position');\n        orient = get_param( [gcb, '/fltCC1sc_D'], 'Orientation');\n      "
		"  delete_block(       [gcb, '/fltCC1sc_D']);\n        add_block('built-in/Ground', [gcb, '/fltCC1sc_D'], 'Position',"
		" pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltCC2sc_D'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/fltCC2sc_D'], 'Orientation');\n        delete_block(       [gcb, '/fltCC2sc_D']);\n        add_bloc"
		"k('built-in/Ground', [gcb, '/fltCC2sc_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    ["
		"gcb, '/fltUpperLimit_D'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimit_D'], 'Orientation');\n    "
		"    delete_block(       [gcb, '/fltUpperLimit_D']);\n        add_block('built-in/Ground', [gcb, '/fltUpperLimit_D'],"
		" 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltLowerLimit_D'], 'Position');\n  "
		"      orient = get_param( [gcb, '/fltLowerLimit_D'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLi"
		"mit_D']);\n        add_block('built-in/Ground', [gcb, '/fltLowerLimit_D'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb, '/fltCC1sc_Q'], 'Position');\n        orient = get_param( [gcb, '/fltCC1sc_Q'], "
		"'Orientation');\n        delete_block(       [gcb, '/fltCC1sc_Q']);\n        add_block('built-in/Ground', [gcb, '/fl"
		"tCC1sc_Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltCC2sc_Q'], 'Position'"
		");\n        orient = get_param( [gcb, '/fltCC2sc_Q'], 'Orientation');\n        delete_block(       [gcb, '/fltCC2sc_"
		"Q']);\n        add_block('built-in/Ground', [gcb, '/fltCC2sc_Q'], 'Position', pos, 'Orientation', orient);\n\n      "
		"  pos = get_param(    [gcb, '/fltUpperLimit_Q'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimit_Q']"
		", 'Orientation');\n        delete_block(       [gcb, '/fltUpperLimit_Q']);\n        add_block('built-in/Ground', [gc"
		"b, '/fltUpperLimit_Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltLowerLimi"
		"t_Q'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLimit_Q'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/fltLowerLimit_Q']);\n        add_block('built-in/Ground', [gcb, '/fltLowerLimit_Q'], 'Position', pos, '"
		"Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltAcc_D'], 'Position');\n        orient = get_param( "
		"[gcb, '/fltAcc_D'], 'Orientation');\n        delete_block(       [gcb, '/fltAcc_D']);\n        add_block('built-in/G"
		"round', [gcb, '/fltAcc_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltInErr"
		"K1_D'], 'Position');\n        orient = get_param( [gcb, '/fltInErrK1_D'], 'Orientation');\n        delete_block(    "
		"   [gcb, '/fltInErrK1_D']);\n        add_block('built-in/Ground', [gcb, '/fltInErrK1_D'], 'Position', pos, 'Orientat"
		"ion', orient);\n\n        pos = get_param(    [gcb, '/fltAcc_Q'], 'Position');\n        orient = get_param( [gcb, '/"
		"fltAcc_Q'], 'Orientation');\n        delete_block(       [gcb, '/fltAcc_Q']);\n        add_block('built-in/Ground', "
		"[gcb, '/fltAcc_Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltInErrK1_Q'], "
		"'Position');\n        orient = get_param( [gcb, '/fltInErrK1_Q'], 'Orientation');\n        delete_block(       [gcb,"
		" '/fltInErrK1_Q']);\n        add_block('built-in/Ground', [gcb, '/fltInErrK1_Q'], 'Position', pos, 'Orientation', or"
		"ient);\n\n        pos = get_param(    [gcb, '/fltIObsrvIn_1_D'], 'Position');\n        orient = get_param( [gcb, '/f"
		"ltIObsrvIn_1_D'], 'Orientation');\n        delete_block(       [gcb, '/fltIObsrvIn_1_D']);\n        add_block('built"
		"-in/Ground', [gcb, '/fltIObsrvIn_1_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/fltIObsrvIn_1_Q'], 'Position');\n        orient = get_param( [gcb, '/fltIObsrvIn_1_Q'], 'Orientation');\n       "
		" delete_block(       [gcb, '/fltIObsrvIn_1_Q']);\n        add_block('built-in/Ground', [gcb, '/fltIObsrvIn_1_Q'], 'P"
		"osition', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltIObsrv_D'], 'Position');\n        o"
		"rient = get_param( [gcb, '/fltIObsrv_D'], 'Orientation');\n        delete_block(       [gcb, '/fltIObsrv_D']);\n    "
		"    add_block('built-in/Ground', [gcb, '/fltIObsrv_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = ge"
		"t_param(    [gcb, '/fltIObsrv_Q'], 'Position');\n        orient = get_param( [gcb, '/fltIObsrv_Q'], 'Orientation');\n"
		"        delete_block(       [gcb, '/fltIObsrv_Q']);\n        add_block('built-in/Ground', [gcb, '/fltIObsrv_Q'], 'Po"
		"sition', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/fltEObsrv_D_Out'], 'Position');\n     "
		"   orient = get_param( [gcb '/fltEObsrv_D_Out'], 'Orientation');\n        delete_block(       [gcb '/fltEObsrv_D_Out"
		"']);\n        add_block('built-in/Terminator', [gcb '/fltEObsrv_D_Out'], 'Position', pos, 'Orientation', orient);\n\n"
		"        pos = get_param(    [gcb '/fltEObsrv_Q_Out'], 'Position');\n        orient = get_param( [gcb '/fltEObsrv_Q_O"
		"ut'], 'Orientation');\n        delete_block(       [gcb '/fltEObsrv_Q_Out']);\n        add_block('built-in/Terminato"
		"r', [gcb '/fltEObsrv_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltAcc_"
		"D_Out'], 'Position');\n        orient = get_param( [gcb '/fltAcc_D_Out'], 'Orientation');\n        delete_block(    "
		"   [gcb '/fltAcc_D_Out']);\n        add_block('built-in/Terminator', [gcb '/fltAcc_D_Out'], 'Position', pos, 'Orient"
		"ation', orient);\n\n        pos = get_param(    [gcb '/fltInErrK1_D_Out'], 'Position');\n        orient = get_param("
		" [gcb '/fltInErrK1_D_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInErrK1_D_Out']);\n        add_bl"
		"ock('built-in/Terminator', [gcb '/fltInErrK1_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_"
		"param(    [gcb '/fltAcc_Q_Out'], 'Position');\n        orient = get_param( [gcb '/fltAcc_Q_Out'], 'Orientation');\n "
		"       delete_block(       [gcb '/fltAcc_Q_Out']);\n        add_block('built-in/Terminator', [gcb '/fltAcc_Q_Out'], "
		"'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInErrK1_Q_Out'], 'Position');\n   "
		"     orient = get_param( [gcb '/fltInErrK1_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInErrK1_Q"
		"_Out']);\n        add_block('built-in/Terminator', [gcb '/fltInErrK1_Q_Out'], 'Position', pos, 'Orientation', orient"
		");\n\n        pos = get_param(    [gcb '/fltIObsrvIn_1_D_Out'], 'Position');\n        orient = get_param( [gcb '/flt"
		"IObsrvIn_1_D_Out'], 'Orientation');\n        delete_block(       [gcb '/fltIObsrvIn_1_D_Out']);\n        add_block('"
		"built-in/Terminator', [gcb '/fltIObsrvIn_1_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_pa"
		"ram(    [gcb '/fltIObsrvIn_1_Q_Out'], 'Position');\n        orient = get_param( [gcb '/fltIObsrvIn_1_Q_Out'], 'Orien"
		"tation');\n        delete_block(       [gcb '/fltIObsrvIn_1_Q_Out']);\n        add_block('built-in/Terminator', [gcb"
		" '/fltIObsrvIn_1_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltIObsrv_D"
		"_Out'], 'Position');\n        orient = get_param( [gcb '/fltIObsrv_D_Out'], 'Orientation');\n        delete_block(  "
		"     [gcb '/fltIObsrv_D_Out']);\n        add_block('built-in/Terminator', [gcb '/fltIObsrv_D_Out'], 'Position', pos,"
		" 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltIObsrv_Q_Out'], 'Position');\n        orient = get"
		"_param( [gcb '/fltIObsrv_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/fltIObsrv_Q_Out']);\n        a"
		"dd_block('built-in/Terminator', [gcb '/fltIObsrv_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_"
		"param([gcb '/pIAB'], 'Port', '1');\n        set_param([gcb '/pUAB'], 'Port', '2');\n        set_param([gcb '/fltVelo"
		"city'], 'Port', '3');\n        set_param([gcb '/fltPhase'], 'Port', '4');\n\n        set_param([gcb '/fltPhaseErr'],"
		" 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on','on','on','on','on','"
		"on','on'});\n\n        if (posblk(4) - posblk(2)) > 125\n          height = 125;\n          set_param(gcb,'Position'"
		",[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    "
		"if strcmp(get_param([gcb '/fltIGain'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n    "
		"    pos = get_param(    [gcb, '/fltIGain'], 'Position');\n        orient = get_param( [gcb, '/fltIGain'], 'Orientati"
		"on');\n        delete_block(       [gcb, '/fltIGain']);\n        add_block('built-in/Inport', [gcb, '/fltIGain'], 'P"
		"osition', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltUGain']"
		", 'Position');\n        orient = get_param( [gcb, '/fltUGain'], 'Orientation');\n        delete_block(       [gcb, '"
		"/fltUGain']);\n        add_block('built-in/Inport', [gcb, '/fltUGain'], 'Position', pos, 'Orientation', orient, 'Out"
		"DataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltWIGain'], 'Position');\n        orient = get_para"
		"m( [gcb, '/fltWIGain'], 'Orientation');\n        delete_block(       [gcb, '/fltWIGain']);\n        add_block('built"
		"-in/Inport', [gcb, '/fltWIGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        po"
		"s = get_param(    [gcb, '/fltEGain'], 'Position');\n        orient = get_param( [gcb, '/fltEGain'], 'Orientation');\n"
		"        delete_block(       [gcb, '/fltEGain']);\n        add_block('built-in/Inport', [gcb, '/fltEGain'], 'Position"
		"', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltCC1sc_D'], 'Po"
		"sition');\n        orient = get_param( [gcb, '/fltCC1sc_D'], 'Orientation');\n        delete_block(       [gcb, '/fl"
		"tCC1sc_D']);\n        add_block('built-in/Inport', [gcb, '/fltCC1sc_D'], 'Position', pos, 'Orientation', orient, 'Ou"
		"tDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltCC2sc_D'], 'Position');\n        orient = get_pa"
		"ram( [gcb, '/fltCC2sc_D'], 'Orientation');\n        delete_block(       [gcb, '/fltCC2sc_D']);\n        add_block('b"
		"uilt-in/Inport', [gcb, '/fltCC2sc_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n     "
		"   pos = get_param(    [gcb, '/fltUpperLimit_D'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimit_D'"
		"], 'Orientation');\n        delete_block(       [gcb, '/fltUpperLimit_D']);\n        add_block('built-in/Inport', [g"
		"cb, '/fltUpperLimit_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_p"
		"aram(    [gcb, '/fltLowerLimit_D'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLimit_D'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/fltLowerLimit_D']);\n        add_block('built-in/Inport', [gcb, '/fltLower"
		"Limit_D'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb,"
		" '/fltCC1sc_Q'], 'Position');\n        orient = get_param( [gcb, '/fltCC1sc_Q'], 'Orientation');\n        delete_blo"
		"ck(       [gcb, '/fltCC1sc_Q']);\n        add_block('built-in/Inport', [gcb, '/fltCC1sc_Q'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltCC2sc_Q'], 'Position');\n   "
		"     orient = get_param( [gcb, '/fltCC2sc_Q'], 'Orientation');\n        delete_block(       [gcb, '/fltCC2sc_Q']);\n"
		"        add_block('built-in/Inport', [gcb, '/fltCC2sc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr',"
		" 'single');\n\n        pos = get_param(    [gcb, '/fltUpperLimit_Q'], 'Position');\n        orient = get_param( [gcb"
		", '/fltUpperLimit_Q'], 'Orientation');\n        delete_block(       [gcb, '/fltUpperLimit_Q']);\n        add_block('"
		"built-in/Inport', [gcb, '/fltUpperLimit_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n"
		"        pos = get_param(    [gcb, '/fltLowerLimit_Q'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLim"
		"it_Q'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLimit_Q']);\n        add_block('built-in/Inport"
		"', [gcb, '/fltLowerLimit_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = "
		"get_param(    [gcb, '/fltAcc_D'], 'Position');\n        orient = get_param( [gcb, '/fltAcc_D'], 'Orientation');\n   "
		"     delete_block(       [gcb, '/fltAcc_D']);\n        add_block('built-in/Inport', [gcb, '/fltAcc_D'], 'Position', "
		"pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltInErrK1_D'], 'Pos"
		"ition');\n        orient = get_param( [gcb, '/fltInErrK1_D'], 'Orientation');\n        delete_block(       [gcb, '/f"
		"ltInErrK1_D']);\n        add_block('built-in/Inport', [gcb, '/fltInErrK1_D'], 'Position', pos, 'Orientation', orient"
		", 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltAcc_Q'], 'Position');\n        orient = get"
		"_param( [gcb, '/fltAcc_Q'], 'Orientation');\n        delete_block(       [gcb, '/fltAcc_Q']);\n        add_block('bu"
		"ilt-in/Inport', [gcb, '/fltAcc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        "
		"pos = get_param(    [gcb, '/fltInErrK1_Q'], 'Position');\n        orient = get_param( [gcb, '/fltInErrK1_Q'], 'Orien"
		"tation');\n        delete_block(       [gcb, '/fltInErrK1_Q']);\n        add_block('built-in/Inport', [gcb, '/fltInE"
		"rrK1_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, "
		"'/fltIObsrvIn_1_D'], 'Position');\n        orient = get_param( [gcb, '/fltIObsrvIn_1_D'], 'Orientation');\n        d"
		"elete_block(       [gcb, '/fltIObsrvIn_1_D']);\n        add_block('built-in/Inport', [gcb, '/fltIObsrvIn_1_D'], 'Pos"
		"ition', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltIObsrvIn_"
		"1_Q'], 'Position');\n        orient = get_param( [gcb, '/fltIObsrvIn_1_Q'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/fltIObsrvIn_1_Q']);\n        add_block('built-in/Inport', [gcb, '/fltIObsrvIn_1_Q'], 'Position', pos, '"
		"Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltIObsrv_D'], 'Position')"
		";\n        orient = get_param( [gcb, '/fltIObsrv_D'], 'Orientation');\n        delete_block(       [gcb, '/fltIObsrv"
		"_D']);\n        add_block('built-in/Inport', [gcb, '/fltIObsrv_D'], 'Position', pos, 'Orientation', orient, 'OutData"
		"TypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltIObsrv_Q'], 'Position');\n        orient = get_param("
		" [gcb, '/fltIObsrv_Q'], 'Orientation');\n        delete_block(       [gcb, '/fltIObsrv_Q']);\n        add_block('bui"
		"lt-in/Inport', [gcb, '/fltIObsrv_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n    "
		"    pos = get_param(    [gcb '/fltEObsrv_D_Out'], 'Position');\n        orient = get_param( [gcb '/fltEObsrv_D_Out']"
		", 'Orientation');\n        delete_block(       [gcb '/fltEObsrv_D_Out']);\n        add_block('built-in/Outport', [gc"
		"b '/fltEObsrv_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltEObsrv_Q_Ou"
		"t'], 'Position');\n        orient = get_param( [gcb '/fltEObsrv_Q_Out'], 'Orientation');\n        delete_block(     "
		"  [gcb '/fltEObsrv_Q_Out']);\n        add_block('built-in/Outport', [gcb '/fltEObsrv_Q_Out'], 'Position', pos, 'Orie"
		"ntation', orient);\n\n        pos = get_param(    [gcb '/fltAcc_D_Out'], 'Position');\n        orient = get_param( ["
		"gcb '/fltAcc_D_Out'], 'Orientation');\n        delete_block(       [gcb '/fltAcc_D_Out']);\n        add_block('built"
		"-in/Outport', [gcb '/fltAcc_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/"
		"fltInErrK1_D_Out'], 'Position');\n        orient = get_param( [gcb '/fltInErrK1_D_Out'], 'Orientation');\n        de"
		"lete_block(       [gcb '/fltInErrK1_D_Out']);\n        add_block('built-in/Outport', [gcb '/fltInErrK1_D_Out'], 'Pos"
		"ition', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltAcc_Q_Out'], 'Position');\n        ori"
		"ent = get_param( [gcb '/fltAcc_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/fltAcc_Q_Out']);\n      "
		"  add_block('built-in/Outport', [gcb '/fltAcc_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get"
		"_param(    [gcb '/fltInErrK1_Q_Out'], 'Position');\n        orient = get_param( [gcb '/fltInErrK1_Q_Out'], 'Orientat"
		"ion');\n        delete_block(       [gcb '/fltInErrK1_Q_Out']);\n        add_block('built-in/Outport', [gcb '/fltInE"
		"rrK1_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltIObsrvIn_1_D_Out'], "
		"'Position');\n        orient = get_param( [gcb '/fltIObsrvIn_1_D_Out'], 'Orientation');\n        delete_block(      "
		" [gcb '/fltIObsrvIn_1_D_Out']);\n        add_block('built-in/Outport', [gcb '/fltIObsrvIn_1_D_Out'], 'Position', pos"
		", 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltIObsrvIn_1_Q_Out'], 'Position');\n        orient "
		"= get_param( [gcb '/fltIObsrvIn_1_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/fltIObsrvIn_1_Q_Out']"
		");\n        add_block('built-in/Outport', [gcb '/fltIObsrvIn_1_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n"
		"        pos = get_param(    [gcb '/fltIObsrv_D_Out'], 'Position');\n        orient = get_param( [gcb '/fltIObsrv_D_O"
		"ut'], 'Orientation');\n        delete_block(       [gcb '/fltIObsrv_D_Out']);\n        add_block('built-in/Outport',"
		" [gcb '/fltIObsrv_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltIObsrv_"
		"Q_Out'], 'Position');\n        orient = get_param( [gcb '/fltIObsrv_Q_Out'], 'Orientation');\n        delete_block( "
		"      [gcb '/fltIObsrv_Q_Out']);\n        add_block('built-in/Outport', [gcb '/fltIObsrv_Q_Out'], 'Position', pos, '"
		"Orientation', orient);\n\n\n        set_param([gcb '/pIAB'], 'Port', '1');\n        set_param([gcb '/pUAB'], 'Port',"
		" '2');\n        set_param([gcb '/fltVelocity'], 'Port', '3');\n        set_param([gcb '/fltPhase'], 'Port', '4');\n "
		"       set_param([gcb '/fltIGain'], 'Port', '5');\n        set_param([gcb '/fltUGain'], 'Port', '6');\n        set_p"
		"aram([gcb '/fltWIGain'], 'Port', '7');\n        set_param([gcb '/fltEGain'], 'Port', '8');\n        set_param([gcb '"
		"/fltCC1sc_D'], 'Port', '9');\n        set_param([gcb '/fltCC2sc_D'], 'Port', '10');\n        set_param([gcb '/fltUpp"
		"erLimit_D'], 'Port', '11');\n        set_param([gcb '/fltLowerLimit_D'], 'Port', '12');\n        set_param([gcb '/fl"
		"tCC1sc_Q'], 'Port', '13');\n        set_param([gcb '/fltCC2sc_Q'], 'Port', '14');\n        set_param([gcb '/fltUpper"
		"Limit_Q'], 'Port', '15');\n        set_param([gcb '/fltLowerLimit_Q'], 'Port', '16');\n        set_param([gcb '/fltA"
		"cc_D'], 'Port', '17');\n        set_param([gcb '/fltInErrK1_D'], 'Port', '18');\n        set_param([gcb '/fltAcc_Q']"
		", 'Port', '19');\n        set_param([gcb '/fltInErrK1_Q'], 'Port', '20');\n        set_param([gcb '/fltIObsrvIn_1_D'"
		"], 'Port', '21');\n        set_param([gcb '/fltIObsrvIn_1_Q'], 'Port', '22');\n        set_param([gcb '/fltIObsrv_D'"
		"], 'Port', '23');\n        set_param([gcb '/fltIObsrv_Q'], 'Port', '24');\n\n        set_param([gcb '/fltPhaseErr'],"
		" 'Port', '1');\n        set_param([gcb '/fltEObsrv_D_Out'], 'Port', '2');\n        set_param([gcb '/fltEObsrv_Q_Out'"
		"], 'Port', '3');\n        set_param([gcb '/fltAcc_D_Out'], 'Port', '4');\n        set_param([gcb '/fltInErrK1_D_Out'"
		"], 'Port', '5');\n        set_param([gcb '/fltAcc_Q_Out'], 'Port', '6');\n        set_param([gcb '/fltInErrK1_Q_Out'"
		"], 'Port', '7');\n        set_param([gcb '/fltIObsrvIn_1_D_Out'], 'Port', '8');\n        set_param([gcb '/fltIObsrvI"
		"n_1_Q_Out'], 'Port', '9');\n        set_param([gcb '/fltIObsrv_D_Out'], 'Port', '10');\n        set_param([gcb '/flt"
		"IObsrv_Q_Out'], 'Port', '11');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off','off','off'"
		",'off','off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 625\n          height = 625;\n      "
		"    set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_BemfObsrvDQ_FLT', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  14
		  Object {
		    $ObjectID		    224
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on','on','on','on','on','on','on'});\nelse\n    set_p"
		    "aram(gcb,'MaskEnables',{'on','on','off','off','off','off','off','off','off','off','off','off','off','off'});\nen"
		    "d"
		  }
		  Object {
		    $ObjectID		    225
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    226
		    Type		    "edit"
		    Name		    "fltIGain"
		    Prompt		    "fltIGain (RL circuit constant)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    227
		    Type		    "edit"
		    Name		    "fltUGain"
		    Prompt		    "fltUGain (Voltage cross-coupling constant)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    228
		    Type		    "edit"
		    Name		    "fltWIGain"
		    Prompt		    "fltWIGain (Angular velocity cross-coupling constant)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    229
		    Type		    "edit"
		    Name		    "fltEGain"
		    Prompt		    "fltEGain (Back-EMF cross-coupling constant)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    230
		    Type		    "edit"
		    Name		    "fltCC1sc_D"
		    Prompt		    "fltCC1sc_D (CC1 coefficient of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    231
		    Type		    "edit"
		    Name		    "fltCC2sc_D"
		    Prompt		    "fltCC2sc_D (CC2 coefficient of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    232
		    Type		    "edit"
		    Name		    "fltUpperLimit_D"
		    Prompt		    "fltUpperLimit_D (Upper Limit of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    233
		    Type		    "edit"
		    Name		    "fltLowerLimit_D"
		    Prompt		    "fltLowerLimit_D (Lower Limit of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    234
		    Type		    "edit"
		    Name		    "fltCC1sc_Q"
		    Prompt		    "fltCC1sc_Q (CC1 coefficient of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    235
		    Type		    "edit"
		    Name		    "fltCC2sc_Q"
		    Prompt		    "fltCC2sc_Q (CC2 coefficient of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    236
		    Type		    "edit"
		    Name		    "fltUpperLimit_Q"
		    Prompt		    "fltUpperLimit_Q (Upper Limit of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    237
		    Type		    "edit"
		    Name		    "fltLowerLimit_Q"
		    Prompt		    "fltLowerLimit_Q (Lower Limit of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_BemfObsrvDQ_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"76"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIAB"
		  SID			  "19:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pUAB"
		  SID			  "19:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltVelocity"
		  SID			  "19:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltPhase"
		  SID			  "19:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "19:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_BemfObsrvDQ_SF"
		  SID			  "19:5"
		  Ports			  [24, 11]
		  Position		  [135, 150, 285, 265]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_BemfObsrvDQ_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,fltIGain,fltUGain,fltWIGain,fltEGain,fltCC1sc_D,fltCC2sc_D,fltUpperLim"
		  "it_D,fltLowerLimit_D,fltCC1sc_Q,fltCC2sc_Q,fltUpperLimit_Q,fltLowerLimit_Q"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "19:41"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  43
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    238
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "19:44"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  44
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    239
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_BemfObsrvDQ_BAM_FLT.mdl');text(10,75,'PMSM back-EMF observer DQ.');text(10,60,'"
		    "NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAcc_D"
		  SID			  "19:59"
		  Position		  [40, 838, 70, 852]
		  ZOrder		  57
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAcc_D_Out"
		  SID			  "19:69"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  67
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAcc_Q"
		  SID			  "19:61"
		  Position		  [40, 918, 70, 932]
		  ZOrder		  59
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAcc_Q_Out"
		  SID			  "19:71"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  69
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC1sc_D"
		  SID			  "19:51"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  49
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC1sc_Q"
		  SID			  "19:55"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  53
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC2sc_D"
		  SID			  "19:52"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  50
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC2sc_Q"
		  SID			  "19:56"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  54
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltEGain"
		  SID			  "19:50"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  48
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltEObsrv_D_Out"
		  SID			  "19:67"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  65
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltEObsrv_Q_Out"
		  SID			  "19:68"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  66
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIGain"
		  SID			  "19:47"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  45
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIObsrvIn_1_D"
		  SID			  "19:63"
		  Position		  [40, 998, 70, 1012]
		  ZOrder		  61
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIObsrvIn_1_D_Out"
		  SID			  "19:73"
		  Position		  [340, 478, 370, 492]
		  ZOrder		  71
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIObsrvIn_1_Q"
		  SID			  "19:64"
		  Position		  [40, 1038, 70, 1052]
		  ZOrder		  62
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIObsrvIn_1_Q_Out"
		  SID			  "19:74"
		  Position		  [340, 518, 370, 532]
		  ZOrder		  72
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIObsrv_D"
		  SID			  "19:65"
		  Position		  [40, 1078, 70, 1092]
		  ZOrder		  63
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIObsrv_D_Out"
		  SID			  "19:75"
		  Position		  [340, 558, 370, 572]
		  ZOrder		  73
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIObsrv_Q"
		  SID			  "19:66"
		  Position		  [40, 1118, 70, 1132]
		  ZOrder		  64
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIObsrv_Q_Out"
		  SID			  "19:76"
		  Position		  [340, 598, 370, 612]
		  ZOrder		  74
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInErrK1_D"
		  SID			  "19:60"
		  Position		  [40, 878, 70, 892]
		  ZOrder		  58
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInErrK1_D_Out"
		  SID			  "19:70"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  68
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInErrK1_Q"
		  SID			  "19:62"
		  Position		  [40, 958, 70, 972]
		  ZOrder		  60
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInErrK1_Q_Out"
		  SID			  "19:72"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  70
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimit_D"
		  SID			  "19:54"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  52
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimit_Q"
		  SID			  "19:58"
		  Position		  [40, 798, 70, 812]
		  ZOrder		  56
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUGain"
		  SID			  "19:48"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  46
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimit_D"
		  SID			  "19:53"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  51
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimit_Q"
		  SID			  "19:57"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  55
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltWIGain"
		  SID			  "19:49"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  47
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltPhaseErr"
		  SID			  "19:30"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  32
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  11
		  DstBlock		  "fltIObsrv_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  10
		  DstBlock		  "fltIObsrv_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  9
		  DstBlock		  "fltIObsrvIn_1_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  8
		  DstBlock		  "fltIObsrvIn_1_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  7
		  DstBlock		  "fltInErrK1_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  6
		  DstBlock		  "fltAcc_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  5
		  DstBlock		  "fltInErrK1_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  4
		  DstBlock		  "fltAcc_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  3
		  DstBlock		  "fltEObsrv_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  2
		  DstBlock		  "fltEObsrv_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  SrcPort		  1
		  DstBlock		  "fltPhaseErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "fltIObsrv_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  24
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "fltIObsrv_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  23
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "fltIObsrvIn_1_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  22
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "fltIObsrvIn_1_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  21
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "fltInErrK1_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  20
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "fltAcc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  19
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "fltInErrK1_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  18
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "fltAcc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  17
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "fltLowerLimit_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  16
		}
		Line {
		  ZOrder		  21
		  SrcBlock		  "fltUpperLimit_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  22
		  SrcBlock		  "fltCC2sc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  23
		  SrcBlock		  "fltCC1sc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  24
		  SrcBlock		  "fltLowerLimit_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  25
		  SrcBlock		  "fltUpperLimit_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  26
		  SrcBlock		  "fltCC2sc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  27
		  SrcBlock		  "fltCC1sc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  28
		  SrcBlock		  "fltEGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  29
		  SrcBlock		  "fltWIGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  30
		  SrcBlock		  "fltUGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  31
		  SrcBlock		  "fltIGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  32
		  SrcBlock		  "fltPhase"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  33
		  SrcBlock		  "fltVelocity"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  34
		  SrcBlock		  "pUAB"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  35
		  SrcBlock		  "pIAB"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_BemfObsrvDQ_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_CurrentLoop_FLT"
	      SID		      "20"
	      Ports		      [5, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 145, 260, 295]
	      ZOrder		      9
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		240
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_CurrentLoop_FLT"
		Description		"Current control loop of the PMSM field-oriented control algorithm in single precision floating-point i"
		"mplementation. This block supports re-initialization of the internal state during simulation. If the block is reset,"
		" the outputs of the PI controllers will be aligned with the inputs fltControllerPIrAWDOut_preset and fltControllerPI"
		"rAWQOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltCC1sc_D'], 'BlockType'), 'Inport')\n        posblk = get_pa"
		"ram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltCC1sc_D'], 'Position');\n        orient = get_param("
		" [gcb, '/fltCC1sc_D'], 'Orientation');\n        delete_block(       [gcb, '/fltCC1sc_D']);\n        add_block('built"
		"-in/Ground', [gcb, '/fltCC1sc_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f"
		"ltCC2sc_D'], 'Position');\n        orient = get_param( [gcb, '/fltCC2sc_D'], 'Orientation');\n        delete_block( "
		"      [gcb, '/fltCC2sc_D']);\n        add_block('built-in/Ground', [gcb, '/fltCC2sc_D'], 'Position', pos, 'Orientati"
		"on', orient);\n\n        pos = get_param(    [gcb, '/fltCC1sc_Q'], 'Position');\n        orient = get_param( [gcb, '"
		"/fltCC1sc_Q'], 'Orientation');\n        delete_block(       [gcb, '/fltCC1sc_Q']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/fltCC1sc_Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltCC2sc_"
		"Q'], 'Position');\n        orient = get_param( [gcb, '/fltCC2sc_Q'], 'Orientation');\n        delete_block(       [g"
		"cb, '/fltCC2sc_Q']);\n        add_block('built-in/Ground', [gcb, '/fltCC2sc_Q'], 'Position', pos, 'Orientation', ori"
		"ent);\n\n        pos = get_param(    [gcb, '/fltAcc_D'], 'Position');\n        orient = get_param( [gcb, '/fltAcc_D'"
		"], 'Orientation');\n        delete_block(       [gcb, '/fltAcc_D']);\n        add_block('built-in/Ground', [gcb, '/f"
		"ltAcc_D'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltInErrK1_D'], 'Position"
		"');\n        orient = get_param( [gcb, '/fltInErrK1_D'], 'Orientation');\n        delete_block(       [gcb, '/fltInE"
		"rrK1_D']);\n        add_block('built-in/Ground', [gcb, '/fltInErrK1_D'], 'Position', pos, 'Orientation', orient);\n\n"
		"        pos = get_param(    [gcb, '/fltAcc_Q'], 'Position');\n        orient = get_param( [gcb, '/fltAcc_Q'], 'Orien"
		"tation');\n        delete_block(       [gcb, '/fltAcc_Q']);\n        add_block('built-in/Ground', [gcb, '/fltAcc_Q']"
		", 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltInErrK1_Q'], 'Position');\n    "
		"    orient = get_param( [gcb, '/fltInErrK1_Q'], 'Orientation');\n        delete_block(       [gcb, '/fltInErrK1_Q'])"
		";\n        add_block('built-in/Ground', [gcb, '/fltInErrK1_Q'], 'Position', pos, 'Orientation', orient);\n\n\n      "
		"  pos = get_param(    [gcb '/fltAcc_D_Out'], 'Position');\n        orient = get_param( [gcb '/fltAcc_D_Out'], 'Orien"
		"tation');\n        delete_block(       [gcb '/fltAcc_D_Out']);\n        add_block('built-in/Terminator', [gcb '/fltA"
		"cc_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInErrK1_D_Out'], 'Posi"
		"tion');\n        orient = get_param( [gcb '/fltInErrK1_D_Out'], 'Orientation');\n        delete_block(       [gcb '/"
		"fltInErrK1_D_Out']);\n        add_block('built-in/Terminator', [gcb '/fltInErrK1_D_Out'], 'Position', pos, 'Orientat"
		"ion', orient);\n\n        pos = get_param(    [gcb '/fltAcc_Q_Out'], 'Position');\n        orient = get_param( [gcb "
		"'/fltAcc_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/fltAcc_Q_Out']);\n        add_block('built-in/"
		"Terminator', [gcb '/fltAcc_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f"
		"ltInErrK1_Q_Out'], 'Position');\n        orient = get_param( [gcb '/fltInErrK1_Q_Out'], 'Orientation');\n        del"
		"ete_block(       [gcb '/fltInErrK1_Q_Out']);\n        add_block('built-in/Terminator', [gcb '/fltInErrK1_Q_Out'], 'P"
		"osition', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/fltUDcBus'], 'Port', '1');\n        set_param(["
		"gcb '/pIDQReq'], 'Port', '2');\n        set_param([gcb '/pIDQFbck'], 'Port', '3');\n        set_param([gcb '/fltCont"
		"rollerPIrAWDOut_preset'], 'Port', '4');\n        set_param([gcb '/fltControllerPIrAWQOut_preset'], 'Port', '5');\n\n"
		"        set_param([gcb '/pUDQReq'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','"
		"on'});\n\n        if (posblk(4) - posblk(2)) > 150\n          height = 150;\n          set_param(gcb,'Position',[pos"
		"blk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if st"
		"rcmp(get_param([gcb '/fltCC1sc_D'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n       "
		" pos = get_param(    [gcb, '/fltCC1sc_D'], 'Position');\n        orient = get_param( [gcb, '/fltCC1sc_D'], 'Orientat"
		"ion');\n        delete_block(       [gcb, '/fltCC1sc_D']);\n        add_block('built-in/Inport', [gcb, '/fltCC1sc_D'"
		"], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltCC"
		"2sc_D'], 'Position');\n        orient = get_param( [gcb, '/fltCC2sc_D'], 'Orientation');\n        delete_block(     "
		"  [gcb, '/fltCC2sc_D']);\n        add_block('built-in/Inport', [gcb, '/fltCC2sc_D'], 'Position', pos, 'Orientation',"
		" orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltCC1sc_Q'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/fltCC1sc_Q'], 'Orientation');\n        delete_block(       [gcb, '/fltCC1sc_Q']);\n        "
		"add_block('built-in/Inport', [gcb, '/fltCC1sc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single"
		"');\n\n        pos = get_param(    [gcb, '/fltCC2sc_Q'], 'Position');\n        orient = get_param( [gcb, '/fltCC2sc_"
		"Q'], 'Orientation');\n        delete_block(       [gcb, '/fltCC2sc_Q']);\n        add_block('built-in/Inport', [gcb,"
		" '/fltCC2sc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(   "
		" [gcb, '/fltAcc_D'], 'Position');\n        orient = get_param( [gcb, '/fltAcc_D'], 'Orientation');\n        delete_b"
		"lock(       [gcb, '/fltAcc_D']);\n        add_block('built-in/Inport', [gcb, '/fltAcc_D'], 'Position', pos, 'Orienta"
		"tion', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltInErrK1_D'], 'Position');\n   "
		"     orient = get_param( [gcb, '/fltInErrK1_D'], 'Orientation');\n        delete_block(       [gcb, '/fltInErrK1_D']"
		");\n        add_block('built-in/Inport', [gcb, '/fltInErrK1_D'], 'Position', pos, 'Orientation', orient, 'OutDataTyp"
		"eStr', 'single');\n\n        pos = get_param(    [gcb, '/fltAcc_Q'], 'Position');\n        orient = get_param( [gcb,"
		" '/fltAcc_Q'], 'Orientation');\n        delete_block(       [gcb, '/fltAcc_Q']);\n        add_block('built-in/Inport"
		"', [gcb, '/fltAcc_Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_par"
		"am(    [gcb, '/fltInErrK1_Q'], 'Position');\n        orient = get_param( [gcb, '/fltInErrK1_Q'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/fltInErrK1_Q']);\n        add_block('built-in/Inport', [gcb, '/fltInErrK1_Q'], 'Po"
		"sition', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n        pos = get_param(    [gcb '/fltAcc_D_O"
		"ut'], 'Position');\n        orient = get_param( [gcb '/fltAcc_D_Out'], 'Orientation');\n        delete_block(       "
		"[gcb '/fltAcc_D_Out']);\n        add_block('built-in/Outport', [gcb '/fltAcc_D_Out'], 'Position', pos, 'Orientation'"
		", orient);\n\n        pos = get_param(    [gcb '/fltInErrK1_D_Out'], 'Position');\n        orient = get_param( [gcb "
		"'/fltInErrK1_D_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInErrK1_D_Out']);\n        add_block('b"
		"uilt-in/Outport', [gcb '/fltInErrK1_D_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(   "
		" [gcb '/fltAcc_Q_Out'], 'Position');\n        orient = get_param( [gcb '/fltAcc_Q_Out'], 'Orientation');\n        de"
		"lete_block(       [gcb '/fltAcc_Q_Out']);\n        add_block('built-in/Outport', [gcb '/fltAcc_Q_Out'], 'Position', "
		"pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInErrK1_Q_Out'], 'Position');\n        orient "
		"= get_param( [gcb '/fltInErrK1_Q_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInErrK1_Q_Out']);\n  "
		"      add_block('built-in/Outport', [gcb '/fltInErrK1_Q_Out'], 'Position', pos, 'Orientation', orient);\n\n\n       "
		" set_param([gcb '/fltUDcBus'], 'Port', '1');\n        set_param([gcb '/pIDQReq'], 'Port', '2');\n        set_param(["
		"gcb '/pIDQFbck'], 'Port', '3');\n        set_param([gcb '/fltControllerPIrAWDOut_preset'], 'Port', '4');\n        se"
		"t_param([gcb '/fltControllerPIrAWQOut_preset'], 'Port', '5');\n        set_param([gcb '/fltCC1sc_D'], 'Port', '6');\n"
		"        set_param([gcb '/fltCC2sc_D'], 'Port', '7');\n        set_param([gcb '/fltCC1sc_Q'], 'Port', '8');\n        "
		"set_param([gcb '/fltCC2sc_Q'], 'Port', '9');\n        set_param([gcb '/fltAcc_D'], 'Port', '10');\n        set_param"
		"([gcb '/fltInErrK1_D'], 'Port', '11');\n        set_param([gcb '/fltAcc_Q'], 'Port', '12');\n        set_param([gcb "
		"'/fltInErrK1_Q'], 'Port', '13');\n\n        set_param([gcb '/pUDQReq'], 'Port', '1');\n        set_param([gcb '/fltA"
		"cc_D_Out'], 'Port', '2');\n        set_param([gcb '/fltInErrK1_D_Out'], 'Port', '3');\n        set_param([gcb '/fltA"
		"cc_Q_Out'], 'Port', '4');\n        set_param([gcb '/fltInErrK1_Q_Out'], 'Port', '5');\n\n        set_param(gcb,'Mask"
		"Enables',{'on','on','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 350\n          height = 350;\n"
		"          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_CurrentLoop_FLT', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  6
		  Object {
		    $ObjectID		    241
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off',"
		    "'off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    242
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    243
		    Type		    "edit"
		    Name		    "fltCC1sc_D"
		    Prompt		    "fltCC1sc_D (CC1 coefficient of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    244
		    Type		    "edit"
		    Name		    "fltCC2sc_D"
		    Prompt		    "fltCC2sc_D (CC2 coefficient of the D-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    245
		    Type		    "edit"
		    Name		    "fltCC1sc_Q"
		    Prompt		    "fltCC1sc_Q (CC1 coefficient of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    246
		    Type		    "edit"
		    Name		    "fltCC2sc_Q"
		    Prompt		    "fltCC2sc_Q (CC2 coefficient of the Q-axis PI controller)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_CurrentLoop_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"41"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltUDcBus"
		  SID			  "20:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIDQReq"
		  SID			  "20:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIDQFbck"
		  SID			  "20:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltControllerPIrAWDOut_preset"
		  SID			  "20:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltControllerPIrAWQOut_preset"
		  SID			  "20:10"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  12
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "20:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_CurrentLoop_SF"
		  SID			  "20:5"
		  Ports			  [13, 5]
		  Position		  [135, 175, 285, 235]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_CurrentLoop_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,fltCC1sc_D,fltCC2sc_D,fltCC1sc_Q,fltCC2sc_Q"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "20:24"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  26
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    247
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "20:27"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  27
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    248
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_CurrentLoop_BAM_FLT.mdl');text(10,75,'PMSM Current Loop.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAcc_D"
		  SID			  "20:34"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAcc_D_Out"
		  SID			  "20:38"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  36
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAcc_Q"
		  SID			  "20:36"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  34
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAcc_Q_Out"
		  SID			  "20:40"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC1sc_D"
		  SID			  "20:30"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC1sc_Q"
		  SID			  "20:32"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC2sc_D"
		  SID			  "20:31"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC2sc_Q"
		  SID			  "20:33"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInErrK1_D"
		  SID			  "20:35"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInErrK1_D_Out"
		  SID			  "20:39"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInErrK1_Q"
		  SID			  "20:37"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInErrK1_Q_Out"
		  SID			  "20:41"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Outport
		  Name			  "pUDQReq"
		  SID			  "20:19"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  21
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  5
		  DstBlock		  "fltInErrK1_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  4
		  DstBlock		  "fltAcc_Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  3
		  DstBlock		  "fltInErrK1_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  2
		  DstBlock		  "fltAcc_D_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_CurrentLoop_SF"
		  SrcPort		  1
		  DstBlock		  "pUDQReq"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltInErrK1_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "fltAcc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "fltInErrK1_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "fltAcc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "fltCC2sc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "fltCC1sc_Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "fltCC2sc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "fltCC1sc_D"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "fltControllerPIrAWQOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "fltControllerPIrAWDOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "pIDQFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "pIDQReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "fltUDcBus"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_CurrentLoop_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_FWSpeedLoop_FLT"
	      SID		      "21"
	      Ports		      [10, 3, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 315, 260, 590]
	      ZOrder		      10
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		249
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_FWSpeedLoop_FLT"
		Description		"Speed loop controller with Field Weakening capability for the PMSM field-oriented control algorithm in"
		" single precision floating-point implementation. This block supports re-initialization of the internal state during "
		"simulation. If the block is reset, the outputs of the MA filters, PI controllers, and the ramp will be aligned with "
		"the inputs fltFilterMAWOut_preset, fltFilterMAFWOut_preset, fltControllerPIpAWQOut_preset, fltControllerPIpAWFWOut_p"
		"reset, and fltRampOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltUmaxDivImax'], 'BlockType'), 'Inport')\n        posblk = ge"
		"t_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltUmaxDivImax'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/fltUmaxDivImax'], 'Orientation');\n        delete_block(       [gcb, '/fltUmaxDivImax']);\n        "
		"add_block('built-in/Ground', [gcb, '/fltUmaxDivImax'], 'Position', pos, 'Orientation', orient);\n\n        pos = get"
		"_param(    [gcb, '/fltLambdaW'], 'Position');\n        orient = get_param( [gcb, '/fltLambdaW'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/fltLambdaW']);\n        add_block('built-in/Ground', [gcb, '/fltLambdaW'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltLambdaFW'], 'Position');\n        orient"
		" = get_param( [gcb, '/fltLambdaFW'], 'Orientation');\n        delete_block(       [gcb, '/fltLambdaFW']);\n        a"
		"dd_block('built-in/Ground', [gcb, '/fltLambdaFW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_par"
		"am(    [gcb, '/fltPropGainQ'], 'Position');\n        orient = get_param( [gcb, '/fltPropGainQ'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/fltPropGainQ']);\n        add_block('built-in/Ground', [gcb, '/fltPropGainQ'], 'Po"
		"sition', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltIntegGainQ'], 'Position');\n        "
		"orient = get_param( [gcb, '/fltIntegGainQ'], 'Orientation');\n        delete_block(       [gcb, '/fltIntegGainQ']);\n"
		"        add_block('built-in/Ground', [gcb, '/fltIntegGainQ'], 'Position', pos, 'Orientation', orient);\n\n        po"
		"s = get_param(    [gcb, '/fltLowerLimitQ'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLimitQ'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/fltLowerLimitQ']);\n        add_block('built-in/Ground', [gcb, '/fl"
		"tLowerLimitQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltUpperLimitQ'], 'P"
		"osition');\n        orient = get_param( [gcb, '/fltUpperLimitQ'], 'Orientation');\n        delete_block(       [gcb,"
		" '/fltUpperLimitQ']);\n        add_block('built-in/Ground', [gcb, '/fltUpperLimitQ'], 'Position', pos, 'Orientation'"
		", orient);\n\n        pos = get_param(    [gcb, '/fltPropGainFW'], 'Position');\n        orient = get_param( [gcb, '"
		"/fltPropGainFW'], 'Orientation');\n        delete_block(       [gcb, '/fltPropGainFW']);\n        add_block('built-i"
		"n/Ground', [gcb, '/fltPropGainFW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/"
		"fltIntegGainFW'], 'Position');\n        orient = get_param( [gcb, '/fltIntegGainFW'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/fltIntegGainFW']);\n        add_block('built-in/Ground', [gcb, '/fltIntegGainFW'], 'Position'"
		", pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltLowerLimitFW'], 'Position');\n        orien"
		"t = get_param( [gcb, '/fltLowerLimitFW'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLimitFW']);\n"
		"        add_block('built-in/Ground', [gcb, '/fltLowerLimitFW'], 'Position', pos, 'Orientation', orient);\n\n        "
		"pos = get_param(    [gcb, '/fltUpperLimitFW'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimitFW'], "
		"'Orientation');\n        delete_block(       [gcb, '/fltUpperLimitFW']);\n        add_block('built-in/Ground', [gcb,"
		" '/fltUpperLimitFW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltRampUp'], '"
		"Position');\n        orient = get_param( [gcb, '/fltRampUp'], 'Orientation');\n        delete_block(       [gcb, '/f"
		"ltRampUp']);\n        add_block('built-in/Ground', [gcb, '/fltRampUp'], 'Position', pos, 'Orientation', orient);\n\n"
		"        pos = get_param(    [gcb, '/fltRampDown'], 'Position');\n        orient = get_param( [gcb, '/fltRampDown'], "
		"'Orientation');\n        delete_block(       [gcb, '/fltRampDown']);\n        add_block('built-in/Ground', [gcb, '/f"
		"ltRampDown'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltIQReqK_1'], 'Positi"
		"on');\n        orient = get_param( [gcb, '/fltIQReqK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltIQ"
		"ReqK_1']);\n        add_block('built-in/Ground', [gcb, '/fltIQReqK_1'], 'Position', pos, 'Orientation', orient);\n\n"
		"        pos = get_param(    [gcb, '/fltAccW'], 'Position');\n        orient = get_param( [gcb, '/fltAccW'], 'Orienta"
		"tion');\n        delete_block(       [gcb, '/fltAccW']);\n        add_block('built-in/Ground', [gcb, '/fltAccW'], 'P"
		"osition', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltAccFW'], 'Position');\n        orie"
		"nt = get_param( [gcb, '/fltAccFW'], 'Orientation');\n        delete_block(       [gcb, '/fltAccFW']);\n        add_b"
		"lock('built-in/Ground', [gcb, '/fltAccFW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    "
		"[gcb, '/fltIntegPartK_1Q'], 'Position');\n        orient = get_param( [gcb, '/fltIntegPartK_1Q'], 'Orientation');\n "
		"       delete_block(       [gcb, '/fltIntegPartK_1Q']);\n        add_block('built-in/Ground', [gcb, '/fltIntegPartK_"
		"1Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltInK_1Q'], 'Position');\n   "
		"     orient = get_param( [gcb, '/fltInK_1Q'], 'Orientation');\n        delete_block(       [gcb, '/fltInK_1Q']);\n  "
		"      add_block('built-in/Ground', [gcb, '/fltInK_1Q'], 'Position', pos, 'Orientation', orient);\n\n        pos = ge"
		"t_param(    [gcb, '/fltIntegPartK_1FW'], 'Position');\n        orient = get_param( [gcb, '/fltIntegPartK_1FW'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/fltIntegPartK_1FW']);\n        add_block('built-in/Ground', [gcb, '"
		"/fltIntegPartK_1FW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltInK_1FW'], "
		"'Position');\n        orient = get_param( [gcb, '/fltInK_1FW'], 'Orientation');\n        delete_block(       [gcb, '"
		"/fltInK_1FW']);\n        add_block('built-in/Ground', [gcb, '/fltInK_1FW'], 'Position', pos, 'Orientation', orient);"
		"\n\n        pos = get_param(    [gcb, '/fltState'], 'Position');\n        orient = get_param( [gcb, '/fltState'], 'O"
		"rientation');\n        delete_block(       [gcb, '/fltState']);\n        add_block('built-in/Ground', [gcb, '/fltSta"
		"te'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/fltAccW_Out'], 'Position');\n"
		"        orient = get_param( [gcb '/fltAccW_Out'], 'Orientation');\n        delete_block(       [gcb '/fltAccW_Out'])"
		";\n        add_block('built-in/Terminator', [gcb '/fltAccW_Out'], 'Position', pos, 'Orientation', orient);\n\n      "
		"  pos = get_param(    [gcb '/fltAccFW_Out'], 'Position');\n        orient = get_param( [gcb '/fltAccFW_Out'], 'Orien"
		"tation');\n        delete_block(       [gcb '/fltAccFW_Out']);\n        add_block('built-in/Terminator', [gcb '/fltA"
		"ccFW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltIntegPartK_1Q_Out'], '"
		"Position');\n        orient = get_param( [gcb '/fltIntegPartK_1Q_Out'], 'Orientation');\n        delete_block(      "
		" [gcb '/fltIntegPartK_1Q_Out']);\n        add_block('built-in/Terminator', [gcb '/fltIntegPartK_1Q_Out'], 'Position'"
		", pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInK_1Q_Out'], 'Position');\n        orient ="
		" get_param( [gcb '/fltInK_1Q_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInK_1Q_Out']);\n        a"
		"dd_block('built-in/Terminator', [gcb '/fltInK_1Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = ge"
		"t_param(    [gcb '/fltIntegPartK_1FW_Out'], 'Position');\n        orient = get_param( [gcb '/fltIntegPartK_1FW_Out']"
		", 'Orientation');\n        delete_block(       [gcb '/fltIntegPartK_1FW_Out']);\n        add_block('built-in/Termina"
		"tor', [gcb '/fltIntegPartK_1FW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '"
		"/fltInK_1FW_Out'], 'Position');\n        orient = get_param( [gcb '/fltInK_1FW_Out'], 'Orientation');\n        delet"
		"e_block(       [gcb '/fltInK_1FW_Out']);\n        add_block('built-in/Terminator', [gcb '/fltInK_1FW_Out'], 'Positio"
		"n', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltState_Out'], 'Position');\n        orient "
		"= get_param( [gcb '/fltState_Out'], 'Orientation');\n        delete_block(       [gcb '/fltState_Out']);\n        ad"
		"d_block('built-in/Terminator', [gcb '/fltState_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        if strcm"
		"p(get_param([gcb '/fltWReqFilt'], 'BlockType'), 'Outport')\n            pos = get_param(    [gcb '/fltWReqFilt'], 'P"
		"osition');\n            orient = get_param( [gcb '/fltWReqFilt'], 'Orientation');\n            delete_block(       ["
		"gcb '/fltWReqFilt']);\n            add_block('built-in/Terminator', [gcb '/fltWReqFilt'], 'Position', pos, 'Orientat"
		"ion', orient);\n\n            pos = get_param(    [gcb '/fltWErr'], 'Position');\n            orient = get_param( [g"
		"cb '/fltWErr'], 'Orientation');\n            delete_block(       [gcb '/fltWErr']);\n            add_block('built-in"
		"/Terminator', [gcb '/fltWErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/f"
		"ltIDQReqAmp'], 'Position');\n            orient = get_param( [gcb '/fltIDQReqAmp'], 'Orientation');\n            del"
		"ete_block(       [gcb '/fltIDQReqAmp']);\n            add_block('built-in/Terminator', [gcb '/fltIDQReqAmp'], 'Posit"
		"ion', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltWFbckFilt'], 'Position');\n         "
		"   orient = get_param( [gcb '/fltWFbckFilt'], 'Orientation');\n            delete_block(       [gcb '/fltWFbckFilt']"
		");\n            add_block('built-in/Terminator', [gcb '/fltWFbckFilt'], 'Position', pos, 'Orientation', orient);\n\n"
		"            pos = get_param(    [gcb '/fltIQErrSign'], 'Position');\n            orient = get_param( [gcb '/fltIQErr"
		"Sign'], 'Orientation');\n            delete_block(       [gcb '/fltIQErrSign']);\n            add_block('built-in/Te"
		"rminator', [gcb '/fltIQErrSign'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '"
		"/fltFWErr'], 'Position');\n            orient = get_param( [gcb '/fltFWErr'], 'Orientation');\n            delete_bl"
		"ock(       [gcb '/fltFWErr']);\n            add_block('built-in/Terminator', [gcb '/fltFWErr'], 'Position', pos, 'Or"
		"ientation', orient);\n\n            pos = get_param(    [gcb '/fltIQErr'], 'Position');\n            orient = get_pa"
		"ram( [gcb '/fltIQErr'], 'Orientation');\n            delete_block(       [gcb '/fltIQErr']);\n            add_block("
		"'built-in/Terminator', [gcb '/fltIQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(  "
		"  [gcb '/fltUQErr'], 'Position');\n            orient = get_param( [gcb '/fltUQErr'], 'Orientation');\n            d"
		"elete_block(       [gcb '/fltUQErr']);\n            add_block('built-in/Terminator', [gcb '/fltUQErr'], 'Position', "
		"pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWErrFilt'], 'Position');\n            ori"
		"ent = get_param( [gcb '/fltFWErrFilt'], 'Orientation');\n            delete_block(       [gcb '/fltFWErrFilt']);\n  "
		"          add_block('built-in/Terminator', [gcb '/fltFWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n      "
		"      pos = get_param(    [gcb '/fltFWAngle'], 'Position');\n            orient = get_param( [gcb '/fltFWAngle'], 'O"
		"rientation');\n            delete_block(       [gcb '/fltFWAngle']);\n            add_block('built-in/Terminator', ["
		"gcb '/fltFWAngle'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWSin'], '"
		"Position');\n            orient = get_param( [gcb '/fltFWSin'], 'Orientation');\n            delete_block(       [gc"
		"b '/fltFWSin']);\n            add_block('built-in/Terminator', [gcb '/fltFWSin'], 'Position', pos, 'Orientation', or"
		"ient);\n\n            pos = get_param(    [gcb '/fltFWCos'], 'Position');\n            orient = get_param( [gcb '/fl"
		"tFWCos'], 'Orientation');\n            delete_block(       [gcb '/fltFWCos']);\n            add_block('built-in/Term"
		"inator', [gcb '/fltFWCos'], 'Position', pos, 'Orientation', orient);\n\n        end\n\n        set_param([gcb '/fltV"
		"elocityReq'], 'Port', '1');\n        set_param([gcb '/fltVelocityFbck'], 'Port', '2');\n        set_param([gcb '/flt"
		"IQFbck'], 'Port', '3');\n        set_param([gcb '/fltUQReq'], 'Port', '4');\n        set_param([gcb '/fltUQLim'], 'P"
		"ort', '5');\n        set_param([gcb '/fltFilterMAWOut_preset'], 'Port', '6');\n        set_param([gcb '/fltFilterMAF"
		"WOut_preset'], 'Port', '7');\n        set_param([gcb '/fltControllerPIpAWQOut_preset'], 'Port', '8');\n        set_p"
		"aram([gcb '/fltControllerPIpAWFWOut_preset'], 'Port', '9');\n        set_param([gcb '/fltRampOut_preset'], 'Port', '"
		"10');\n\n        set_param([gcb '/pIDQReq'], 'Port', '1');\n        set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n"
		"        set_param([gcb '/u16LimitFlagFW'], 'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','on"
		"','on','on','on','on','on','on','on','on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 275\n      "
		"    height = 275;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        "
		"end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/fltUmaxDivImax'], 'BlockType'), 'Gro"
		"und')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltUmaxDivImax'], 'Positi"
		"on');\n        orient = get_param( [gcb, '/fltUmaxDivImax'], 'Orientation');\n        delete_block(       [gcb, '/fl"
		"tUmaxDivImax']);\n        add_block('built-in/Inport', [gcb, '/fltUmaxDivImax'], 'Position', pos, 'Orientation', ori"
		"ent, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltLambdaW'], 'Position');\n        orient "
		"= get_param( [gcb, '/fltLambdaW'], 'Orientation');\n        delete_block(       [gcb, '/fltLambdaW']);\n        add_"
		"block('built-in/Inport', [gcb, '/fltLambdaW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n"
		"\n        pos = get_param(    [gcb, '/fltLambdaFW'], 'Position');\n        orient = get_param( [gcb, '/fltLambdaFW']"
		", 'Orientation');\n        delete_block(       [gcb, '/fltLambdaFW']);\n        add_block('built-in/Inport', [gcb, '"
		"/fltLambdaFW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    "
		"[gcb, '/fltPropGainQ'], 'Position');\n        orient = get_param( [gcb, '/fltPropGainQ'], 'Orientation');\n        d"
		"elete_block(       [gcb, '/fltPropGainQ']);\n        add_block('built-in/Inport', [gcb, '/fltPropGainQ'], 'Position'"
		", pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltIntegGainQ'], '"
		"Position');\n        orient = get_param( [gcb, '/fltIntegGainQ'], 'Orientation');\n        delete_block(       [gcb,"
		" '/fltIntegGainQ']);\n        add_block('built-in/Inport', [gcb, '/fltIntegGainQ'], 'Position', pos, 'Orientation', "
		"orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltLowerLimitQ'], 'Position');\n        "
		"orient = get_param( [gcb, '/fltLowerLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLimitQ'])"
		";\n        add_block('built-in/Inport', [gcb, '/fltLowerLimitQ'], 'Position', pos, 'Orientation', orient, 'OutDataTy"
		"peStr', 'single');\n\n        pos = get_param(    [gcb, '/fltUpperLimitQ'], 'Position');\n        orient = get_param"
		"( [gcb, '/fltUpperLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/fltUpperLimitQ']);\n        add_blo"
		"ck('built-in/Inport', [gcb, '/fltUpperLimitQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');"
		"\n\n        pos = get_param(    [gcb, '/fltPropGainFW'], 'Position');\n        orient = get_param( [gcb, '/fltPropGa"
		"inFW'], 'Orientation');\n        delete_block(       [gcb, '/fltPropGainFW']);\n        add_block('built-in/Inport',"
		" [gcb, '/fltPropGainFW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_"
		"param(    [gcb, '/fltIntegGainFW'], 'Position');\n        orient = get_param( [gcb, '/fltIntegGainFW'], 'Orientation"
		"');\n        delete_block(       [gcb, '/fltIntegGainFW']);\n        add_block('built-in/Inport', [gcb, '/fltIntegGa"
		"inFW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/"
		"fltLowerLimitFW'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLimitFW'], 'Orientation');\n        del"
		"ete_block(       [gcb, '/fltLowerLimitFW']);\n        add_block('built-in/Inport', [gcb, '/fltLowerLimitFW'], 'Posit"
		"ion', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltUpperLimitF"
		"W'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimitFW'], 'Orientation');\n        delete_block(    "
		"   [gcb, '/fltUpperLimitFW']);\n        add_block('built-in/Inport', [gcb, '/fltUpperLimitFW'], 'Position', pos, 'Or"
		"ientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltRampUp'], 'Position');\n "
		"       orient = get_param( [gcb, '/fltRampUp'], 'Orientation');\n        delete_block(       [gcb, '/fltRampUp']);\n"
		"        add_block('built-in/Inport', [gcb, '/fltRampUp'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', "
		"'single');\n\n        pos = get_param(    [gcb, '/fltRampDown'], 'Position');\n        orient = get_param( [gcb, '/f"
		"ltRampDown'], 'Orientation');\n        delete_block(       [gcb, '/fltRampDown']);\n        add_block('built-in/Inpo"
		"rt', [gcb, '/fltRampDown'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = ge"
		"t_param(    [gcb, '/fltIQReqK_1'], 'Position');\n        orient = get_param( [gcb, '/fltIQReqK_1'], 'Orientation');\n"
		"        delete_block(       [gcb, '/fltIQReqK_1']);\n        add_block('built-in/Inport', [gcb, '/fltIQReqK_1'], 'Po"
		"sition', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltAccW'], "
		"'Position');\n        orient = get_param( [gcb, '/fltAccW'], 'Orientation');\n        delete_block(       [gcb, '/fl"
		"tAccW']);\n        add_block('built-in/Inport', [gcb, '/fltAccW'], 'Position', pos, 'Orientation', orient, 'OutDataT"
		"ypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltAccFW'], 'Position');\n        orient = get_param( [gc"
		"b, '/fltAccFW'], 'Orientation');\n        delete_block(       [gcb, '/fltAccFW']);\n        add_block('built-in/Inpo"
		"rt', [gcb, '/fltAccFW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_p"
		"aram(    [gcb, '/fltIntegPartK_1Q'], 'Position');\n        orient = get_param( [gcb, '/fltIntegPartK_1Q'], 'Orientat"
		"ion');\n        delete_block(       [gcb, '/fltIntegPartK_1Q']);\n        add_block('built-in/Inport', [gcb, '/fltIn"
		"tegPartK_1Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    ["
		"gcb, '/fltInK_1Q'], 'Position');\n        orient = get_param( [gcb, '/fltInK_1Q'], 'Orientation');\n        delete_b"
		"lock(       [gcb, '/fltInK_1Q']);\n        add_block('built-in/Inport', [gcb, '/fltInK_1Q'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltIntegPartK_1FW'], 'Position'"
		");\n        orient = get_param( [gcb, '/fltIntegPartK_1FW'], 'Orientation');\n        delete_block(       [gcb, '/fl"
		"tIntegPartK_1FW']);\n        add_block('built-in/Inport', [gcb, '/fltIntegPartK_1FW'], 'Position', pos, 'Orientation"
		"', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltInK_1FW'], 'Position');\n        o"
		"rient = get_param( [gcb, '/fltInK_1FW'], 'Orientation');\n        delete_block(       [gcb, '/fltInK_1FW']);\n      "
		"  add_block('built-in/Inport', [gcb, '/fltInK_1FW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'sing"
		"le');\n\n        pos = get_param(    [gcb, '/fltState'], 'Position');\n        orient = get_param( [gcb, '/fltState'"
		"], 'Orientation');\n        delete_block(       [gcb, '/fltState']);\n        add_block('built-in/Inport', [gcb, '/f"
		"ltState'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n        pos = get_param(    [gc"
		"b '/fltAccW_Out'], 'Position');\n        orient = get_param( [gcb '/fltAccW_Out'], 'Orientation');\n        delete_b"
		"lock(       [gcb '/fltAccW_Out']);\n        add_block('built-in/Outport', [gcb '/fltAccW_Out'], 'Position', pos, 'Or"
		"ientation', orient);\n\n        pos = get_param(    [gcb '/fltAccFW_Out'], 'Position');\n        orient = get_param("
		" [gcb '/fltAccFW_Out'], 'Orientation');\n        delete_block(       [gcb '/fltAccFW_Out']);\n        add_block('bui"
		"lt-in/Outport', [gcb '/fltAccFW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb "
		"'/fltIntegPartK_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/fltIntegPartK_1Q_Out'], 'Orientation');\n"
		"        delete_block(       [gcb '/fltIntegPartK_1Q_Out']);\n        add_block('built-in/Outport', [gcb '/fltIntegPa"
		"rtK_1Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInK_1Q_Out'], 'Posit"
		"ion');\n        orient = get_param( [gcb '/fltInK_1Q_Out'], 'Orientation');\n        delete_block(       [gcb '/fltI"
		"nK_1Q_Out']);\n        add_block('built-in/Outport', [gcb '/fltInK_1Q_Out'], 'Position', pos, 'Orientation', orient)"
		";\n\n        pos = get_param(    [gcb '/fltIntegPartK_1FW_Out'], 'Position');\n        orient = get_param( [gcb '/fl"
		"tIntegPartK_1FW_Out'], 'Orientation');\n        delete_block(       [gcb '/fltIntegPartK_1FW_Out']);\n        add_bl"
		"ock('built-in/Outport', [gcb '/fltIntegPartK_1FW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = ge"
		"t_param(    [gcb '/fltInK_1FW_Out'], 'Position');\n        orient = get_param( [gcb '/fltInK_1FW_Out'], 'Orientation"
		"');\n        delete_block(       [gcb '/fltInK_1FW_Out']);\n        add_block('built-in/Outport', [gcb '/fltInK_1FW_"
		"Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltState_Out'], 'Position');\n"
		"        orient = get_param( [gcb '/fltState_Out'], 'Orientation');\n        delete_block(       [gcb '/fltState_Out'"
		"]);\n        add_block('built-in/Outport', [gcb '/fltState_Out'], 'Position', pos, 'Orientation', orient);\n\n\n    "
		"    if (showDebugOutputs == 2) && (strcmp(get_param([gcb '/fltWReqFilt'], 'BlockType'), 'Terminator'))\n            "
		"pos = get_param(    [gcb '/fltWReqFilt'], 'Position');\n            orient = get_param( [gcb '/fltWReqFilt'], 'Orien"
		"tation');\n            delete_block(       [gcb '/fltWReqFilt']);\n            add_block('built-in/Outport', [gcb '/"
		"fltWReqFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltWErr'], 'Positi"
		"on');\n            orient = get_param( [gcb '/fltWErr'], 'Orientation');\n            delete_block(       [gcb '/flt"
		"WErr']);\n            add_block('built-in/Outport', [gcb '/fltWErr'], 'Position', pos, 'Orientation', orient);\n\n  "
		"          pos = get_param(    [gcb '/fltIDQReqAmp'], 'Position');\n            orient = get_param( [gcb '/fltIDQReqA"
		"mp'], 'Orientation');\n            delete_block(       [gcb '/fltIDQReqAmp']);\n            add_block('built-in/Outp"
		"ort', [gcb '/fltIDQReqAmp'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltW"
		"FbckFilt'], 'Position');\n            orient = get_param( [gcb '/fltWFbckFilt'], 'Orientation');\n            delete"
		"_block(       [gcb '/fltWFbckFilt']);\n            add_block('built-in/Outport', [gcb '/fltWFbckFilt'], 'Position', "
		"pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltIQErrSign'], 'Position');\n            ori"
		"ent = get_param( [gcb '/fltIQErrSign'], 'Orientation');\n            delete_block(       [gcb '/fltIQErrSign']);\n  "
		"          add_block('built-in/Outport', [gcb '/fltIQErrSign'], 'Position', pos, 'Orientation', orient);\n\n         "
		"   pos = get_param(    [gcb '/fltFWErr'], 'Position');\n            orient = get_param( [gcb '/fltFWErr'], 'Orientat"
		"ion');\n            delete_block(       [gcb '/fltFWErr']);\n            add_block('built-in/Outport', [gcb '/fltFWE"
		"rr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltIQErr'], 'Position');\n "
		"           orient = get_param( [gcb '/fltIQErr'], 'Orientation');\n            delete_block(       [gcb '/fltIQErr']"
		");\n            add_block('built-in/Outport', [gcb '/fltIQErr'], 'Position', pos, 'Orientation', orient);\n\n       "
		"     pos = get_param(    [gcb '/fltUQErr'], 'Position');\n            orient = get_param( [gcb '/fltUQErr'], 'Orient"
		"ation');\n            delete_block(       [gcb '/fltUQErr']);\n            add_block('built-in/Outport', [gcb '/fltU"
		"QErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWErrFilt'], 'Position"
		"');\n            orient = get_param( [gcb '/fltFWErrFilt'], 'Orientation');\n            delete_block(       [gcb '/"
		"fltFWErrFilt']);\n            add_block('built-in/Outport', [gcb '/fltFWErrFilt'], 'Position', pos, 'Orientation', o"
		"rient);\n\n            pos = get_param(    [gcb '/fltFWAngle'], 'Position');\n            orient = get_param( [gcb '"
		"/fltFWAngle'], 'Orientation');\n            delete_block(       [gcb '/fltFWAngle']);\n            add_block('built-"
		"in/Outport', [gcb '/fltFWAngle'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '"
		"/fltFWSin'], 'Position');\n            orient = get_param( [gcb '/fltFWSin'], 'Orientation');\n            delete_bl"
		"ock(       [gcb '/fltFWSin']);\n            add_block('built-in/Outport', [gcb '/fltFWSin'], 'Position', pos, 'Orien"
		"tation', orient);\n\n            pos = get_param(    [gcb '/fltFWCos'], 'Position');\n            orient = get_param"
		"( [gcb '/fltFWCos'], 'Orientation');\n            delete_block(       [gcb '/fltFWCos']);\n            add_block('bu"
		"ilt-in/Outport', [gcb '/fltFWCos'], 'Position', pos, 'Orientation', orient);\n\n        end\n\n        set_param([gc"
		"b '/fltVelocityReq'], 'Port', '1');\n        set_param([gcb '/fltVelocityFbck'], 'Port', '2');\n        set_param([g"
		"cb '/fltIQFbck'], 'Port', '3');\n        set_param([gcb '/fltUQReq'], 'Port', '4');\n        set_param([gcb '/fltUQL"
		"im'], 'Port', '5');\n        set_param([gcb '/fltFilterMAWOut_preset'], 'Port', '6');\n        set_param([gcb '/fltF"
		"ilterMAFWOut_preset'], 'Port', '7');\n        set_param([gcb '/fltControllerPIpAWQOut_preset'], 'Port', '8');\n     "
		"   set_param([gcb '/fltControllerPIpAWFWOut_preset'], 'Port', '9');\n        set_param([gcb '/fltRampOut_preset'], '"
		"Port', '10');\n        set_param([gcb '/fltUmaxDivImax'], 'Port', '11');\n        set_param([gcb '/fltLambdaW'], 'Po"
		"rt', '12');\n        set_param([gcb '/fltLambdaFW'], 'Port', '13');\n        set_param([gcb '/fltPropGainQ'], 'Port'"
		", '14');\n        set_param([gcb '/fltIntegGainQ'], 'Port', '15');\n        set_param([gcb '/fltLowerLimitQ'], 'Port"
		"', '16');\n        set_param([gcb '/fltUpperLimitQ'], 'Port', '17');\n        set_param([gcb '/fltPropGainFW'], 'Por"
		"t', '18');\n        set_param([gcb '/fltIntegGainFW'], 'Port', '19');\n        set_param([gcb '/fltLowerLimitFW'], '"
		"Port', '20');\n        set_param([gcb '/fltUpperLimitFW'], 'Port', '21');\n        set_param([gcb '/fltRampUp'], 'Po"
		"rt', '22');\n        set_param([gcb '/fltRampDown'], 'Port', '23');\n        set_param([gcb '/fltIQReqK_1'], 'Port',"
		" '24');\n        set_param([gcb '/fltAccW'], 'Port', '25');\n        set_param([gcb '/fltAccFW'], 'Port', '26');\n  "
		"      set_param([gcb '/fltIntegPartK_1Q'], 'Port', '27');\n        set_param([gcb '/fltInK_1Q'], 'Port', '28');\n   "
		"     set_param([gcb '/fltIntegPartK_1FW'], 'Port', '29');\n        set_param([gcb '/fltInK_1FW'], 'Port', '30');\n  "
		"      set_param([gcb '/fltState'], 'Port', '31');\n\n        if (showDebugOutputs == 2)\n            set_param([gcb "
		"'/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n            set_param([gcb "
		"'/u16LimitFlagFW'], 'Port', '3');\n            set_param([gcb '/fltWReqFilt'], 'Port', '4');\n            set_param("
		"[gcb '/fltWErr'], 'Port', '5');\n            set_param([gcb '/fltIDQReqAmp'], 'Port', '6');\n            set_param(["
		"gcb '/fltWFbckFilt'], 'Port', '7');\n            set_param([gcb '/fltIQErrSign'], 'Port', '8');\n            set_par"
		"am([gcb '/fltFWErr'], 'Port', '9');\n            set_param([gcb '/fltIQErr'], 'Port', '10');\n            set_param("
		"[gcb '/fltUQErr'], 'Port', '11');\n            set_param([gcb '/fltFWErrFilt'], 'Port', '12');\n            set_para"
		"m([gcb '/fltFWAngle'], 'Port', '13');\n            set_param([gcb '/fltFWSin'], 'Port', '14');\n            set_para"
		"m([gcb '/fltFWCos'], 'Port', '15');\n            set_param([gcb '/fltAccW_Out'], 'Port', '16');\n            set_par"
		"am([gcb '/fltAccFW_Out'], 'Port', '17');\n            set_param([gcb '/fltIntegPartK_1Q_Out'], 'Port', '18');\n     "
		"       set_param([gcb '/fltInK_1Q_Out'], 'Port', '19');\n            set_param([gcb '/fltIntegPartK_1FW_Out'], 'Port"
		"', '20');\n            set_param([gcb '/fltInK_1FW_Out'], 'Port', '21');\n            set_param([gcb '/fltState_Out'"
		"], 'Port', '22');\n        else\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '"
		"/u16LimitFlagQ'], 'Port', '2');\n            set_param([gcb '/u16LimitFlagFW'], 'Port', '3');\n            set_param"
		"([gcb '/fltAccW_Out'], 'Port', '4');\n            set_param([gcb '/fltAccFW_Out'], 'Port', '5');\n            set_pa"
		"ram([gcb '/fltIntegPartK_1Q_Out'], 'Port', '6');\n            set_param([gcb '/fltInK_1Q_Out'], 'Port', '7');\n     "
		"       set_param([gcb '/fltIntegPartK_1FW_Out'], 'Port', '8');\n            set_param([gcb '/fltInK_1FW_Out'], 'Port"
		"', '9');\n            set_param([gcb '/fltState_Out'], 'Port', '10');\n        end\n\n        set_param(gcb,'MaskEna"
		"bles',{'on','on','on','off','off','off','off','off','off','off','off','off','off','off','off','off'});\n\n        if"
		" (posblk(4) - posblk(2)) < 800\n          height = 800;\n          set_param(gcb,'Position',[posblk(1), posblk(2), p"
		"osblk(3), posblk(2)+height])\n        end\n    else\n        if (showDebugOutputs == 2) && (strcmp(get_param([gcb '/"
		"fltWReqFilt'], 'BlockType'), 'Terminator'))\n            % shown debugging outputs\n            pos = get_param(    "
		"[gcb '/fltWReqFilt'], 'Position');\n            orient = get_param( [gcb '/fltWReqFilt'], 'Orientation');\n         "
		"   delete_block(       [gcb '/fltWReqFilt']);\n            add_block('built-in/Outport', [gcb '/fltWReqFilt'], 'Posi"
		"tion', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltWErr'], 'Position');\n            o"
		"rient = get_param( [gcb '/fltWErr'], 'Orientation');\n            delete_block(       [gcb '/fltWErr']);\n          "
		"  add_block('built-in/Outport', [gcb '/fltWErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_"
		"param(    [gcb '/fltIDQReqAmp'], 'Position');\n            orient = get_param( [gcb '/fltIDQReqAmp'], 'Orientation')"
		";\n            delete_block(       [gcb '/fltIDQReqAmp']);\n            add_block('built-in/Outport', [gcb '/fltIDQR"
		"eqAmp'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltWFbckFilt'], 'Positio"
		"n');\n            orient = get_param( [gcb '/fltWFbckFilt'], 'Orientation');\n            delete_block(       [gcb '"
		"/fltWFbckFilt']);\n            add_block('built-in/Outport', [gcb '/fltWFbckFilt'], 'Position', pos, 'Orientation', "
		"orient);\n\n            pos = get_param(    [gcb '/fltIQErrSign'], 'Position');\n            orient = get_param( [gc"
		"b '/fltIQErrSign'], 'Orientation');\n            delete_block(       [gcb '/fltIQErrSign']);\n            add_block("
		"'built-in/Outport', [gcb '/fltIQErrSign'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param( "
		"   [gcb '/fltFWErr'], 'Position');\n            orient = get_param( [gcb '/fltFWErr'], 'Orientation');\n            "
		"delete_block(       [gcb '/fltFWErr']);\n            add_block('built-in/Outport', [gcb '/fltFWErr'], 'Position', po"
		"s, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltIQErr'], 'Position');\n            orient = "
		"get_param( [gcb '/fltIQErr'], 'Orientation');\n            delete_block(       [gcb '/fltIQErr']);\n            add_"
		"block('built-in/Outport', [gcb '/fltIQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param"
		"(    [gcb '/fltUQErr'], 'Position');\n            orient = get_param( [gcb '/fltUQErr'], 'Orientation');\n          "
		"  delete_block(       [gcb '/fltUQErr']);\n            add_block('built-in/Outport', [gcb '/fltUQErr'], 'Position', "
		"pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWErrFilt'], 'Position');\n            ori"
		"ent = get_param( [gcb '/fltFWErrFilt'], 'Orientation');\n            delete_block(       [gcb '/fltFWErrFilt']);\n  "
		"          add_block('built-in/Outport', [gcb '/fltFWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n         "
		"   pos = get_param(    [gcb '/fltFWAngle'], 'Position');\n            orient = get_param( [gcb '/fltFWAngle'], 'Orie"
		"ntation');\n            delete_block(       [gcb '/fltFWAngle']);\n            add_block('built-in/Outport', [gcb '/"
		"fltFWAngle'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWSin'], 'Positi"
		"on');\n            orient = get_param( [gcb '/fltFWSin'], 'Orientation');\n            delete_block(       [gcb '/fl"
		"tFWSin']);\n            add_block('built-in/Outport', [gcb '/fltFWSin'], 'Position', pos, 'Orientation', orient);\n\n"
		"            pos = get_param(    [gcb '/fltFWCos'], 'Position');\n            orient = get_param( [gcb '/fltFWCos'], "
		"'Orientation');\n            delete_block(       [gcb '/fltFWCos']);\n            add_block('built-in/Outport', [gcb"
		" '/fltFWCos'], 'Position', pos, 'Orientation', orient);\n\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n  "
		"          set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n            set_param([gcb '/u16LimitFlagFW'], 'Port', '3"
		"');\n            set_param([gcb '/fltWReqFilt'], 'Port', '4');\n            set_param([gcb '/fltWErr'], 'Port', '5')"
		";\n            set_param([gcb '/fltIDQReqAmp'], 'Port', '6');\n            set_param([gcb '/fltWFbckFilt'], 'Port', "
		"'7');\n            set_param([gcb '/fltIQErrSign'], 'Port', '8');\n            set_param([gcb '/fltFWErr'], 'Port', "
		"'9');\n            set_param([gcb '/fltIQErr'], 'Port', '10');\n            set_param([gcb '/fltUQErr'], 'Port', '11"
		"');\n            set_param([gcb '/fltFWErrFilt'], 'Port', '12');\n            set_param([gcb '/fltFWAngle'], 'Port',"
		" '13');\n            set_param([gcb '/fltFWSin'], 'Port', '14');\n            set_param([gcb '/fltFWCos'], 'Port', '"
		"15');\n            set_param([gcb '/fltAccW_Out'], 'Port', '16');\n            set_param([gcb '/fltAccFW_Out'], 'Por"
		"t', '17');\n            set_param([gcb '/fltIntegPartK_1Q_Out'], 'Port', '18');\n            set_param([gcb '/fltInK"
		"_1Q_Out'], 'Port', '19');\n            set_param([gcb '/fltIntegPartK_1FW_Out'], 'Port', '20');\n            set_par"
		"am([gcb '/fltInK_1FW_Out'], 'Port', '21');\n            set_param([gcb '/fltState_Out'], 'Port', '22');\n        els"
		"eif (showDebugOutputs == 1) && (strcmp(get_param([gcb '/fltWReqFilt'], 'BlockType'), 'Outport'))\n            % hidd"
		"en debugging outputs\n            pos = get_param(    [gcb '/fltWReqFilt'], 'Position');\n            orient = get_p"
		"aram( [gcb '/fltWReqFilt'], 'Orientation');\n            delete_block(       [gcb '/fltWReqFilt']);\n            add"
		"_block('built-in/Terminator', [gcb '/fltWReqFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = ge"
		"t_param(    [gcb '/fltWErr'], 'Position');\n            orient = get_param( [gcb '/fltWErr'], 'Orientation');\n     "
		"       delete_block(       [gcb '/fltWErr']);\n            add_block('built-in/Terminator', [gcb '/fltWErr'], 'Posit"
		"ion', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltIDQReqAmp'], 'Position');\n         "
		"   orient = get_param( [gcb '/fltIDQReqAmp'], 'Orientation');\n            delete_block(       [gcb '/fltIDQReqAmp']"
		");\n            add_block('built-in/Terminator', [gcb '/fltIDQReqAmp'], 'Position', pos, 'Orientation', orient);\n\n"
		"            pos = get_param(    [gcb '/fltWFbckFilt'], 'Position');\n            orient = get_param( [gcb '/fltWFbck"
		"Filt'], 'Orientation');\n            delete_block(       [gcb '/fltWFbckFilt']);\n            add_block('built-in/Te"
		"rminator', [gcb '/fltWFbckFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '"
		"/fltIQErrSign'], 'Position');\n            orient = get_param( [gcb '/fltIQErrSign'], 'Orientation');\n            d"
		"elete_block(       [gcb '/fltIQErrSign']);\n            add_block('built-in/Terminator', [gcb '/fltIQErrSign'], 'Pos"
		"ition', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWErr'], 'Position');\n           "
		" orient = get_param( [gcb '/fltFWErr'], 'Orientation');\n            delete_block(       [gcb '/fltFWErr']);\n      "
		"      add_block('built-in/Terminator', [gcb '/fltFWErr'], 'Position', pos, 'Orientation', orient);\n\n            po"
		"s = get_param(    [gcb '/fltIQErr'], 'Position');\n            orient = get_param( [gcb '/fltIQErr'], 'Orientation')"
		";\n            delete_block(       [gcb '/fltIQErr']);\n            add_block('built-in/Terminator', [gcb '/fltIQErr"
		"'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltUQErr'], 'Position');\n   "
		"         orient = get_param( [gcb '/fltUQErr'], 'Orientation');\n            delete_block(       [gcb '/fltUQErr']);"
		"\n            add_block('built-in/Terminator', [gcb '/fltUQErr'], 'Position', pos, 'Orientation', orient);\n\n      "
		"      pos = get_param(    [gcb '/fltFWErrFilt'], 'Position');\n            orient = get_param( [gcb '/fltFWErrFilt']"
		", 'Orientation');\n            delete_block(       [gcb '/fltFWErrFilt']);\n            add_block('built-in/Terminat"
		"or', [gcb '/fltFWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFW"
		"Angle'], 'Position');\n            orient = get_param( [gcb '/fltFWAngle'], 'Orientation');\n            delete_bloc"
		"k(       [gcb '/fltFWAngle']);\n            add_block('built-in/Terminator', [gcb '/fltFWAngle'], 'Position', pos, '"
		"Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWSin'], 'Position');\n            orient = get_"
		"param( [gcb '/fltFWSin'], 'Orientation');\n            delete_block(       [gcb '/fltFWSin']);\n            add_bloc"
		"k('built-in/Terminator', [gcb '/fltFWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param("
		"    [gcb '/fltFWCos'], 'Position');\n            orient = get_param( [gcb '/fltFWCos'], 'Orientation');\n           "
		" delete_block(       [gcb '/fltFWCos']);\n            add_block('built-in/Terminator', [gcb '/fltFWCos'], 'Position'"
		", pos, 'Orientation', orient);\n\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb "
		"'/u16LimitFlagQ'], 'Port', '2');\n            set_param([gcb '/u16LimitFlagFW'], 'Port', '3');\n            set_para"
		"m([gcb '/fltAccW_Out'], 'Port', '4');\n            set_param([gcb '/fltAccFW_Out'], 'Port', '5');\n            set_p"
		"aram([gcb '/fltIntegPartK_1Q_Out'], 'Port', '6');\n            set_param([gcb '/fltInK_1Q_Out'], 'Port', '7');\n    "
		"        set_param([gcb '/fltIntegPartK_1FW_Out'], 'Port', '8');\n            set_param([gcb '/fltInK_1FW_Out'], 'Por"
		"t', '9');\n            set_param([gcb '/fltState_Out'], 'Port', '10');\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_FWSpeedLoop_FLT', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  16
		  Object {
		    $ObjectID		    250
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on','on','on','on','on','on','on'});\nelse"
		    "\n    set_param(gcb,'MaskEnables',{'on','on','on','off','off','off','off','off','off','off','off','off','off','o"
		    "ff','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    251
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    252
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide"
		    Cell		    "Show"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showDebugOutputs"
		    Prompt		    "Show debugging outputs"
		    Value		    "Hide"
		    Enabled		    "off"
		  }
		  Object {
		    $ObjectID		    253
		    Type		    "edit"
		    Name		    "fltUmaxDivImax"
		    Prompt		    "fltUmaxDivImax (Maximal coil voltage divided by the maximal coil current)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    254
		    Type		    "edit"
		    Name		    "fltLambdaW"
		    Prompt		    "fltLambdaW (velocity GDFLIB_FilterMA - smoothing factor)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    255
		    Type		    "edit"
		    Name		    "fltLambdaFW"
		    Prompt		    "fltLambdaFW (FW GDFLIB_FilterMA - smoothing factor)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    256
		    Type		    "edit"
		    Name		    "fltPropGainQ"
		    Prompt		    "fltPropGainQ (q-axis GFLIB_ControllerPIpAW - proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    257
		    Type		    "edit"
		    Name		    "fltIntegGainQ"
		    Prompt		    "fltIntegGainQ (q-axis GFLIB_ControllerPIpAW - integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    258
		    Type		    "edit"
		    Name		    "fltLowerLimitQ"
		    Prompt		    "fltLowerLimitQ (q-axis GFLIB_ControllerPIpAW - lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    259
		    Type		    "edit"
		    Name		    "fltUpperLimitQ"
		    Prompt		    "fltUpperLimitQ (q-axis GFLIB_ControllerPIpAW - upper limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    260
		    Type		    "edit"
		    Name		    "fltPropGainFW"
		    Prompt		    "fltPropGainFW (FW GFLIB_ControllerPIpAW - proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    261
		    Type		    "edit"
		    Name		    "fltIntegGainFW"
		    Prompt		    "fltIntegGainFW (FW GFLIB_ControllerPIpAW - integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    262
		    Type		    "edit"
		    Name		    "fltLowerLimitFW"
		    Prompt		    "fltLowerLimitFW (FW GFLIB_ControllerPIpAW - lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    263
		    Type		    "edit"
		    Name		    "fltUpperLimitFW"
		    Prompt		    "fltUpperLimitFW (FW GFLIB_ControllerPIpAW - upper limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    264
		    Type		    "edit"
		    Name		    "fltRampUp"
		    Prompt		    "fltRampUp (Ramp up increment coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    265
		    Type		    "edit"
		    Name		    "fltRampDown"
		    Prompt		    "fltRampDown (Ramp up decrement coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_FWSpeedLoop_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"104"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltVelocityReq"
		  SID			  "21:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltVelocityFbck"
		  SID			  "21:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIQFbck"
		  SID			  "21:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltUQReq"
		  SID			  "21:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltUQLim"
		  SID			  "21:10"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  12
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltFilterMAWOut_preset"
		  SID			  "21:11"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  13
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "6"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltFilterMAFWOut_preset"
		  SID			  "21:12"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  14
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "7"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltControllerPIpAWQOut_preset"
		  SID			  "21:13"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  15
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "8"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltControllerPIpAWFWOut_preset"
		  SID			  "21:14"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  16
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "9"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltRampOut_preset"
		  SID			  "21:15"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  17
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "10"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "21:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_FWSpeedLoop_SF"
		  SID			  "21:5"
		  Ports			  [31, 22]
		  Position		  [135, 130, 285, 280]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_FWSpeedLoop_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,showDebugOutputs,fltUmaxDivImax,fltLambdaW,fltLambdaFW,fltPropGainQ,fl"
		  "tIntegGainQ,fltLowerLimitQ,fltUpperLimitQ,fltPropGainFW,fltIntegGainFW,fltLowerLimitFW,fltUpperLimitFW,fltRampUp,f"
		  "ltRampDown"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "21:59"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  61
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    266
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "21:62"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  62
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    267
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_FWSpeedLoop_BAM_FLT.mdl');text(10,75,'PMSM Speed Loop with Field Weakening.');t"
		    "ext(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAccFW"
		  SID			  "21:80"
		  Position		  [40, 1198, 70, 1212]
		  ZOrder		  78
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAccFW_Out"
		  SID			  "21:87"
		  Position		  [340, 838, 370, 852]
		  ZOrder		  85
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAccW"
		  SID			  "21:79"
		  Position		  [40, 1158, 70, 1172]
		  ZOrder		  77
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAccW_Out"
		  SID			  "21:86"
		  Position		  [340, 798, 370, 812]
		  ZOrder		  84
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltFWAngle"
		  SID			  "21:102"
		  Position		  [340, 678, 370, 692]
		  ZOrder		  100
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltFWCos"
		  SID			  "21:104"
		  Position		  [340, 758, 370, 772]
		  ZOrder		  102
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltFWErr"
		  SID			  "21:98"
		  Position		  [340, 518, 370, 532]
		  ZOrder		  96
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltFWErrFilt"
		  SID			  "21:101"
		  Position		  [340, 638, 370, 652]
		  ZOrder		  99
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltFWSin"
		  SID			  "21:103"
		  Position		  [340, 718, 370, 732]
		  ZOrder		  101
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIDQReqAmp"
		  SID			  "21:95"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  93
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIQErr"
		  SID			  "21:99"
		  Position		  [340, 558, 370, 572]
		  ZOrder		  97
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIQErrSign"
		  SID			  "21:97"
		  Position		  [340, 478, 370, 492]
		  ZOrder		  95
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIQReqK_1"
		  SID			  "21:78"
		  Position		  [40, 1118, 70, 1132]
		  ZOrder		  76
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInK_1FW"
		  SID			  "21:84"
		  Position		  [40, 1358, 70, 1372]
		  ZOrder		  82
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInK_1FW_Out"
		  SID			  "21:91"
		  Position		  [340, 998, 370, 1012]
		  ZOrder		  89
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInK_1Q"
		  SID			  "21:82"
		  Position		  [40, 1278, 70, 1292]
		  ZOrder		  80
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInK_1Q_Out"
		  SID			  "21:89"
		  Position		  [340, 918, 370, 932]
		  ZOrder		  87
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegGainFW"
		  SID			  "21:73"
		  Position		  [40, 918, 70, 932]
		  ZOrder		  71
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegGainQ"
		  SID			  "21:69"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  67
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegPartK_1FW"
		  SID			  "21:83"
		  Position		  [40, 1318, 70, 1332]
		  ZOrder		  81
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIntegPartK_1FW_Out"
		  SID			  "21:90"
		  Position		  [340, 958, 370, 972]
		  ZOrder		  88
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegPartK_1Q"
		  SID			  "21:81"
		  Position		  [40, 1238, 70, 1252]
		  ZOrder		  79
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIntegPartK_1Q_Out"
		  SID			  "21:88"
		  Position		  [340, 878, 370, 892]
		  ZOrder		  86
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLambdaFW"
		  SID			  "21:67"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  65
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLambdaW"
		  SID			  "21:66"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  64
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimitFW"
		  SID			  "21:74"
		  Position		  [40, 958, 70, 972]
		  ZOrder		  72
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimitQ"
		  SID			  "21:70"
		  Position		  [40, 798, 70, 812]
		  ZOrder		  68
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltPropGainFW"
		  SID			  "21:72"
		  Position		  [40, 878, 70, 892]
		  ZOrder		  70
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltPropGainQ"
		  SID			  "21:68"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  66
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltRampDown"
		  SID			  "21:77"
		  Position		  [40, 1078, 70, 1092]
		  ZOrder		  75
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltRampUp"
		  SID			  "21:76"
		  Position		  [40, 1038, 70, 1052]
		  ZOrder		  74
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltState"
		  SID			  "21:85"
		  Position		  [40, 1398, 70, 1412]
		  ZOrder		  83
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltState_Out"
		  SID			  "21:92"
		  Position		  [340, 1038, 370, 1052]
		  ZOrder		  90
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltUQErr"
		  SID			  "21:100"
		  Position		  [340, 598, 370, 612]
		  ZOrder		  98
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUmaxDivImax"
		  SID			  "21:65"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  63
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimitFW"
		  SID			  "21:75"
		  Position		  [40, 998, 70, 1012]
		  ZOrder		  73
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimitQ"
		  SID			  "21:71"
		  Position		  [40, 838, 70, 852]
		  ZOrder		  69
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltWErr"
		  SID			  "21:94"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  92
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltWFbckFilt"
		  SID			  "21:96"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  94
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltWReqFilt"
		  SID			  "21:93"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  91
		}
		Block {
		  BlockType		  Outport
		  Name			  "pIDQReq"
		  SID			  "21:37"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  39
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlagQ"
		  SID			  "21:38"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  40
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlagFW"
		  SID			  "21:39"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  41
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  22
		  DstBlock		  "fltState_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  21
		  DstBlock		  "fltInK_1FW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  20
		  DstBlock		  "fltIntegPartK_1FW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  19
		  DstBlock		  "fltInK_1Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  18
		  DstBlock		  "fltIntegPartK_1Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  17
		  DstBlock		  "fltAccFW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  16
		  DstBlock		  "fltAccW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  15
		  DstBlock		  "fltFWCos"
		  DstPort		  1
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  14
		  DstBlock		  "fltFWSin"
		  DstPort		  1
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  13
		  DstBlock		  "fltFWAngle"
		  DstPort		  1
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  12
		  DstBlock		  "fltFWErrFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  11
		  DstBlock		  "fltUQErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  10
		  DstBlock		  "fltIQErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  9
		  DstBlock		  "fltFWErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  8
		  DstBlock		  "fltIQErrSign"
		  DstPort		  1
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  7
		  DstBlock		  "fltWFbckFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  6
		  DstBlock		  "fltIDQReqAmp"
		  DstPort		  1
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  5
		  DstBlock		  "fltWErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  4
		  DstBlock		  "fltWReqFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  3
		  DstBlock		  "u16LimitFlagFW"
		  DstPort		  1
		}
		Line {
		  ZOrder		  21
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlagQ"
		  DstPort		  1
		}
		Line {
		  ZOrder		  22
		  SrcBlock		  "AMCLIB_FWSpeedLoop_SF"
		  SrcPort		  1
		  DstBlock		  "pIDQReq"
		  DstPort		  1
		}
		Line {
		  ZOrder		  23
		  SrcBlock		  "fltState"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  31
		}
		Line {
		  ZOrder		  24
		  SrcBlock		  "fltInK_1FW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  30
		}
		Line {
		  ZOrder		  25
		  SrcBlock		  "fltIntegPartK_1FW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  29
		}
		Line {
		  ZOrder		  26
		  SrcBlock		  "fltInK_1Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  28
		}
		Line {
		  ZOrder		  27
		  SrcBlock		  "fltIntegPartK_1Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  27
		}
		Line {
		  ZOrder		  28
		  SrcBlock		  "fltAccFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  26
		}
		Line {
		  ZOrder		  29
		  SrcBlock		  "fltAccW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  25
		}
		Line {
		  ZOrder		  30
		  SrcBlock		  "fltIQReqK_1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  24
		}
		Line {
		  ZOrder		  31
		  SrcBlock		  "fltRampDown"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  23
		}
		Line {
		  ZOrder		  32
		  SrcBlock		  "fltRampUp"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  22
		}
		Line {
		  ZOrder		  33
		  SrcBlock		  "fltUpperLimitFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  21
		}
		Line {
		  ZOrder		  34
		  SrcBlock		  "fltLowerLimitFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  20
		}
		Line {
		  ZOrder		  35
		  SrcBlock		  "fltIntegGainFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  19
		}
		Line {
		  ZOrder		  36
		  SrcBlock		  "fltPropGainFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  18
		}
		Line {
		  ZOrder		  37
		  SrcBlock		  "fltUpperLimitQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  17
		}
		Line {
		  ZOrder		  38
		  SrcBlock		  "fltLowerLimitQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  16
		}
		Line {
		  ZOrder		  39
		  SrcBlock		  "fltIntegGainQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  40
		  SrcBlock		  "fltPropGainQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  41
		  SrcBlock		  "fltLambdaFW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  42
		  SrcBlock		  "fltLambdaW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  43
		  SrcBlock		  "fltUmaxDivImax"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  44
		  SrcBlock		  "fltRampOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  45
		  SrcBlock		  "fltControllerPIpAWFWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  46
		  SrcBlock		  "fltControllerPIpAWQOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  47
		  SrcBlock		  "fltFilterMAFWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  48
		  SrcBlock		  "fltFilterMAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  49
		  SrcBlock		  "fltUQLim"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  50
		  SrcBlock		  "fltUQReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  51
		  SrcBlock		  "fltIQFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  52
		  SrcBlock		  "fltVelocityFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  53
		  SrcBlock		  "fltVelocityReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FWSpeedLoop_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_FW_FLT"
	      SID		      "22"
	      Ports		      [7, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 610, 215, 810]
	      ZOrder		      11
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		268
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_FW_FLT"
		Description		"Field Weakening controller for the PMSM field-oriented control algorithm in single precision floating-"
		"point implementation. This block supports re-initialization of the internal state during simulation. If the block is"
		" reset, the output of the MA filter and PI controller will be aligned with the inputs fltFilterMAFWOut_preset and fl"
		"tControllerPIpAWFWOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltUmaxDivImax'], 'BlockType'), 'Inport')\n        posblk = ge"
		"t_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltUmaxDivImax'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/fltUmaxDivImax'], 'Orientation');\n        delete_block(       [gcb, '/fltUmaxDivImax']);\n        "
		"add_block('built-in/Ground', [gcb, '/fltUmaxDivImax'], 'Position', pos, 'Orientation', orient);\n\n        pos = get"
		"_param(    [gcb, '/fltLambda'], 'Position');\n        orient = get_param( [gcb, '/fltLambda'], 'Orientation');\n    "
		"    delete_block(       [gcb, '/fltLambda']);\n        add_block('built-in/Ground', [gcb, '/fltLambda'], 'Position',"
		" pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltPropGain'], 'Position');\n        orient = g"
		"et_param( [gcb, '/fltPropGain'], 'Orientation');\n        delete_block(       [gcb, '/fltPropGain']);\n        add_b"
		"lock('built-in/Ground', [gcb, '/fltPropGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param( "
		"   [gcb, '/fltIntegGain'], 'Position');\n        orient = get_param( [gcb, '/fltIntegGain'], 'Orientation');\n      "
		"  delete_block(       [gcb, '/fltIntegGain']);\n        add_block('built-in/Ground', [gcb, '/fltIntegGain'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltLowerLimit'], 'Position');\n        orie"
		"nt = get_param( [gcb, '/fltLowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLimit']);\n   "
		"     add_block('built-in/Ground', [gcb, '/fltLowerLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos ="
		" get_param(    [gcb, '/fltUpperLimit'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimit'], 'Orientat"
		"ion');\n        delete_block(       [gcb, '/fltUpperLimit']);\n        add_block('built-in/Ground', [gcb, '/fltUpper"
		"Limit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltIQReqK_1'], 'Position');"
		"\n        orient = get_param( [gcb, '/fltIQReqK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltIQReqK_"
		"1']);\n        add_block('built-in/Ground', [gcb, '/fltIQReqK_1'], 'Position', pos, 'Orientation', orient);\n\n     "
		"   pos = get_param(    [gcb, '/fltAcc'], 'Position');\n        orient = get_param( [gcb, '/fltAcc'], 'Orientation');"
		"\n        delete_block(       [gcb, '/fltAcc']);\n        add_block('built-in/Ground', [gcb, '/fltAcc'], 'Position',"
		" pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltIntegPartK_1'], 'Position');\n        orient"
		" = get_param( [gcb, '/fltIntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltIntegPartK_1']);\n "
		"       add_block('built-in/Ground', [gcb, '/fltIntegPartK_1'], 'Position', pos, 'Orientation', orient);\n\n        p"
		"os = get_param(    [gcb, '/fltInK_1'], 'Position');\n        orient = get_param( [gcb, '/fltInK_1'], 'Orientation');"
		"\n        delete_block(       [gcb, '/fltInK_1']);\n        add_block('built-in/Ground', [gcb, '/fltInK_1'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/fltAcc_Out'], 'Position');\n        orient"
		" = get_param( [gcb '/fltAcc_Out'], 'Orientation');\n        delete_block(       [gcb '/fltAcc_Out']);\n        add_b"
		"lock('built-in/Terminator', [gcb '/fltAcc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param"
		"(    [gcb '/fltIntegPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/fltIntegPartK_1_Out'], 'Orientat"
		"ion');\n        delete_block(       [gcb '/fltIntegPartK_1_Out']);\n        add_block('built-in/Terminator', [gcb '/"
		"fltIntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInK_1_Out']"
		", 'Position');\n        orient = get_param( [gcb '/fltInK_1_Out'], 'Orientation');\n        delete_block(       [gcb"
		" '/fltInK_1_Out']);\n        add_block('built-in/Terminator', [gcb '/fltInK_1_Out'], 'Position', pos, 'Orientation',"
		" orient);\n\n\n        if strcmp(get_param([gcb '/fltIQErrSign'], 'BlockType'), 'Outport')\n            pos = get_pa"
		"ram(    [gcb '/fltIQErrSign'], 'Position');\n            orient = get_param( [gcb '/fltIQErrSign'], 'Orientation');\n"
		"            delete_block(       [gcb '/fltIQErrSign']);\n            add_block('built-in/Terminator', [gcb '/fltIQEr"
		"rSign'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltIQErr'], 'Position');"
		"\n            orient = get_param( [gcb '/fltIQErr'], 'Orientation');\n            delete_block(       [gcb '/fltIQEr"
		"r']);\n            add_block('built-in/Terminator', [gcb '/fltIQErr'], 'Position', pos, 'Orientation', orient);\n\n "
		"           pos = get_param(    [gcb '/fltFWErr'], 'Position');\n            orient = get_param( [gcb '/fltFWErr'], '"
		"Orientation');\n            delete_block(       [gcb '/fltFWErr']);\n            add_block('built-in/Terminator', [g"
		"cb '/fltFWErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltUQErr'], 'Pos"
		"ition');\n            orient = get_param( [gcb '/fltUQErr'], 'Orientation');\n            delete_block(       [gcb '"
		"/fltUQErr']);\n            add_block('built-in/Terminator', [gcb '/fltUQErr'], 'Position', pos, 'Orientation', orien"
		"t);\n\n            pos = get_param(    [gcb '/fltFWErrFilt'], 'Position');\n            orient = get_param( [gcb '/f"
		"ltFWErrFilt'], 'Orientation');\n            delete_block(       [gcb '/fltFWErrFilt']);\n            add_block('buil"
		"t-in/Terminator', [gcb '/fltFWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(   "
		" [gcb '/fltFWAngle'], 'Position');\n            orient = get_param( [gcb '/fltFWAngle'], 'Orientation');\n          "
		"  delete_block(       [gcb '/fltFWAngle']);\n            add_block('built-in/Terminator', [gcb '/fltFWAngle'], 'Posi"
		"tion', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWSin'], 'Position');\n            "
		"orient = get_param( [gcb '/fltFWSin'], 'Orientation');\n            delete_block(       [gcb '/fltFWSin']);\n       "
		"     add_block('built-in/Terminator', [gcb '/fltFWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos"
		" = get_param(    [gcb '/fltFWCos'], 'Position');\n            orient = get_param( [gcb '/fltFWCos'], 'Orientation');"
		"\n            delete_block(       [gcb '/fltFWCos']);\n            add_block('built-in/Terminator', [gcb '/fltFWCos'"
		"], 'Position', pos, 'Orientation', orient);\n\n        end\n\n        set_param([gcb '/fltIDQReqAmp'], 'Port', '1');"
		"\n        set_param([gcb '/fltVelocityFbck'], 'Port', '2');\n        set_param([gcb '/fltIQFbck'], 'Port', '3');\n  "
		"      set_param([gcb '/fltUQReq'], 'Port', '4');\n        set_param([gcb '/fltUQLim'], 'Port', '5');\n        set_pa"
		"ram([gcb '/fltFilterMAFWOut_preset'], 'Port', '6');\n        set_param([gcb '/fltControllerPIpAWFWOut_preset'], 'Por"
		"t', '7');\n\n        set_param([gcb '/pIDQReq'], 'Port', '1');\n        set_param([gcb '/u16LimitFlag'], 'Port', '2'"
		");\n\n        set_param(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on'});\n\n        if (posblk(4)"
		" - posblk(2)) > 200\n          height = 200;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), p"
		"osblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/fltUmaxDi"
		"vImax'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, "
		"'/fltUmaxDivImax'], 'Position');\n        orient = get_param( [gcb, '/fltUmaxDivImax'], 'Orientation');\n        del"
		"ete_block(       [gcb, '/fltUmaxDivImax']);\n        add_block('built-in/Inport', [gcb, '/fltUmaxDivImax'], 'Positio"
		"n', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltLambda'], 'Po"
		"sition');\n        orient = get_param( [gcb, '/fltLambda'], 'Orientation');\n        delete_block(       [gcb, '/flt"
		"Lambda']);\n        add_block('built-in/Inport', [gcb, '/fltLambda'], 'Position', pos, 'Orientation', orient, 'OutDa"
		"taTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltPropGain'], 'Position');\n        orient = get_para"
		"m( [gcb, '/fltPropGain'], 'Orientation');\n        delete_block(       [gcb, '/fltPropGain']);\n        add_block('b"
		"uilt-in/Inport', [gcb, '/fltPropGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n    "
		"    pos = get_param(    [gcb, '/fltIntegGain'], 'Position');\n        orient = get_param( [gcb, '/fltIntegGain'], 'O"
		"rientation');\n        delete_block(       [gcb, '/fltIntegGain']);\n        add_block('built-in/Inport', [gcb, '/fl"
		"tIntegGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [g"
		"cb, '/fltLowerLimit'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLimit'], 'Orientation');\n        d"
		"elete_block(       [gcb, '/fltLowerLimit']);\n        add_block('built-in/Inport', [gcb, '/fltLowerLimit'], 'Positio"
		"n', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltUpperLimit'],"
		" 'Position');\n        orient = get_param( [gcb, '/fltUpperLimit'], 'Orientation');\n        delete_block(       [gc"
		"b, '/fltUpperLimit']);\n        add_block('built-in/Inport', [gcb, '/fltUpperLimit'], 'Position', pos, 'Orientation'"
		", orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltIQReqK_1'], 'Position');\n        o"
		"rient = get_param( [gcb, '/fltIQReqK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltIQReqK_1']);\n    "
		"    add_block('built-in/Inport', [gcb, '/fltIQReqK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 's"
		"ingle');\n\n        pos = get_param(    [gcb, '/fltAcc'], 'Position');\n        orient = get_param( [gcb, '/fltAcc']"
		", 'Orientation');\n        delete_block(       [gcb, '/fltAcc']);\n        add_block('built-in/Inport', [gcb, '/fltA"
		"cc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fl"
		"tIntegPartK_1'], 'Position');\n        orient = get_param( [gcb, '/fltIntegPartK_1'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/fltIntegPartK_1']);\n        add_block('built-in/Inport', [gcb, '/fltIntegPartK_1'], 'Positio"
		"n', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltInK_1'], 'Pos"
		"ition');\n        orient = get_param( [gcb, '/fltInK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltIn"
		"K_1']);\n        add_block('built-in/Inport', [gcb, '/fltInK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTy"
		"peStr', 'single');\n\n\n        pos = get_param(    [gcb '/fltAcc_Out'], 'Position');\n        orient = get_param( ["
		"gcb '/fltAcc_Out'], 'Orientation');\n        delete_block(       [gcb '/fltAcc_Out']);\n        add_block('built-in/"
		"Outport', [gcb '/fltAcc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInt"
		"egPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/fltIntegPartK_1_Out'], 'Orientation');\n        de"
		"lete_block(       [gcb '/fltIntegPartK_1_Out']);\n        add_block('built-in/Outport', [gcb '/fltIntegPartK_1_Out']"
		", 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInK_1_Out'], 'Position');\n     "
		"   orient = get_param( [gcb '/fltInK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInK_1_Out']);\n"
		"        add_block('built-in/Outport', [gcb '/fltInK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        i"
		"f (showDebugOutputs == 2) && (strcmp(get_param([gcb '/fltIQErrSign'], 'BlockType'), 'Terminator'))\n            pos "
		"= get_param(    [gcb '/fltIQErrSign'], 'Position');\n            orient = get_param( [gcb '/fltIQErrSign'], 'Orienta"
		"tion');\n            delete_block(       [gcb '/fltIQErrSign']);\n            add_block('built-in/Outport', [gcb '/f"
		"ltIQErrSign'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltIQErr'], 'Posit"
		"ion');\n            orient = get_param( [gcb '/fltIQErr'], 'Orientation');\n            delete_block(       [gcb '/f"
		"ltIQErr']);\n            add_block('built-in/Outport', [gcb '/fltIQErr'], 'Position', pos, 'Orientation', orient);\n"
		"\n            pos = get_param(    [gcb '/fltFWErr'], 'Position');\n            orient = get_param( [gcb '/fltFWErr']"
		", 'Orientation');\n            delete_block(       [gcb '/fltFWErr']);\n            add_block('built-in/Outport', [g"
		"cb '/fltFWErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltUQErr'], 'Pos"
		"ition');\n            orient = get_param( [gcb '/fltUQErr'], 'Orientation');\n            delete_block(       [gcb '"
		"/fltUQErr']);\n            add_block('built-in/Outport', [gcb '/fltUQErr'], 'Position', pos, 'Orientation', orient);"
		"\n\n            pos = get_param(    [gcb '/fltFWErrFilt'], 'Position');\n            orient = get_param( [gcb '/fltF"
		"WErrFilt'], 'Orientation');\n            delete_block(       [gcb '/fltFWErrFilt']);\n            add_block('built-i"
		"n/Outport', [gcb '/fltFWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb "
		"'/fltFWAngle'], 'Position');\n            orient = get_param( [gcb '/fltFWAngle'], 'Orientation');\n            dele"
		"te_block(       [gcb '/fltFWAngle']);\n            add_block('built-in/Outport', [gcb '/fltFWAngle'], 'Position', po"
		"s, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWSin'], 'Position');\n            orient = "
		"get_param( [gcb '/fltFWSin'], 'Orientation');\n            delete_block(       [gcb '/fltFWSin']);\n            add_"
		"block('built-in/Outport', [gcb '/fltFWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param"
		"(    [gcb '/fltFWCos'], 'Position');\n            orient = get_param( [gcb '/fltFWCos'], 'Orientation');\n          "
		"  delete_block(       [gcb '/fltFWCos']);\n            add_block('built-in/Outport', [gcb '/fltFWCos'], 'Position', "
		"pos, 'Orientation', orient);\n\n        end\n\n        set_param([gcb '/fltIDQReqAmp'], 'Port', '1');\n        set_p"
		"aram([gcb '/fltVelocityFbck'], 'Port', '2');\n        set_param([gcb '/fltIQFbck'], 'Port', '3');\n        set_param"
		"([gcb '/fltUQReq'], 'Port', '4');\n        set_param([gcb '/fltUQLim'], 'Port', '5');\n        set_param([gcb '/fltF"
		"ilterMAFWOut_preset'], 'Port', '6');\n        set_param([gcb '/fltControllerPIpAWFWOut_preset'], 'Port', '7');\n    "
		"    set_param([gcb '/fltUmaxDivImax'], 'Port', '8');\n        set_param([gcb '/fltLambda'], 'Port', '9');\n        s"
		"et_param([gcb '/fltPropGain'], 'Port', '10');\n        set_param([gcb '/fltIntegGain'], 'Port', '11');\n        set_"
		"param([gcb '/fltLowerLimit'], 'Port', '12');\n        set_param([gcb '/fltUpperLimit'], 'Port', '13');\n        set_"
		"param([gcb '/fltIQReqK_1'], 'Port', '14');\n        set_param([gcb '/fltAcc'], 'Port', '15');\n        set_param([gc"
		"b '/fltIntegPartK_1'], 'Port', '16');\n        set_param([gcb '/fltInK_1'], 'Port', '17');\n\n        if (showDebugO"
		"utputs == 2)\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlag'], 'P"
		"ort', '2');\n            set_param([gcb '/fltIQErrSign'], 'Port', '3');\n            set_param([gcb '/fltIQErr'], 'P"
		"ort', '4');\n            set_param([gcb '/fltFWErr'], 'Port', '5');\n            set_param([gcb '/fltUQErr'], 'Port'"
		", '6');\n            set_param([gcb '/fltFWErrFilt'], 'Port', '7');\n            set_param([gcb '/fltFWAngle'], 'Por"
		"t', '8');\n            set_param([gcb '/fltFWSin'], 'Port', '9');\n            set_param([gcb '/fltFWCos'], 'Port', "
		"'10');\n            set_param([gcb '/fltAcc_Out'], 'Port', '11');\n            set_param([gcb '/fltIntegPartK_1_Out'"
		"], 'Port', '12');\n            set_param([gcb '/fltInK_1_Out'], 'Port', '13');\n        else\n            set_param("
		"[gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlag'], 'Port', '2');\n            set_param(["
		"gcb '/fltAcc_Out'], 'Port', '3');\n            set_param([gcb '/fltIntegPartK_1_Out'], 'Port', '4');\n            se"
		"t_param([gcb '/fltInK_1_Out'], 'Port', '5');\n        end\n\n        set_param(gcb,'MaskEnables',{'on','on','on','of"
		"f','off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 450\n          height = 450;\n          "
		"set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    else\n        if (sh"
		"owDebugOutputs == 2) && (strcmp(get_param([gcb '/fltIQErrSign'], 'BlockType'), 'Terminator'))\n            % shown d"
		"ebugging outputs\n            pos = get_param(    [gcb '/fltIQErrSign'], 'Position');\n            orient = get_para"
		"m( [gcb '/fltIQErrSign'], 'Orientation');\n            delete_block(       [gcb '/fltIQErrSign']);\n            add_"
		"block('built-in/Outport', [gcb '/fltIQErrSign'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_p"
		"aram(    [gcb '/fltIQErr'], 'Position');\n            orient = get_param( [gcb '/fltIQErr'], 'Orientation');\n      "
		"      delete_block(       [gcb '/fltIQErr']);\n            add_block('built-in/Outport', [gcb '/fltIQErr'], 'Positio"
		"n', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWErr'], 'Position');\n            ori"
		"ent = get_param( [gcb '/fltFWErr'], 'Orientation');\n            delete_block(       [gcb '/fltFWErr']);\n          "
		"  add_block('built-in/Outport', [gcb '/fltFWErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get"
		"_param(    [gcb '/fltUQErr'], 'Position');\n            orient = get_param( [gcb '/fltUQErr'], 'Orientation');\n    "
		"        delete_block(       [gcb '/fltUQErr']);\n            add_block('built-in/Outport', [gcb '/fltUQErr'], 'Posit"
		"ion', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWErrFilt'], 'Position');\n         "
		"   orient = get_param( [gcb '/fltFWErrFilt'], 'Orientation');\n            delete_block(       [gcb '/fltFWErrFilt']"
		");\n            add_block('built-in/Outport', [gcb '/fltFWErrFilt'], 'Position', pos, 'Orientation', orient);\n\n   "
		"         pos = get_param(    [gcb '/fltFWAngle'], 'Position');\n            orient = get_param( [gcb '/fltFWAngle'],"
		" 'Orientation');\n            delete_block(       [gcb '/fltFWAngle']);\n            add_block('built-in/Outport', ["
		"gcb '/fltFWAngle'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWSin'], '"
		"Position');\n            orient = get_param( [gcb '/fltFWSin'], 'Orientation');\n            delete_block(       [gc"
		"b '/fltFWSin']);\n            add_block('built-in/Outport', [gcb '/fltFWSin'], 'Position', pos, 'Orientation', orien"
		"t);\n\n            pos = get_param(    [gcb '/fltFWCos'], 'Position');\n            orient = get_param( [gcb '/fltFW"
		"Cos'], 'Orientation');\n            delete_block(       [gcb '/fltFWCos']);\n            add_block('built-in/Outport"
		"', [gcb '/fltFWCos'], 'Position', pos, 'Orientation', orient);\n\n            set_param([gcb '/pIDQReq'], 'Port', '1"
		"');\n            set_param([gcb '/u16LimitFlag'], 'Port', '2');\n            set_param([gcb '/fltIQErrSign'], 'Port'"
		", '3');\n            set_param([gcb '/fltIQErr'], 'Port', '4');\n            set_param([gcb '/fltFWErr'], 'Port', '5"
		"');\n            set_param([gcb '/fltUQErr'], 'Port', '6');\n            set_param([gcb '/fltFWErrFilt'], 'Port', '7"
		"');\n            set_param([gcb '/fltFWAngle'], 'Port', '8');\n            set_param([gcb '/fltFWSin'], 'Port', '9')"
		";\n            set_param([gcb '/fltFWCos'], 'Port', '10');\n            set_param([gcb '/fltAcc_Out'], 'Port', '11')"
		";\n            set_param([gcb '/fltIntegPartK_1_Out'], 'Port', '12');\n            set_param([gcb '/fltInK_1_Out'], "
		"'Port', '13');\n        elseif (showDebugOutputs == 1) && (strcmp(get_param([gcb '/fltIQErrSign'], 'BlockType'), 'Ou"
		"tport'))\n            % hidden debugging outputs\n            pos = get_param(    [gcb '/fltIQErrSign'], 'Position')"
		";\n            orient = get_param( [gcb '/fltIQErrSign'], 'Orientation');\n            delete_block(       [gcb '/fl"
		"tIQErrSign']);\n            add_block('built-in/Terminator', [gcb '/fltIQErrSign'], 'Position', pos, 'Orientation', "
		"orient);\n\n            pos = get_param(    [gcb '/fltIQErr'], 'Position');\n            orient = get_param( [gcb '/"
		"fltIQErr'], 'Orientation');\n            delete_block(       [gcb '/fltIQErr']);\n            add_block('built-in/Te"
		"rminator', [gcb '/fltIQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/flt"
		"FWErr'], 'Position');\n            orient = get_param( [gcb '/fltFWErr'], 'Orientation');\n            delete_block("
		"       [gcb '/fltFWErr']);\n            add_block('built-in/Terminator', [gcb '/fltFWErr'], 'Position', pos, 'Orient"
		"ation', orient);\n\n            pos = get_param(    [gcb '/fltUQErr'], 'Position');\n            orient = get_param("
		" [gcb '/fltUQErr'], 'Orientation');\n            delete_block(       [gcb '/fltUQErr']);\n            add_block('bui"
		"lt-in/Terminator', [gcb '/fltUQErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [g"
		"cb '/fltFWErrFilt'], 'Position');\n            orient = get_param( [gcb '/fltFWErrFilt'], 'Orientation');\n         "
		"   delete_block(       [gcb '/fltFWErrFilt']);\n            add_block('built-in/Terminator', [gcb '/fltFWErrFilt'], "
		"'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWAngle'], 'Position');\n     "
		"       orient = get_param( [gcb '/fltFWAngle'], 'Orientation');\n            delete_block(       [gcb '/fltFWAngle']"
		");\n            add_block('built-in/Terminator', [gcb '/fltFWAngle'], 'Position', pos, 'Orientation', orient);\n\n  "
		"          pos = get_param(    [gcb '/fltFWSin'], 'Position');\n            orient = get_param( [gcb '/fltFWSin'], 'O"
		"rientation');\n            delete_block(       [gcb '/fltFWSin']);\n            add_block('built-in/Terminator', [gc"
		"b '/fltFWSin'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltFWCos'], 'Posi"
		"tion');\n            orient = get_param( [gcb '/fltFWCos'], 'Orientation');\n            delete_block(       [gcb '/"
		"fltFWCos']);\n            add_block('built-in/Terminator', [gcb '/fltFWCos'], 'Position', pos, 'Orientation', orient"
		");\n\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlag'], 'Port', '2"
		"');\n            set_param([gcb '/fltAcc_Out'], 'Port', '3');\n            set_param([gcb '/fltIntegPartK_1_Out'], '"
		"Port', '4');\n            set_param([gcb '/fltInK_1_Out'], 'Port', '5');\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_FW_FLT', 'horizontalAlignment', 'center');\nif sh"
		"owStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)'], 'ho"
		"rizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  9
		  Object {
		    $ObjectID		    269
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{"
		    "'on','on','on','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    270
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    271
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide"
		    Cell		    "Show"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showDebugOutputs"
		    Prompt		    "Show debugging outputs"
		    Value		    "Hide"
		    Enabled		    "off"
		  }
		  Object {
		    $ObjectID		    272
		    Type		    "edit"
		    Name		    "fltUmaxDivImax"
		    Prompt		    "fltUmaxDivImax (Maximal coil voltage divided by the maximal coil current)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    273
		    Type		    "edit"
		    Name		    "fltLambda"
		    Prompt		    "fltLambda (GDFLIB_FilterMA - smoothing factor)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    274
		    Type		    "edit"
		    Name		    "fltPropGain"
		    Prompt		    "fltPropGain (GFLIB_ControllerPIpAW - proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    275
		    Type		    "edit"
		    Name		    "fltIntegGain"
		    Prompt		    "fltIntegGain (GFLIB_ControllerPIpAW - integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    276
		    Type		    "edit"
		    Name		    "fltLowerLimit"
		    Prompt		    "fltLowerLimit (GFLIB_ControllerPIpAW - lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    277
		    Type		    "edit"
		    Name		    "fltUpperLimit"
		    Prompt		    "fltUpperLimit (GFLIB_ControllerPIpAW - upper limit)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_FW_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"62"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIDQReqAmp"
		  SID			  "22:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltVelocityFbck"
		  SID			  "22:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIQFbck"
		  SID			  "22:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltUQReq"
		  SID			  "22:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltUQLim"
		  SID			  "22:10"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  12
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltFilterMAFWOut_preset"
		  SID			  "22:11"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  13
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "6"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltControllerPIpAWFWOut_preset"
		  SID			  "22:12"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  14
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "7"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "22:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_FW_SF"
		  SID			  "22:5"
		  Ports			  [17, 13]
		  Position		  [135, 165, 285, 245]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_FW_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,showDebugOutputs,fltUmaxDivImax,fltLambda,fltPropGain,fltIntegGain,flt"
		  "LowerLimit,fltUpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "22:36"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  38
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    278
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "22:39"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  39
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    279
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_FW_BAM_FLT.mdl');text(10,75,'PMSM Field Weakening Controller');text(10,60,'NXP "
		    "2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAcc"
		  SID			  "22:49"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  47
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAcc_Out"
		  SID			  "22:52"
		  Position		  [340, 598, 370, 612]
		  ZOrder		  50
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltFWAngle"
		  SID			  "22:60"
		  Position		  [340, 478, 370, 492]
		  ZOrder		  58
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltFWCos"
		  SID			  "22:62"
		  Position		  [340, 558, 370, 572]
		  ZOrder		  60
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltFWErr"
		  SID			  "22:57"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  55
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltFWErrFilt"
		  SID			  "22:59"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  57
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltFWSin"
		  SID			  "22:61"
		  Position		  [340, 518, 370, 532]
		  ZOrder		  59
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIQErr"
		  SID			  "22:56"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  54
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIQErrSign"
		  SID			  "22:55"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  53
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIQReqK_1"
		  SID			  "22:48"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  46
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInK_1"
		  SID			  "22:51"
		  Position		  [40, 838, 70, 852]
		  ZOrder		  49
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInK_1_Out"
		  SID			  "22:54"
		  Position		  [340, 678, 370, 692]
		  ZOrder		  52
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegGain"
		  SID			  "22:45"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  43
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegPartK_1"
		  SID			  "22:50"
		  Position		  [40, 798, 70, 812]
		  ZOrder		  48
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIntegPartK_1_Out"
		  SID			  "22:53"
		  Position		  [340, 638, 370, 652]
		  ZOrder		  51
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLambda"
		  SID			  "22:43"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  41
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimit"
		  SID			  "22:46"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  44
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltPropGain"
		  SID			  "22:44"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  42
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltUQErr"
		  SID			  "22:58"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  56
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUmaxDivImax"
		  SID			  "22:42"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  40
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimit"
		  SID			  "22:47"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  45
		}
		Block {
		  BlockType		  Outport
		  Name			  "pIDQReq"
		  SID			  "22:23"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  25
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlag"
		  SID			  "22:24"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  26
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  13
		  DstBlock		  "fltInK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  12
		  DstBlock		  "fltIntegPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  11
		  DstBlock		  "fltAcc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  10
		  DstBlock		  "fltFWCos"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  9
		  DstBlock		  "fltFWSin"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  8
		  DstBlock		  "fltFWAngle"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  7
		  DstBlock		  "fltFWErrFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  6
		  DstBlock		  "fltUQErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  5
		  DstBlock		  "fltFWErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  4
		  DstBlock		  "fltIQErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  3
		  DstBlock		  "fltIQErrSign"
		  DstPort		  1
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlag"
		  DstPort		  1
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "AMCLIB_FW_SF"
		  SrcPort		  1
		  DstBlock		  "pIDQReq"
		  DstPort		  1
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "fltInK_1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  17
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "fltIntegPartK_1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  16
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "fltAcc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "fltIQReqK_1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "fltUpperLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "fltLowerLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "fltIntegGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  21
		  SrcBlock		  "fltPropGain"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  22
		  SrcBlock		  "fltLambda"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  23
		  SrcBlock		  "fltUmaxDivImax"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  24
		  SrcBlock		  "fltControllerPIpAWFWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  25
		  SrcBlock		  "fltFilterMAFWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  26
		  SrcBlock		  "fltUQLim"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  27
		  SrcBlock		  "fltUQReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  28
		  SrcBlock		  "fltIQFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  29
		  SrcBlock		  "fltVelocityFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  30
		  SrcBlock		  "fltIDQReqAmp"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_FW_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_SpeedLoop_FLT"
	      SID		      "23"
	      Ports		      [5, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 830, 250, 980]
	      ZOrder		      12
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		280
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_SpeedLoop_FLT"
		Description		"Speed loop controller for the PMSM field-oriented control algorithm in single precision floating-point"
		" implementation. This block supports re-initialization of the internal state during simulation. If the block is rese"
		"t, the outputs of the MA filter, PI controller, and the ramp will be aligned with the inputs fltFilterMAWOut_preset,"
		" fltControllerPIpAWQOut_preset, and fltRampOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltLambdaW'], 'BlockType'), 'Inport')\n        posblk = get_pa"
		"ram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltLambdaW'], 'Position');\n        orient = get_param("
		" [gcb, '/fltLambdaW'], 'Orientation');\n        delete_block(       [gcb, '/fltLambdaW']);\n        add_block('built"
		"-in/Ground', [gcb, '/fltLambdaW'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f"
		"ltPropGainQ'], 'Position');\n        orient = get_param( [gcb, '/fltPropGainQ'], 'Orientation');\n        delete_blo"
		"ck(       [gcb, '/fltPropGainQ']);\n        add_block('built-in/Ground', [gcb, '/fltPropGainQ'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb, '/fltIntegGainQ'], 'Position');\n        orient = get_par"
		"am( [gcb, '/fltIntegGainQ'], 'Orientation');\n        delete_block(       [gcb, '/fltIntegGainQ']);\n        add_blo"
		"ck('built-in/Ground', [gcb, '/fltIntegGainQ'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param( "
		"   [gcb, '/fltLowerLimitQ'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLimitQ'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/fltLowerLimitQ']);\n        add_block('built-in/Ground', [gcb, '/fltLowerLimitQ'],"
		" 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltUpperLimitQ'], 'Position');\n   "
		"     orient = get_param( [gcb, '/fltUpperLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/fltUpperLimi"
		"tQ']);\n        add_block('built-in/Ground', [gcb, '/fltUpperLimitQ'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/fltRampUp'], 'Position');\n        orient = get_param( [gcb, '/fltRampUp'], 'Orie"
		"ntation');\n        delete_block(       [gcb, '/fltRampUp']);\n        add_block('built-in/Ground', [gcb, '/fltRampU"
		"p'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltRampDown'], 'Position');\n  "
		"      orient = get_param( [gcb, '/fltRampDown'], 'Orientation');\n        delete_block(       [gcb, '/fltRampDown'])"
		";\n        add_block('built-in/Ground', [gcb, '/fltRampDown'], 'Position', pos, 'Orientation', orient);\n\n        p"
		"os = get_param(    [gcb, '/fltAccW'], 'Position');\n        orient = get_param( [gcb, '/fltAccW'], 'Orientation');\n"
		"        delete_block(       [gcb, '/fltAccW']);\n        add_block('built-in/Ground', [gcb, '/fltAccW'], 'Position',"
		" pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltIntegPartK_1Q'], 'Position');\n        orien"
		"t = get_param( [gcb, '/fltIntegPartK_1Q'], 'Orientation');\n        delete_block(       [gcb, '/fltIntegPartK_1Q']);"
		"\n        add_block('built-in/Ground', [gcb, '/fltIntegPartK_1Q'], 'Position', pos, 'Orientation', orient);\n\n     "
		"   pos = get_param(    [gcb, '/fltInK_1Q'], 'Position');\n        orient = get_param( [gcb, '/fltInK_1Q'], 'Orientat"
		"ion');\n        delete_block(       [gcb, '/fltInK_1Q']);\n        add_block('built-in/Ground', [gcb, '/fltInK_1Q'],"
		" 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltState'], 'Position');\n        o"
		"rient = get_param( [gcb, '/fltState'], 'Orientation');\n        delete_block(       [gcb, '/fltState']);\n        ad"
		"d_block('built-in/Ground', [gcb, '/fltState'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param"
		"(    [gcb '/fltAccW_Out'], 'Position');\n        orient = get_param( [gcb '/fltAccW_Out'], 'Orientation');\n        "
		"delete_block(       [gcb '/fltAccW_Out']);\n        add_block('built-in/Terminator', [gcb '/fltAccW_Out'], 'Position"
		"', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltIntegPartK_1Q_Out'], 'Position');\n        "
		"orient = get_param( [gcb '/fltIntegPartK_1Q_Out'], 'Orientation');\n        delete_block(       [gcb '/fltIntegPartK"
		"_1Q_Out']);\n        add_block('built-in/Terminator', [gcb '/fltIntegPartK_1Q_Out'], 'Position', pos, 'Orientation',"
		" orient);\n\n        pos = get_param(    [gcb '/fltInK_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/fl"
		"tInK_1Q_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInK_1Q_Out']);\n        add_block('built-in/Te"
		"rminator', [gcb '/fltInK_1Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fl"
		"tState_Out'], 'Position');\n        orient = get_param( [gcb '/fltState_Out'], 'Orientation');\n        delete_block"
		"(       [gcb '/fltState_Out']);\n        add_block('built-in/Terminator', [gcb '/fltState_Out'], 'Position', pos, 'O"
		"rientation', orient);\n\n\n        if strcmp(get_param([gcb '/fltWReqFilt'], 'BlockType'), 'Outport')\n            p"
		"os = get_param(    [gcb '/fltWReqFilt'], 'Position');\n            orient = get_param( [gcb '/fltWReqFilt'], 'Orient"
		"ation');\n            delete_block(       [gcb '/fltWReqFilt']);\n            add_block('built-in/Terminator', [gcb "
		"'/fltWReqFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltWErr'], 'Posi"
		"tion');\n            orient = get_param( [gcb '/fltWErr'], 'Orientation');\n            delete_block(       [gcb '/f"
		"ltWErr']);\n            add_block('built-in/Terminator', [gcb '/fltWErr'], 'Position', pos, 'Orientation', orient);\n"
		"\n            pos = get_param(    [gcb '/fltWFbckFilt'], 'Position');\n            orient = get_param( [gcb '/fltWFb"
		"ckFilt'], 'Orientation');\n            delete_block(       [gcb '/fltWFbckFilt']);\n            add_block('built-in/"
		"Terminator', [gcb '/fltWFbckFilt'], 'Position', pos, 'Orientation', orient);\n\n        end\n\n        set_param([gc"
		"b '/fltVelocityReq'], 'Port', '1');\n        set_param([gcb '/fltVelocityFbck'], 'Port', '2');\n        set_param([g"
		"cb '/fltFilterMAWOut_preset'], 'Port', '3');\n        set_param([gcb '/fltControllerPIpAWQOut_preset'], 'Port', '4')"
		";\n        set_param([gcb '/fltRampOut_preset'], 'Port', '5');\n\n        set_param([gcb '/pIDQReq'], 'Port', '1');\n"
		"        set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','on'"
		",'on','on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 150\n          height = 150;\n          se"
		"t_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown"
		" state variables\n    if strcmp(get_param([gcb '/fltLambdaW'], 'BlockType'), 'Ground')\n        posblk = get_param(g"
		"cb, 'Position');\n\n        pos = get_param(    [gcb, '/fltLambdaW'], 'Position');\n        orient = get_param( [gcb"
		", '/fltLambdaW'], 'Orientation');\n        delete_block(       [gcb, '/fltLambdaW']);\n        add_block('built-in/I"
		"nport', [gcb, '/fltLambdaW'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = "
		"get_param(    [gcb, '/fltPropGainQ'], 'Position');\n        orient = get_param( [gcb, '/fltPropGainQ'], 'Orientation"
		"');\n        delete_block(       [gcb, '/fltPropGainQ']);\n        add_block('built-in/Inport', [gcb, '/fltPropGainQ"
		"'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltI"
		"ntegGainQ'], 'Position');\n        orient = get_param( [gcb, '/fltIntegGainQ'], 'Orientation');\n        delete_bloc"
		"k(       [gcb, '/fltIntegGainQ']);\n        add_block('built-in/Inport', [gcb, '/fltIntegGainQ'], 'Position', pos, '"
		"Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltLowerLimitQ'], 'Positio"
		"n');\n        orient = get_param( [gcb, '/fltLowerLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/flt"
		"LowerLimitQ']);\n        add_block('built-in/Inport', [gcb, '/fltLowerLimitQ'], 'Position', pos, 'Orientation', orie"
		"nt, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltUpperLimitQ'], 'Position');\n        orie"
		"nt = get_param( [gcb, '/fltUpperLimitQ'], 'Orientation');\n        delete_block(       [gcb, '/fltUpperLimitQ']);\n "
		"       add_block('built-in/Inport', [gcb, '/fltUpperLimitQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeSt"
		"r', 'single');\n\n        pos = get_param(    [gcb, '/fltRampUp'], 'Position');\n        orient = get_param( [gcb, '"
		"/fltRampUp'], 'Orientation');\n        delete_block(       [gcb, '/fltRampUp']);\n        add_block('built-in/Inport"
		"', [gcb, '/fltRampUp'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_pa"
		"ram(    [gcb, '/fltRampDown'], 'Position');\n        orient = get_param( [gcb, '/fltRampDown'], 'Orientation');\n   "
		"     delete_block(       [gcb, '/fltRampDown']);\n        add_block('built-in/Inport', [gcb, '/fltRampDown'], 'Posit"
		"ion', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltAccW'], 'Po"
		"sition');\n        orient = get_param( [gcb, '/fltAccW'], 'Orientation');\n        delete_block(       [gcb, '/fltAc"
		"cW']);\n        add_block('built-in/Inport', [gcb, '/fltAccW'], 'Position', pos, 'Orientation', orient, 'OutDataType"
		"Str', 'single');\n\n        pos = get_param(    [gcb, '/fltIntegPartK_1Q'], 'Position');\n        orient = get_param"
		"( [gcb, '/fltIntegPartK_1Q'], 'Orientation');\n        delete_block(       [gcb, '/fltIntegPartK_1Q']);\n        add"
		"_block('built-in/Inport', [gcb, '/fltIntegPartK_1Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'sin"
		"gle');\n\n        pos = get_param(    [gcb, '/fltInK_1Q'], 'Position');\n        orient = get_param( [gcb, '/fltInK_"
		"1Q'], 'Orientation');\n        delete_block(       [gcb, '/fltInK_1Q']);\n        add_block('built-in/Inport', [gcb,"
		" '/fltInK_1Q'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    "
		"[gcb, '/fltState'], 'Position');\n        orient = get_param( [gcb, '/fltState'], 'Orientation');\n        delete_bl"
		"ock(       [gcb, '/fltState']);\n        add_block('built-in/Inport', [gcb, '/fltState'], 'Position', pos, 'Orientat"
		"ion', orient, 'OutDataTypeStr', 'single');\n\n\n        pos = get_param(    [gcb '/fltAccW_Out'], 'Position');\n    "
		"    orient = get_param( [gcb '/fltAccW_Out'], 'Orientation');\n        delete_block(       [gcb '/fltAccW_Out']);\n "
		"       add_block('built-in/Outport', [gcb '/fltAccW_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos ="
		" get_param(    [gcb '/fltIntegPartK_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/fltIntegPartK_1Q_Out'"
		"], 'Orientation');\n        delete_block(       [gcb '/fltIntegPartK_1Q_Out']);\n        add_block('built-in/Outport"
		"', [gcb '/fltIntegPartK_1Q_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/flt"
		"InK_1Q_Out'], 'Position');\n        orient = get_param( [gcb '/fltInK_1Q_Out'], 'Orientation');\n        delete_bloc"
		"k(       [gcb '/fltInK_1Q_Out']);\n        add_block('built-in/Outport', [gcb '/fltInK_1Q_Out'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb '/fltState_Out'], 'Position');\n        orient = get_param"
		"( [gcb '/fltState_Out'], 'Orientation');\n        delete_block(       [gcb '/fltState_Out']);\n        add_block('bu"
		"ilt-in/Outport', [gcb '/fltState_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        if (showDebugOutputs ="
		"= 2) && (strcmp(get_param([gcb '/fltWReqFilt'], 'BlockType'), 'Terminator'))\n            pos = get_param(    [gcb '"
		"/fltWReqFilt'], 'Position');\n            orient = get_param( [gcb '/fltWReqFilt'], 'Orientation');\n            del"
		"ete_block(       [gcb '/fltWReqFilt']);\n            add_block('built-in/Outport', [gcb '/fltWReqFilt'], 'Position',"
		" pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltWErr'], 'Position');\n            orient "
		"= get_param( [gcb '/fltWErr'], 'Orientation');\n            delete_block(       [gcb '/fltWErr']);\n            add_"
		"block('built-in/Outport', [gcb '/fltWErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param("
		"    [gcb '/fltWFbckFilt'], 'Position');\n            orient = get_param( [gcb '/fltWFbckFilt'], 'Orientation');\n   "
		"         delete_block(       [gcb '/fltWFbckFilt']);\n            add_block('built-in/Outport', [gcb '/fltWFbckFilt'"
		"], 'Position', pos, 'Orientation', orient);\n\n        end\n\n        set_param([gcb '/fltVelocityReq'], 'Port', '1'"
		");\n        set_param([gcb '/fltVelocityFbck'], 'Port', '2');\n        set_param([gcb '/fltFilterMAWOut_preset'], 'P"
		"ort', '3');\n        set_param([gcb '/fltControllerPIpAWQOut_preset'], 'Port', '4');\n        set_param([gcb '/fltRa"
		"mpOut_preset'], 'Port', '5');\n        set_param([gcb '/fltLambdaW'], 'Port', '6');\n        set_param([gcb '/fltPro"
		"pGainQ'], 'Port', '7');\n        set_param([gcb '/fltIntegGainQ'], 'Port', '8');\n        set_param([gcb '/fltLowerL"
		"imitQ'], 'Port', '9');\n        set_param([gcb '/fltUpperLimitQ'], 'Port', '10');\n        set_param([gcb '/fltRampU"
		"p'], 'Port', '11');\n        set_param([gcb '/fltRampDown'], 'Port', '12');\n        set_param([gcb '/fltAccW'], 'Po"
		"rt', '13');\n        set_param([gcb '/fltIntegPartK_1Q'], 'Port', '14');\n        set_param([gcb '/fltInK_1Q'], 'Por"
		"t', '15');\n        set_param([gcb '/fltState'], 'Port', '16');\n\n        if (showDebugOutputs == 2)\n            s"
		"et_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n            s"
		"et_param([gcb '/fltWReqFilt'], 'Port', '3');\n            set_param([gcb '/fltWErr'], 'Port', '4');\n            set"
		"_param([gcb '/fltWFbckFilt'], 'Port', '5');\n            set_param([gcb '/fltAccW_Out'], 'Port', '6');\n            "
		"set_param([gcb '/fltIntegPartK_1Q_Out'], 'Port', '7');\n            set_param([gcb '/fltInK_1Q_Out'], 'Port', '8');\n"
		"            set_param([gcb '/fltState_Out'], 'Port', '9');\n        else\n            set_param([gcb '/pIDQReq'], 'P"
		"ort', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '2');\n            set_param([gcb '/fltAccW_Out']"
		", 'Port', '3');\n            set_param([gcb '/fltIntegPartK_1Q_Out'], 'Port', '4');\n            set_param([gcb '/fl"
		"tInK_1Q_Out'], 'Port', '5');\n            set_param([gcb '/fltState_Out'], 'Port', '6');\n        end\n\n        set"
		"_param(gcb,'MaskEnables',{'on','on','on','off','off','off','off','off','off','off'});\n\n        if (posblk(4) - pos"
		"blk(2)) < 425\n          height = 425;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk("
		"2)+height])\n        end\n    else\n        if (showDebugOutputs == 2) && (strcmp(get_param([gcb '/fltWReqFilt'], 'B"
		"lockType'), 'Terminator'))\n            % shown debugging outputs\n            pos = get_param(    [gcb '/fltWReqFil"
		"t'], 'Position');\n            orient = get_param( [gcb '/fltWReqFilt'], 'Orientation');\n            delete_block( "
		"      [gcb '/fltWReqFilt']);\n            add_block('built-in/Outport', [gcb '/fltWReqFilt'], 'Position', pos, 'Orie"
		"ntation', orient);\n\n            pos = get_param(    [gcb '/fltWErr'], 'Position');\n            orient = get_param"
		"( [gcb '/fltWErr'], 'Orientation');\n            delete_block(       [gcb '/fltWErr']);\n            add_block('buil"
		"t-in/Outport', [gcb '/fltWErr'], 'Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/"
		"fltWFbckFilt'], 'Position');\n            orient = get_param( [gcb '/fltWFbckFilt'], 'Orientation');\n            de"
		"lete_block(       [gcb '/fltWFbckFilt']);\n            add_block('built-in/Outport', [gcb '/fltWFbckFilt'], 'Positio"
		"n', pos, 'Orientation', orient);\n\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gc"
		"b '/u16LimitFlagQ'], 'Port', '2');\n            set_param([gcb '/fltWReqFilt'], 'Port', '3');\n            set_param"
		"([gcb '/fltWErr'], 'Port', '4');\n            set_param([gcb '/fltWFbckFilt'], 'Port', '5');\n            set_param("
		"[gcb '/fltAccW_Out'], 'Port', '6');\n            set_param([gcb '/fltIntegPartK_1Q_Out'], 'Port', '7');\n           "
		" set_param([gcb '/fltInK_1Q_Out'], 'Port', '8');\n            set_param([gcb '/fltState_Out'], 'Port', '9');\n      "
		"  elseif (showDebugOutputs == 1) && (strcmp(get_param([gcb '/fltWReqFilt'], 'BlockType'), 'Outport'))\n            %"
		" hidden debugging outputs\n            pos = get_param(    [gcb '/fltWReqFilt'], 'Position');\n            orient = "
		"get_param( [gcb '/fltWReqFilt'], 'Orientation');\n            delete_block(       [gcb '/fltWReqFilt']);\n          "
		"  add_block('built-in/Terminator', [gcb '/fltWReqFilt'], 'Position', pos, 'Orientation', orient);\n\n            pos"
		" = get_param(    [gcb '/fltWErr'], 'Position');\n            orient = get_param( [gcb '/fltWErr'], 'Orientation');\n"
		"            delete_block(       [gcb '/fltWErr']);\n            add_block('built-in/Terminator', [gcb '/fltWErr'], '"
		"Position', pos, 'Orientation', orient);\n\n            pos = get_param(    [gcb '/fltWFbckFilt'], 'Position');\n    "
		"        orient = get_param( [gcb '/fltWFbckFilt'], 'Orientation');\n            delete_block(       [gcb '/fltWFbckF"
		"ilt']);\n            add_block('built-in/Terminator', [gcb '/fltWFbckFilt'], 'Position', pos, 'Orientation', orient)"
		";\n\n            set_param([gcb '/pIDQReq'], 'Port', '1');\n            set_param([gcb '/u16LimitFlagQ'], 'Port', '2"
		"');\n            set_param([gcb '/fltAccW_Out'], 'Port', '3');\n            set_param([gcb '/fltIntegPartK_1Q_Out'],"
		" 'Port', '4');\n            set_param([gcb '/fltInK_1Q_Out'], 'Port', '5');\n            set_param([gcb '/fltState_O"
		"ut'], 'Port', '6');\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_SpeedLoop_FLT', 'horizontalAlignment', 'center');"
		"\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)"
		"'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  10
		  Object {
		    $ObjectID		    281
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','off','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnabl"
		    "es',{'on','on','on','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    282
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    283
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide"
		    Cell		    "Show"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showDebugOutputs"
		    Prompt		    "Show debugging outputs"
		    Value		    "Hide"
		    Enabled		    "off"
		  }
		  Object {
		    $ObjectID		    284
		    Type		    "edit"
		    Name		    "fltLambdaW"
		    Prompt		    "fltLambdaW (GDFLIB_FilterMA - smoothing factor)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    285
		    Type		    "edit"
		    Name		    "fltPropGainQ"
		    Prompt		    "fltPropGainQ (GFLIB_ControllerPIpAW - proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    286
		    Type		    "edit"
		    Name		    "fltIntegGainQ"
		    Prompt		    "fltIntegGainQ (GFLIB_ControllerPIpAW - integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    287
		    Type		    "edit"
		    Name		    "fltLowerLimitQ"
		    Prompt		    "fltLowerLimitQ (GFLIB_ControllerPIpAW - lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    288
		    Type		    "edit"
		    Name		    "fltUpperLimitQ"
		    Prompt		    "fltUpperLimitQ (GFLIB_ControllerPIpAW - upper limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    289
		    Type		    "edit"
		    Name		    "fltRampUp"
		    Prompt		    "fltRampUp (Ramp up increment coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    290
		    Type		    "edit"
		    Name		    "fltRampDown"
		    Prompt		    "fltRampDown (Ramp decrement coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_SpeedLoop_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"54"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltVelocityReq"
		  SID			  "23:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltVelocityFbck"
		  SID			  "23:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltFilterMAWOut_preset"
		  SID			  "23:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltControllerPIpAWQOut_preset"
		  SID			  "23:9"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  11
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltRampOut_preset"
		  SID			  "23:10"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  12
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "23:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_SpeedLoop_SF"
		  SID			  "23:5"
		  Ports			  [16, 9]
		  Position		  [135, 170, 285, 245]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_SpeedLoop_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,showDebugOutputs,fltLambdaW,fltPropGainQ,fltIntegGainQ,fltLowerLimitQ,"
		  "fltUpperLimitQ,fltRampUp,fltRampDown"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "23:31"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  33
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    291
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "23:34"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  34
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    292
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_SpeedLoop_BAM_FLT.mdl');text(10,75,'PMSM Speed Loop Controller.');text(10,60,'N"
		    "XP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAccW"
		  SID			  "23:44"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  42
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAccW_Out"
		  SID			  "23:48"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  46
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInK_1Q"
		  SID			  "23:46"
		  Position		  [40, 758, 70, 772]
		  ZOrder		  44
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInK_1Q_Out"
		  SID			  "23:50"
		  Position		  [340, 478, 370, 492]
		  ZOrder		  48
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegGainQ"
		  SID			  "23:39"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegPartK_1Q"
		  SID			  "23:45"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  43
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIntegPartK_1Q_Out"
		  SID			  "23:49"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  47
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLambdaW"
		  SID			  "23:37"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimitQ"
		  SID			  "23:40"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltPropGainQ"
		  SID			  "23:38"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  36
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltRampDown"
		  SID			  "23:43"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  41
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltRampUp"
		  SID			  "23:42"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  40
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltState"
		  SID			  "23:47"
		  Position		  [40, 798, 70, 812]
		  ZOrder		  45
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltState_Out"
		  SID			  "23:51"
		  Position		  [340, 518, 370, 532]
		  ZOrder		  49
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimitQ"
		  SID			  "23:41"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltWErr"
		  SID			  "23:53"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  51
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltWFbckFilt"
		  SID			  "23:54"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  52
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltWReqFilt"
		  SID			  "23:52"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  50
		}
		Block {
		  BlockType		  Outport
		  Name			  "pIDQReq"
		  SID			  "23:22"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  24
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlagQ"
		  SID			  "23:23"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  25
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  9
		  DstBlock		  "fltState_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  8
		  DstBlock		  "fltInK_1Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  7
		  DstBlock		  "fltIntegPartK_1Q_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  6
		  DstBlock		  "fltAccW_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  5
		  DstBlock		  "fltWFbckFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  4
		  DstBlock		  "fltWErr"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  3
		  DstBlock		  "fltWReqFilt"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlagQ"
		  DstPort		  1
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "AMCLIB_SpeedLoop_SF"
		  SrcPort		  1
		  DstBlock		  "pIDQReq"
		  DstPort		  1
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "fltState"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  16
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "fltInK_1Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  15
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "fltIntegPartK_1Q"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "fltAccW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "fltRampDown"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "fltRampUp"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "fltUpperLimitQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "fltLowerLimitQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "fltIntegGainQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "fltPropGainQ"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  20
		  SrcBlock		  "fltLambdaW"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  21
		  SrcBlock		  "fltRampOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  22
		  SrcBlock		  "fltControllerPIpAWQOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  23
		  SrcBlock		  "fltFilterMAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  24
		  SrcBlock		  "fltVelocityFbck"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  25
		  SrcBlock		  "fltVelocityReq"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_SpeedLoop_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_TrackObsrv_FLT"
	      SID		      "24"
	      Ports		      [3, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 1000, 255, 1100]
	      ZOrder		      13
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		293
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_TrackObsrv_FLT"
		Description		"Tracking observer in single precision floating-point implementation. This block supports re-initializa"
		"tion of the internal state during simulation. If the block is reset, the outputs of the PI controller and integrator"
		" will be aligned with the inputs fltVelocityOut_preset and fltPosOut_preset. Refer to the AMMCLIB User's Guide for f"
		"urther details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltCC1'], 'BlockType'), 'Inport')\n        posblk = get_param("
		"gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltCC1'], 'Position');\n        orient = get_param( [gcb, '"
		"/fltCC1'], 'Orientation');\n        delete_block(       [gcb, '/fltCC1']);\n        add_block('built-in/Ground', [gc"
		"b, '/fltCC1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltCC2'], 'Position')"
		";\n        orient = get_param( [gcb, '/fltCC2'], 'Orientation');\n        delete_block(       [gcb, '/fltCC2']);\n  "
		"      add_block('built-in/Ground', [gcb, '/fltCC2'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_p"
		"aram(    [gcb, '/fltUpperLimit'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimit'], 'Orientation');"
		"\n        delete_block(       [gcb, '/fltUpperLimit']);\n        add_block('built-in/Ground', [gcb, '/fltUpperLimit'"
		"], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltLowerLimit'], 'Position');\n  "
		"      orient = get_param( [gcb, '/fltLowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLimi"
		"t']);\n        add_block('built-in/Ground', [gcb, '/fltLowerLimit'], 'Position', pos, 'Orientation', orient);\n\n   "
		"     pos = get_param(    [gcb, '/fltC1'], 'Position');\n        orient = get_param( [gcb, '/fltC1'], 'Orientation');"
		"\n        delete_block(       [gcb, '/fltC1']);\n        add_block('built-in/Ground', [gcb, '/fltC1'], 'Position', p"
		"os, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltAcc'], 'Position');\n        orient = get_para"
		"m( [gcb, '/fltAcc'], 'Orientation');\n        delete_block(       [gcb, '/fltAcc']);\n        add_block('built-in/Gr"
		"ound', [gcb, '/fltAcc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltInErrK1'"
		"], 'Position');\n        orient = get_param( [gcb, '/fltInErrK1'], 'Orientation');\n        delete_block(       [gcb"
		", '/fltInErrK1']);\n        add_block('built-in/Ground', [gcb, '/fltInErrK1'], 'Position', pos, 'Orientation', orien"
		"t);\n\n        pos = get_param(    [gcb, '/fltState'], 'Position');\n        orient = get_param( [gcb, '/fltState'],"
		" 'Orientation');\n        delete_block(       [gcb, '/fltState']);\n        add_block('built-in/Ground', [gcb, '/flt"
		"State'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltInK1'], 'Position');\n  "
		"      orient = get_param( [gcb, '/fltInK1'], 'Orientation');\n        delete_block(       [gcb, '/fltInK1']);\n     "
		"   add_block('built-in/Ground', [gcb, '/fltInK1'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_p"
		"aram(    [gcb '/fltAcc_Out'], 'Position');\n        orient = get_param( [gcb '/fltAcc_Out'], 'Orientation');\n      "
		"  delete_block(       [gcb '/fltAcc_Out']);\n        add_block('built-in/Terminator', [gcb '/fltAcc_Out'], 'Position"
		"', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInErrK1_Out'], 'Position');\n        orient"
		" = get_param( [gcb '/fltInErrK1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInErrK1_Out']);\n     "
		"   add_block('built-in/Terminator', [gcb '/fltInErrK1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos"
		" = get_param(    [gcb '/fltState_Out'], 'Position');\n        orient = get_param( [gcb '/fltState_Out'], 'Orientatio"
		"n');\n        delete_block(       [gcb '/fltState_Out']);\n        add_block('built-in/Terminator', [gcb '/fltState_"
		"Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInK1_Out'], 'Position');\n "
		"       orient = get_param( [gcb '/fltInK1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInK1_Out']);"
		"\n        add_block('built-in/Terminator', [gcb '/fltInK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n     "
		"   set_param([gcb '/fltPhaseErr'], 'Port', '1');\n        set_param([gcb '/fltVelocityOut_preset'], 'Port', '2');\n "
		"       set_param([gcb '/fltPosOut_preset'], 'Port', '3');\n\n        set_param([gcb '/pPosEst'], 'Port', '1');\n    "
		"    set_param([gcb '/pVelocityEst'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on',"
		"'on','on'});\n\n        if (posblk(4) - posblk(2)) > 100\n          height = 100;\n          set_param(gcb,'Position"
		"',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n   "
		" if strcmp(get_param([gcb '/fltCC1'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n     "
		"   pos = get_param(    [gcb, '/fltCC1'], 'Position');\n        orient = get_param( [gcb, '/fltCC1'], 'Orientation');"
		"\n        delete_block(       [gcb, '/fltCC1']);\n        add_block('built-in/Inport', [gcb, '/fltCC1'], 'Position',"
		" pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltCC2'], 'Position"
		"');\n        orient = get_param( [gcb, '/fltCC2'], 'Orientation');\n        delete_block(       [gcb, '/fltCC2']);\n"
		"        add_block('built-in/Inport', [gcb, '/fltCC2'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'si"
		"ngle');\n\n        pos = get_param(    [gcb, '/fltUpperLimit'], 'Position');\n        orient = get_param( [gcb, '/fl"
		"tUpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltUpperLimit']);\n        add_block('built-in/I"
		"nport', [gcb, '/fltUpperLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos"
		" = get_param(    [gcb, '/fltLowerLimit'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLimit'], 'Orient"
		"ation');\n        delete_block(       [gcb, '/fltLowerLimit']);\n        add_block('built-in/Inport', [gcb, '/fltLow"
		"erLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb,"
		" '/fltC1'], 'Position');\n        orient = get_param( [gcb, '/fltC1'], 'Orientation');\n        delete_block(       "
		"[gcb, '/fltC1']);\n        add_block('built-in/Inport', [gcb, '/fltC1'], 'Position', pos, 'Orientation', orient, 'Ou"
		"tDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltAcc'], 'Position');\n        orient = get_param("
		" [gcb, '/fltAcc'], 'Orientation');\n        delete_block(       [gcb, '/fltAcc']);\n        add_block('built-in/Inpo"
		"rt', [gcb, '/fltAcc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_par"
		"am(    [gcb, '/fltInErrK1'], 'Position');\n        orient = get_param( [gcb, '/fltInErrK1'], 'Orientation');\n      "
		"  delete_block(       [gcb, '/fltInErrK1']);\n        add_block('built-in/Inport', [gcb, '/fltInErrK1'], 'Position',"
		" pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltState'], 'Positi"
		"on');\n        orient = get_param( [gcb, '/fltState'], 'Orientation');\n        delete_block(       [gcb, '/fltState"
		"']);\n        add_block('built-in/Inport', [gcb, '/fltState'], 'Position', pos, 'Orientation', orient, 'OutDataTypeS"
		"tr', 'single');\n\n        pos = get_param(    [gcb, '/fltInK1'], 'Position');\n        orient = get_param( [gcb, '/"
		"fltInK1'], 'Orientation');\n        delete_block(       [gcb, '/fltInK1']);\n        add_block('built-in/Inport', [g"
		"cb, '/fltInK1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n        pos = get_param( "
		"   [gcb '/fltAcc_Out'], 'Position');\n        orient = get_param( [gcb '/fltAcc_Out'], 'Orientation');\n        dele"
		"te_block(       [gcb '/fltAcc_Out']);\n        add_block('built-in/Outport', [gcb '/fltAcc_Out'], 'Position', pos, '"
		"Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInErrK1_Out'], 'Position');\n        orient = get_pa"
		"ram( [gcb '/fltInErrK1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInErrK1_Out']);\n        add_bl"
		"ock('built-in/Outport', [gcb '/fltInErrK1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param"
		"(    [gcb '/fltState_Out'], 'Position');\n        orient = get_param( [gcb '/fltState_Out'], 'Orientation');\n      "
		"  delete_block(       [gcb '/fltState_Out']);\n        add_block('built-in/Outport', [gcb '/fltState_Out'], 'Positio"
		"n', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInK1_Out'], 'Position');\n        orient ="
		" get_param( [gcb '/fltInK1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInK1_Out']);\n        add_b"
		"lock('built-in/Outport', [gcb '/fltInK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb "
		"'/fltPhaseErr'], 'Port', '1');\n        set_param([gcb '/fltVelocityOut_preset'], 'Port', '2');\n        set_param(["
		"gcb '/fltPosOut_preset'], 'Port', '3');\n        set_param([gcb '/fltCC1'], 'Port', '4');\n        set_param([gcb '/"
		"fltCC2'], 'Port', '5');\n        set_param([gcb '/fltUpperLimit'], 'Port', '6');\n        set_param([gcb '/fltLowerL"
		"imit'], 'Port', '7');\n        set_param([gcb '/fltC1'], 'Port', '8');\n        set_param([gcb '/fltAcc'], 'Port', '"
		"9');\n        set_param([gcb '/fltInErrK1'], 'Port', '10');\n        set_param([gcb '/fltState'], 'Port', '11');\n  "
		"      set_param([gcb '/fltInK1'], 'Port', '12');\n\n        set_param([gcb '/pPosEst'], 'Port', '1');\n        set_p"
		"aram([gcb '/pVelocityEst'], 'Port', '2');\n        set_param([gcb '/fltAcc_Out'], 'Port', '3');\n        set_param(["
		"gcb '/fltInErrK1_Out'], 'Port', '4');\n        set_param([gcb '/fltState_Out'], 'Port', '5');\n        set_param([gc"
		"b '/fltInK1_Out'], 'Port', '6');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off','off'});\n"
		"\n        if (posblk(4) - posblk(2)) < 325\n          height = 325;\n          set_param(gcb,'Position',[posblk(1), "
		"posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'AMCLIB_TrackObsrv_FLT', 'horizontalAlignment', 'center')"
		";\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance"
		")'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  7
		  Object {
		    $ObjectID		    294
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','"
		    "off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    295
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    296
		    Type		    "edit"
		    Name		    "fltCC1sc"
		    Prompt		    "fltCC1sc (GFLIB_ControllerPIrAW - CC1 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    297
		    Type		    "edit"
		    Name		    "fltCC2sc"
		    Prompt		    "fltCC2sc (GFLIB_ControllerPIrAW - CC2 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    298
		    Type		    "edit"
		    Name		    "fltUpperLimit"
		    Prompt		    "fltUpperLimit (GFLIB_ControllerPIrAW - upper Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    299
		    Type		    "edit"
		    Name		    "fltLowerLimit"
		    Prompt		    "fltLowerLimit (GFLIB_ControllerPIrAW - lower Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    300
		    Type		    "edit"
		    Name		    "fltC1"
		    Prompt		    "fltC1 (GFLIB_IntegratorTR - integrator coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_TrackObsrv_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"42"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltPhaseErr"
		  SID			  "24:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltVelocityOut_preset"
		  SID			  "24:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltPosOut_preset"
		  SID			  "24:8"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  10
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "24:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_TrackObsrv_SF"
		  SID			  "24:5"
		  Ports			  [12, 6]
		  Position		  [135, 180, 285, 235]
		  ZOrder		  7
		  FunctionName		  "AMCLIB_TrackObsrv_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,fltCC1sc,fltCC2sc,fltUpperLimit,fltLowerLimit,fltC1"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "24:24"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  26
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    301
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "24:27"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  27
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    302
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_TrackObsrv_BAM_FLT.mdl');text(10,75,'Tracking observer');text(10,60,'NXP 2020')"
		    ";text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAcc"
		  SID			  "24:35"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAcc_Out"
		  SID			  "24:39"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltC1"
		  SID			  "24:34"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC1"
		  SID			  "24:30"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC2"
		  SID			  "24:31"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInErrK1"
		  SID			  "24:36"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  34
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInErrK1_Out"
		  SID			  "24:40"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInK1"
		  SID			  "24:38"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  36
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInK1_Out"
		  SID			  "24:42"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  40
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimit"
		  SID			  "24:33"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltState"
		  SID			  "24:37"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltState_Out"
		  SID			  "24:41"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimit"
		  SID			  "24:32"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Outport
		  Name			  "pPosEst"
		  SID			  "24:18"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  20
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pVelocityEst"
		  SID			  "24:19"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  21
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  6
		  DstBlock		  "fltInK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  5
		  DstBlock		  "fltState_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  4
		  DstBlock		  "fltInErrK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  3
		  DstBlock		  "fltAcc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  2
		  DstBlock		  "pVelocityEst"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_TrackObsrv_SF"
		  SrcPort		  1
		  DstBlock		  "pPosEst"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "fltInK1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "fltState"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "fltInErrK1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "fltAcc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "fltC1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "fltLowerLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "fltUpperLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "fltCC2"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "fltCC1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "fltPosOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "fltVelocityOut_preset"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "fltPhaseErr"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_TrackObsrv_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "AMCLIB_Windmilling_FLT"
	      SID		      "25"
	      Ports		      [1, 3]
	      Position		      [20, 1123, 260, 1227]
	      ZOrder		      14
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		303
		$ClassName		"Simulink.Mask"
		Type			"AMCLIB_Windmilling_FLT"
		Description		"PMSM Windmilling in single precision floating-point implementation. This function detects spontaneous "
		"rotation of an unpowered 3-phase PMSM by measuring the generated back electromotive force. Output u32Lock represents"
		" the return value of the C function (0 = undecided, 1 = spinning, 2 = stopped). Transition from 0 to 1 on the u32Loc"
		"k output can be taken as a reset signal for the following AMCLIB_TrackObsrv_FLT block to synchronize the sensorless "
		"FOC loop with a freewheeling motor. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltADCMaxError'], 'BlockType'), 'Inport')\n        posblk = ge"
		"t_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltADCMaxError'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/fltADCMaxError'], 'Orientation');\n        delete_block(       [gcb, '/fltADCMaxError']);\n        "
		"add_block('built-in/Ground', [gcb, '/fltADCMaxError'], 'Position', pos, 'Orientation', orient);\n\n        pos = get"
		"_param(    [gcb, '/fltCC1sc'], 'Position');\n        orient = get_param( [gcb, '/fltCC1sc'], 'Orientation');\n      "
		"  delete_block(       [gcb, '/fltCC1sc']);\n        add_block('built-in/Ground', [gcb, '/fltCC1sc'], 'Position', pos"
		", 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltCC2sc'], 'Position');\n        orient = get_para"
		"m( [gcb, '/fltCC2sc'], 'Orientation');\n        delete_block(       [gcb, '/fltCC2sc']);\n        add_block('built-i"
		"n/Ground', [gcb, '/fltCC2sc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltUp"
		"perLimit'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimit'], 'Orientation');\n        delete_block"
		"(       [gcb, '/fltUpperLimit']);\n        add_block('built-in/Ground', [gcb, '/fltUpperLimit'], 'Position', pos, 'O"
		"rientation', orient);\n\n        pos = get_param(    [gcb, '/fltLowerLimit'], 'Position');\n        orient = get_par"
		"am( [gcb, '/fltLowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLimit']);\n        add_blo"
		"ck('built-in/Ground', [gcb, '/fltLowerLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param( "
		"   [gcb, '/fltC1'], 'Position');\n        orient = get_param( [gcb, '/fltC1'], 'Orientation');\n        delete_block"
		"(       [gcb, '/fltC1']);\n        add_block('built-in/Ground', [gcb, '/fltC1'], 'Position', pos, 'Orientation', ori"
		"ent);\n\n        pos = get_param(    [gcb, '/fltAccPI'], 'Position');\n        orient = get_param( [gcb, '/fltAccPI'"
		"], 'Orientation');\n        delete_block(       [gcb, '/fltAccPI']);\n        add_block('built-in/Ground', [gcb, '/f"
		"ltAccPI'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltInErrK1'], 'Position')"
		";\n        orient = get_param( [gcb, '/fltInErrK1'], 'Orientation');\n        delete_block(       [gcb, '/fltInErrK1"
		"']);\n        add_block('built-in/Ground', [gcb, '/fltInErrK1'], 'Position', pos, 'Orientation', orient);\n\n       "
		" pos = get_param(    [gcb, '/fltState'], 'Position');\n        orient = get_param( [gcb, '/fltState'], 'Orientation'"
		");\n        delete_block(       [gcb, '/fltState']);\n        add_block('built-in/Ground', [gcb, '/fltState'], 'Posi"
		"tion', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltInK1'], 'Position');\n        orient ="
		" get_param( [gcb, '/fltInK1'], 'Orientation');\n        delete_block(       [gcb, '/fltInK1']);\n        add_block('"
		"built-in/Ground', [gcb, '/fltInK1'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb "
		"'/fltAccPI_Out'], 'Position');\n        orient = get_param( [gcb '/fltAccPI_Out'], 'Orientation');\n        delete_b"
		"lock(       [gcb '/fltAccPI_Out']);\n        add_block('built-in/Terminator', [gcb '/fltAccPI_Out'], 'Position', pos"
		", 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInErrK1_Out'], 'Position');\n        orient = get"
		"_param( [gcb '/fltInErrK1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInErrK1_Out']);\n        add"
		"_block('built-in/Terminator', [gcb '/fltInErrK1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get"
		"_param(    [gcb '/fltState_Out'], 'Position');\n        orient = get_param( [gcb '/fltState_Out'], 'Orientation');\n"
		"        delete_block(       [gcb '/fltState_Out']);\n        add_block('built-in/Terminator', [gcb '/fltState_Out'],"
		" 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInK1_Out'], 'Position');\n       "
		" orient = get_param( [gcb '/fltInK1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInK1_Out']);\n    "
		"    add_block('built-in/Terminator', [gcb '/fltInK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set"
		"_param([gcb '/pUabcIn'], 'Port', '1');\n\n        set_param([gcb '/u32Lock'], 'Port', '1');\n        set_param([gcb "
		"'/pPosEst'], 'Port', '2');\n        set_param([gcb '/pVelocityEst'], 'Port', '3');\n\n        set_param(gcb,'MaskEna"
		"bles',{'on','on','on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 100\n          height = 100;\n "
		"         set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n"
		"    % shown state variables\n    if strcmp(get_param([gcb '/fltADCMaxError'], 'BlockType'), 'Ground')\n        posbl"
		"k = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltADCMaxError'], 'Position');\n        orien"
		"t = get_param( [gcb, '/fltADCMaxError'], 'Orientation');\n        delete_block(       [gcb, '/fltADCMaxError']);\n  "
		"      add_block('built-in/Inport', [gcb, '/fltADCMaxError'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr"
		"', 'single');\n\n        pos = get_param(    [gcb, '/fltCC1sc'], 'Position');\n        orient = get_param( [gcb, '/f"
		"ltCC1sc'], 'Orientation');\n        delete_block(       [gcb, '/fltCC1sc']);\n        add_block('built-in/Inport', ["
		"gcb, '/fltCC1sc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param( "
		"   [gcb, '/fltCC2sc'], 'Position');\n        orient = get_param( [gcb, '/fltCC2sc'], 'Orientation');\n        delete"
		"_block(       [gcb, '/fltCC2sc']);\n        add_block('built-in/Inport', [gcb, '/fltCC2sc'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltUpperLimit'], 'Position');\n"
		"        orient = get_param( [gcb, '/fltUpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltUpperLi"
		"mit']);\n        add_block('built-in/Inport', [gcb, '/fltUpperLimit'], 'Position', pos, 'Orientation', orient, 'OutD"
		"ataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltLowerLimit'], 'Position');\n        orient = get_p"
		"aram( [gcb, '/fltLowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLimit']);\n        add_b"
		"lock('built-in/Inport', [gcb, '/fltLowerLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single')"
		";\n\n        pos = get_param(    [gcb, '/fltC1'], 'Position');\n        orient = get_param( [gcb, '/fltC1'], 'Orient"
		"ation');\n        delete_block(       [gcb, '/fltC1']);\n        add_block('built-in/Inport', [gcb, '/fltC1'], 'Posi"
		"tion', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltAccPI'], '"
		"Position');\n        orient = get_param( [gcb, '/fltAccPI'], 'Orientation');\n        delete_block(       [gcb, '/fl"
		"tAccPI']);\n        add_block('built-in/Inport', [gcb, '/fltAccPI'], 'Position', pos, 'Orientation', orient, 'OutDat"
		"aTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltInErrK1'], 'Position');\n        orient = get_param("
		" [gcb, '/fltInErrK1'], 'Orientation');\n        delete_block(       [gcb, '/fltInErrK1']);\n        add_block('built"
		"-in/Inport', [gcb, '/fltInErrK1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        p"
		"os = get_param(    [gcb, '/fltState'], 'Position');\n        orient = get_param( [gcb, '/fltState'], 'Orientation');"
		"\n        delete_block(       [gcb, '/fltState']);\n        add_block('built-in/Inport', [gcb, '/fltState'], 'Positi"
		"on', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltInK1'], 'Pos"
		"ition');\n        orient = get_param( [gcb, '/fltInK1'], 'Orientation');\n        delete_block(       [gcb, '/fltInK"
		"1']);\n        add_block('built-in/Inport', [gcb, '/fltInK1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeS"
		"tr', 'single');\n\n\n        pos = get_param(    [gcb '/fltAccPI_Out'], 'Position');\n        orient = get_param( [g"
		"cb '/fltAccPI_Out'], 'Orientation');\n        delete_block(       [gcb '/fltAccPI_Out']);\n        add_block('built-"
		"in/Outport', [gcb '/fltAccPI_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f"
		"ltInErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/fltInErrK1_Out'], 'Orientation');\n        delete_"
		"block(       [gcb '/fltInErrK1_Out']);\n        add_block('built-in/Outport', [gcb '/fltInErrK1_Out'], 'Position', p"
		"os, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltState_Out'], 'Position');\n        orient = get"
		"_param( [gcb '/fltState_Out'], 'Orientation');\n        delete_block(       [gcb '/fltState_Out']);\n        add_blo"
		"ck('built-in/Outport', [gcb '/fltState_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(  "
		"  [gcb '/fltInK1_Out'], 'Position');\n        orient = get_param( [gcb '/fltInK1_Out'], 'Orientation');\n        del"
		"ete_block(       [gcb '/fltInK1_Out']);\n        add_block('built-in/Outport', [gcb '/fltInK1_Out'], 'Position', pos"
		", 'Orientation', orient);\n\n\n        set_param([gcb '/pUabcIn'], 'Port', '1');\n        set_param([gcb '/fltADCMax"
		"Error'], 'Port', '2');\n        set_param([gcb '/fltCC1sc'], 'Port', '3');\n        set_param([gcb '/fltCC2sc'], 'Po"
		"rt', '4');\n        set_param([gcb '/fltUpperLimit'], 'Port', '5');\n        set_param([gcb '/fltLowerLimit'], 'Port"
		"', '6');\n        set_param([gcb '/fltC1'], 'Port', '7');\n        set_param([gcb '/fltAccPI'], 'Port', '8');\n     "
		"   set_param([gcb '/fltInErrK1'], 'Port', '9');\n        set_param([gcb '/fltState'], 'Port', '10');\n        set_pa"
		"ram([gcb '/fltInK1'], 'Port', '11');\n\n        set_param([gcb '/u32Lock'], 'Port', '1');\n        set_param([gcb '/"
		"pPosEst'], 'Port', '2');\n        set_param([gcb '/pVelocityEst'], 'Port', '3');\n        set_param([gcb '/fltAccPI_"
		"Out'], 'Port', '4');\n        set_param([gcb '/fltInErrK1_Out'], 'Port', '5');\n        set_param([gcb '/fltState_Ou"
		"t'], 'Port', '6');\n        set_param([gcb '/fltInK1_Out'], 'Port', '7');\n\n        set_param(gcb,'MaskEnables',{'o"
		"n','off','off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 300\n          height = 300;\n    "
		"      set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'AMCLIB_Windmilling_FLT', 'horizontalAlignment', 'center')"
		";\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance"
		")'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  7
		  Object {
		    $ObjectID		    304
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off',"
		    "'off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    305
		    Type		    "edit"
		    Name		    "fltADCMaxError"
		    Prompt		    "fltADCMaxError (Maximum differential offset error between any two phases of the 3-phase voltage-sen"
		    "sing A/D converters.)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    306
		    Type		    "edit"
		    Name		    "fltCC1sc"
		    Prompt		    "fltCC1sc (GFLIB_ControllerPIrAW - CC1 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    307
		    Type		    "edit"
		    Name		    "fltCC2sc"
		    Prompt		    "fltCC2sc (GFLIB_ControllerPIrAW - CC2 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    308
		    Type		    "edit"
		    Name		    "fltUpperLimit"
		    Prompt		    "fltUpperLimit (GFLIB_ControllerPIrAW - upper Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    309
		    Type		    "edit"
		    Name		    "fltLowerLimit"
		    Prompt		    "fltLowerLimit (GFLIB_ControllerPIrAW - lower Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    310
		    Type		    "edit"
		    Name		    "fltC1"
		    Prompt		    "fltC1 (GFLIB_IntegratorTR - integrator coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"AMCLIB_Windmilling_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"42"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pUabcIn"
		  SID			  "25:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_3Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "AMCLIB_Windmilling_SF"
		  SID			  "25:4"
		  Ports			  [11, 7]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "AMCLIB_Windmilling_SF_FLT"
		  Parameters		  "showStates,fltADCMaxError,fltCC1sc,fltCC2sc,fltUpperLimit,fltLowerLimit,fltC1"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "25:23"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  20
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    311
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "25:26"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  21
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    312
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'AMCLIB_Windmilling_BAM_FLT.mdl');text(10,75,'PMSM Windmilling');text(10,60,'NXP 2020')"
		    ";text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltADCMaxError"
		  SID			  "25:29"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAccPI"
		  SID			  "25:35"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAccPI_Out"
		  SID			  "25:39"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltC1"
		  SID			  "25:34"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC1sc"
		  SID			  "25:30"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC2sc"
		  SID			  "25:31"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInErrK1"
		  SID			  "25:36"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInErrK1_Out"
		  SID			  "25:40"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInK1"
		  SID			  "25:38"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInK1_Out"
		  SID			  "25:42"
		  Position		  [340, 438, 370, 452]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimit"
		  SID			  "25:33"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltState"
		  SID			  "25:37"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltState_Out"
		  SID			  "25:41"
		  Position		  [340, 398, 370, 412]
		  ZOrder		  34
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimit"
		  SID			  "25:32"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Outport
		  Name			  "u32Lock"
		  SID			  "25:16"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  13
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pPosEst"
		  SID			  "25:17"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  14
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pVelocityEst"
		  SID			  "25:18"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  15
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  7
		  DstBlock		  "fltInK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  6
		  DstBlock		  "fltState_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  5
		  DstBlock		  "fltInErrK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  4
		  DstBlock		  "fltAccPI_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  3
		  DstBlock		  "pVelocityEst"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  2
		  DstBlock		  "pPosEst"
		  DstPort		  1
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "AMCLIB_Windmilling_SF"
		  SrcPort		  1
		  DstBlock		  "u32Lock"
		  DstPort		  1
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "fltInK1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "fltState"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "fltInErrK1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "fltAccPI"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "fltC1"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "fltLowerLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "fltUpperLimit"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "fltCC2sc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "fltCC1sc"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "fltADCMaxError"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "pUabcIn"
		  SrcPort		  1
		  DstBlock		  "AMCLIB_Windmilling_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "GDFLIB"
      SID		      "26"
      Ports		      []
      Position		      [120, 0, 220, 100]
      ZOrder		      2
      RequestExecContextInheritance off
      System {
	Name			"GDFLIB"
	Location		[100, 100, 900, 600]
	Open			off
	PortBlocksUseCompactNotation off
	SetExecutionDomain	off
	ExecutionDomainType	"Deduce"
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	SimulinkSubDomain	"Simulink"
	Block {
	  BlockType		  SubSystem
	  Name			  "F16"
	  SID			  "27"
	  Ports			  []
	  Position		  [0, 0, 100, 100]
	  ZOrder		  1
	  RequestExecContextInheritance	off
	  System {
	    Name		    "F16"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "GDFLIB_FilterFIR_F16"
	      SID		      "28"
	      Ports		      [1, 1]
	      Position		      [20, 0, 250, 50]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		313
		$ClassName		"Simulink.Mask"
		Type			"GDFLIB_FilterFIR_F16"
		Description		"Finite impulse response filter in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB U"
		"ser's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GDFLIB_FilterFIR_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    314
		    Type		    "edit"
		    Name		    "u16Order"
		    Prompt		    "u16Order (FIR filter order)"
		    Value		    "3"
		  }
		  Object {
		    $ObjectID		    315
		    Type		    "edit"
		    Name		    "pCoefBuf"
		    Prompt		    "pCoefBuf (FIR filter coefficients buffer. The array stores (u16Order + 1) filter coefficients.\nTo "
		    "use this block for code generation, add one extra element after the last filter coefficient\nand make sure the a"
		    "rray is aligned to a 32-bit boundary.)"
		    Value		    "2^15*[0.25 0.25 0.25 0.25 0]"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GDFLIB_FilterFIR_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "29"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GDFLIB_FilterFIR_SF"
		  SID			  "30"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GDFLIB_FilterFIR_SF_F16"
		  Parameters		  "u16Order,pCoefBuf"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "31"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    316
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "32"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    317
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GDFLIB_FilterFIR_BAM_F16.mdl');text(10,75,'FIR filter.');text(10,60,'NXP 2020');text(1"
		    "0,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "33"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GDFLIB_FilterFIR_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterFIR_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GDFLIB_FilterIIR1_F16"
	      SID		      "34"
	      Ports		      [1, 1]
	      Position		      [20, 69, 255, 121]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		318
		$ClassName		"Simulink.Mask"
		Type			"GDFLIB_FilterIIR1_F16"
		Description		"Direct form I first order IIR filter in 16-bit fixed-point fractional implementation. Refer to the AMM"
		"CLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16B0'], 'BlockType'), 'Inport')\n        posblk = get_param(g"
		"cb, 'Position');\n\n        pos = get_param(    [gcb, '/f16B0'], 'Position');\n        orient = get_param( [gcb, '/f"
		"16B0'], 'Orientation');\n        delete_block(       [gcb, '/f16B0']);\n        add_block('built-in/Ground', [gcb, '"
		"/f16B0'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16B1'], 'Position');\n   "
		"     orient = get_param( [gcb, '/f16B1'], 'Orientation');\n        delete_block(       [gcb, '/f16B1']);\n        ad"
		"d_block('built-in/Ground', [gcb, '/f16B1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    "
		"[gcb, '/f16A1'], 'Position');\n        orient = get_param( [gcb, '/f16A1'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/f16A1']);\n        add_block('built-in/Ground', [gcb, '/f16A1'], 'Position', pos, 'Orientation', orient"
		");\n\n        pos = get_param(    [gcb, '/f16FiltBufferX'], 'Position');\n        orient = get_param( [gcb, '/f16Fil"
		"tBufferX'], 'Orientation');\n        delete_block(       [gcb, '/f16FiltBufferX']);\n        add_block('built-in/Gro"
		"und', [gcb, '/f16FiltBufferX'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32F"
		"iltBufferY'], 'Position');\n        orient = get_param( [gcb, '/f32FiltBufferY'], 'Orientation');\n        delete_bl"
		"ock(       [gcb, '/f32FiltBufferY']);\n        add_block('built-in/Ground', [gcb, '/f32FiltBufferY'], 'Position', po"
		"s, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f16FiltBufferX_Out'], 'Position');\n        orien"
		"t = get_param( [gcb '/f16FiltBufferX_Out'], 'Orientation');\n        delete_block(       [gcb '/f16FiltBufferX_Out']"
		");\n        add_block('built-in/Terminator', [gcb '/f16FiltBufferX_Out'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb '/f32FiltBufferY_Out'], 'Position');\n        orient = get_param( [gcb '/f32FiltB"
		"ufferY_Out'], 'Orientation');\n        delete_block(       [gcb '/f32FiltBufferY_Out']);\n        add_block('built-i"
		"n/Terminator', [gcb '/f32FiltBufferY_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f"
		"16In'], 'Port', '1');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'o"
		"n','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Po"
		"sition',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variable"
		"s\n    if strcmp(get_param([gcb '/f16B0'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n"
		"        pos = get_param(    [gcb, '/f16B0'], 'Position');\n        orient = get_param( [gcb, '/f16B0'], 'Orientation"
		"');\n        delete_block(       [gcb, '/f16B0']);\n        add_block('built-in/Inport', [gcb, '/f16B0'], 'Position'"
		", pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16B1'], 'Position'"
		");\n        orient = get_param( [gcb, '/f16B1'], 'Orientation');\n        delete_block(       [gcb, '/f16B1']);\n   "
		"     add_block('built-in/Inport', [gcb, '/f16B1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16'"
		");\n\n        pos = get_param(    [gcb, '/f16A1'], 'Position');\n        orient = get_param( [gcb, '/f16A1'], 'Orien"
		"tation');\n        delete_block(       [gcb, '/f16A1']);\n        add_block('built-in/Inport', [gcb, '/f16A1'], 'Pos"
		"ition', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16FiltBuffer"
		"X'], 'Position');\n        orient = get_param( [gcb, '/f16FiltBufferX'], 'Orientation');\n        delete_block(     "
		"  [gcb, '/f16FiltBufferX']);\n        add_block('built-in/Inport', [gcb, '/f16FiltBufferX'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32FiltBufferY'], 'Position');\n"
		"        orient = get_param( [gcb, '/f32FiltBufferY'], 'Orientation');\n        delete_block(       [gcb, '/f32FiltBu"
		"fferY']);\n        add_block('built-in/Inport', [gcb, '/f32FiltBufferY'], 'Position', pos, 'Orientation', orient, 'O"
		"utDataTypeStr', 'int32');\n\n\n        pos = get_param(    [gcb '/f16FiltBufferX_Out'], 'Position');\n        orient"
		" = get_param( [gcb '/f16FiltBufferX_Out'], 'Orientation');\n        delete_block(       [gcb '/f16FiltBufferX_Out'])"
		";\n        add_block('built-in/Outport', [gcb '/f16FiltBufferX_Out'], 'Position', pos, 'Orientation', orient);\n\n  "
		"      pos = get_param(    [gcb '/f32FiltBufferY_Out'], 'Position');\n        orient = get_param( [gcb '/f32FiltBuffe"
		"rY_Out'], 'Orientation');\n        delete_block(       [gcb '/f32FiltBufferY_Out']);\n        add_block('built-in/Ou"
		"tport', [gcb '/f32FiltBufferY_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16In'],"
		" 'Port', '1');\n        set_param([gcb '/f16B0'], 'Port', '2');\n        set_param([gcb '/f16B1'], 'Port', '3');\n  "
		"      set_param([gcb '/f16A1'], 'Port', '4');\n        set_param([gcb '/f16FiltBufferX'], 'Port', '5');\n        set"
		"_param([gcb '/f32FiltBufferY'], 'Port', '6');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n        set_param"
		"([gcb '/f16FiltBufferX_Out'], 'Port', '2');\n        set_param([gcb '/f32FiltBufferY_Out'], 'Port', '3');\n\n       "
		" set_param(gcb,'MaskEnables',{'on','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 175\n          heigh"
		"t = 175;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    "
		"end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GDFLIB_FilterIIR1_F16', 'horizontalAlignment', 'center');"
		"\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)"
		"'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  4
		  Object {
		    $ObjectID		    319
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off','off'});\n"
		    "end"
		  }
		  Object {
		    $ObjectID		    320
		    Type		    "edit"
		    Name		    "f16B0"
		    Prompt		    "f16B0 (B0 coefficient of the IIR1 filter in 16-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    321
		    Type		    "edit"
		    Name		    "f16B1"
		    Prompt		    "f16B1 (B1 coefficient of the IIR1 filter in 16-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    322
		    Type		    "edit"
		    Name		    "f16A1"
		    Prompt		    "f16A1 (A1 coefficient of the IIR1 filter in 16-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GDFLIB_FilterIIR1_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"26"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "34:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GDFLIB_FilterIIR1_SF"
		  SID			  "34:4"
		  Ports			  [6, 3]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GDFLIB_FilterIIR1_SF_F16"
		  Parameters		  "showStates,f16B0,f16B1,f16A1"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "34:14"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  11
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    323
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "34:17"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  12
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    324
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GDFLIB_FilterIIR1_BAM_F16.mdl');text(10,75,'First order IIR filter.');text(10,60,'NXP "
		    "2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16A1"
		  SID			  "34:22"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  15
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16B0"
		  SID			  "34:20"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  13
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16B1"
		  SID			  "34:21"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  14
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16FiltBufferX"
		  SID			  "34:23"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  16
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16FiltBufferX_Out"
		  SID			  "34:25"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  18
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32FiltBufferY"
		  SID			  "34:24"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  17
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FiltBufferY_Out"
		  SID			  "34:26"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  19
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "34:11"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GDFLIB_FilterIIR1_SF"
		  SrcPort		  3
		  DstBlock		  "f32FiltBufferY_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GDFLIB_FilterIIR1_SF"
		  SrcPort		  2
		  DstBlock		  "f16FiltBufferX_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GDFLIB_FilterIIR1_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32FiltBufferY"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f16FiltBufferX"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f16A1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f16B1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f16B0"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GDFLIB_FilterIIR2_F16"
	      SID		      "35"
	      Ports		      [1, 1]
	      Position		      [20, 140, 255, 190]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		325
		$ClassName		"Simulink.Mask"
		Type			"GDFLIB_FilterIIR2_F16"
		Description		"Direct form I second order IIR filter in 16-bit fixed-point fractional implementation. Refer to the AM"
		"MCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16FiltBufferX1'], 'BlockType'), 'Inport')\n        posblk = g"
		"et_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16FiltBufferX1'], 'Position');\n        orient = "
		"get_param( [gcb, '/f16FiltBufferX1'], 'Orientation');\n        delete_block(       [gcb, '/f16FiltBufferX1']);\n    "
		"    add_block('built-in/Ground', [gcb, '/f16FiltBufferX1'], 'Position', pos, 'Orientation', orient);\n\n        pos "
		"= get_param(    [gcb, '/f16FiltBufferX2'], 'Position');\n        orient = get_param( [gcb, '/f16FiltBufferX2'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/f16FiltBufferX2']);\n        add_block('built-in/Ground', [gcb, '/f"
		"16FiltBufferX2'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32FiltBufferY1'],"
		" 'Position');\n        orient = get_param( [gcb, '/f32FiltBufferY1'], 'Orientation');\n        delete_block(       ["
		"gcb, '/f32FiltBufferY1']);\n        add_block('built-in/Ground', [gcb, '/f32FiltBufferY1'], 'Position', pos, 'Orient"
		"ation', orient);\n\n        pos = get_param(    [gcb, '/f32FiltBufferY2'], 'Position');\n        orient = get_param("
		" [gcb, '/f32FiltBufferY2'], 'Orientation');\n        delete_block(       [gcb, '/f32FiltBufferY2']);\n        add_bl"
		"ock('built-in/Ground', [gcb, '/f32FiltBufferY2'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_para"
		"m(    [gcb, '/f16B0'], 'Position');\n        orient = get_param( [gcb, '/f16B0'], 'Orientation');\n        delete_bl"
		"ock(       [gcb, '/f16B0']);\n        add_block('built-in/Ground', [gcb, '/f16B0'], 'Position', pos, 'Orientation', "
		"orient);\n\n        pos = get_param(    [gcb, '/f16B1'], 'Position');\n        orient = get_param( [gcb, '/f16B1'], "
		"'Orientation');\n        delete_block(       [gcb, '/f16B1']);\n        add_block('built-in/Ground', [gcb, '/f16B1']"
		", 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16B2'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/f16B2'], 'Orientation');\n        delete_block(       [gcb, '/f16B2']);\n        add_block("
		"'built-in/Ground', [gcb, '/f16B2'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/"
		"f16A1'], 'Position');\n        orient = get_param( [gcb, '/f16A1'], 'Orientation');\n        delete_block(       [gc"
		"b, '/f16A1']);\n        add_block('built-in/Ground', [gcb, '/f16A1'], 'Position', pos, 'Orientation', orient);\n\n  "
		"      pos = get_param(    [gcb, '/f16A2'], 'Position');\n        orient = get_param( [gcb, '/f16A2'], 'Orientation')"
		";\n        delete_block(       [gcb, '/f16A2']);\n        add_block('built-in/Ground', [gcb, '/f16A2'], 'Position', "
		"pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/FilterBufferX1_Out'], 'Position');\n        ori"
		"ent = get_param( [gcb '/FilterBufferX1_Out'], 'Orientation');\n        delete_block(       [gcb '/FilterBufferX1_Out"
		"']);\n        add_block('built-in/Terminator', [gcb '/FilterBufferX1_Out'], 'Position', pos, 'Orientation', orient);"
		"\n\n        pos = get_param(    [gcb '/FilterBufferX2_Out'], 'Position');\n        orient = get_param( [gcb '/Filter"
		"BufferX2_Out'], 'Orientation');\n        delete_block(       [gcb '/FilterBufferX2_Out']);\n        add_block('built"
		"-in/Terminator', [gcb '/FilterBufferX2_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(  "
		"  [gcb '/FilterBufferY1_Out'], 'Position');\n        orient = get_param( [gcb '/FilterBufferY1_Out'], 'Orientation')"
		";\n        delete_block(       [gcb '/FilterBufferY1_Out']);\n        add_block('built-in/Terminator', [gcb '/Filter"
		"BufferY1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/FilterBufferY2_Out'],"
		" 'Position');\n        orient = get_param( [gcb '/FilterBufferY2_Out'], 'Orientation');\n        delete_block(      "
		" [gcb '/FilterBufferY2_Out']);\n        add_block('built-in/Terminator', [gcb '/FilterBufferY2_Out'], 'Position', po"
		"s, 'Orientation', orient);\n\n\n        set_param([gcb '/f16In'], 'Port', '1');\n\n        set_param([gcb '/f16Out']"
		", 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on'});\n\n        if (posblk(4) - "
		"posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk"
		"(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f16FiltBufferX"
		"1'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f1"
		"6FiltBufferX1'], 'Position');\n        orient = get_param( [gcb, '/f16FiltBufferX1'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/f16FiltBufferX1']);\n        add_block('built-in/Inport', [gcb, '/f16FiltBufferX1'], 'Positio"
		"n', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16FiltBufferX2']"
		", 'Position');\n        orient = get_param( [gcb, '/f16FiltBufferX2'], 'Orientation');\n        delete_block(       "
		"[gcb, '/f16FiltBufferX2']);\n        add_block('built-in/Inport', [gcb, '/f16FiltBufferX2'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32FiltBufferY1'], 'Position');\n"
		"        orient = get_param( [gcb, '/f32FiltBufferY1'], 'Orientation');\n        delete_block(       [gcb, '/f32FiltB"
		"ufferY1']);\n        add_block('built-in/Inport', [gcb, '/f32FiltBufferY1'], 'Position', pos, 'Orientation', orient,"
		" 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32FiltBufferY2'], 'Position');\n        orient "
		"= get_param( [gcb, '/f32FiltBufferY2'], 'Orientation');\n        delete_block(       [gcb, '/f32FiltBufferY2']);\n  "
		"      add_block('built-in/Inport', [gcb, '/f32FiltBufferY2'], 'Position', pos, 'Orientation', orient, 'OutDataTypeSt"
		"r', 'int32');\n\n        pos = get_param(    [gcb, '/f16B0'], 'Position');\n        orient = get_param( [gcb, '/f16B"
		"0'], 'Orientation');\n        delete_block(       [gcb, '/f16B0']);\n        add_block('built-in/Inport', [gcb, '/f1"
		"6B0'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f1"
		"6B1'], 'Position');\n        orient = get_param( [gcb, '/f16B1'], 'Orientation');\n        delete_block(       [gcb,"
		" '/f16B1']);\n        add_block('built-in/Inport', [gcb, '/f16B1'], 'Position', pos, 'Orientation', orient, 'OutData"
		"TypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16B2'], 'Position');\n        orient = get_param( [gcb, "
		"'/f16B2'], 'Orientation');\n        delete_block(       [gcb, '/f16B2']);\n        add_block('built-in/Inport', [gcb"
		", '/f16B2'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb"
		", '/f16A1'], 'Position');\n        orient = get_param( [gcb, '/f16A1'], 'Orientation');\n        delete_block(      "
		" [gcb, '/f16A1']);\n        add_block('built-in/Inport', [gcb, '/f16A1'], 'Position', pos, 'Orientation', orient, 'O"
		"utDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16A2'], 'Position');\n        orient = get_param( "
		"[gcb, '/f16A2'], 'Orientation');\n        delete_block(       [gcb, '/f16A2']);\n        add_block('built-in/Inport'"
		", [gcb, '/f16A2'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n\n        pos = get_param("
		"    [gcb '/FilterBufferX1_Out'], 'Position');\n        orient = get_param( [gcb '/FilterBufferX1_Out'], 'Orientation"
		"');\n        delete_block(       [gcb '/FilterBufferX1_Out']);\n        add_block('built-in/Outport', [gcb '/FilterB"
		"ufferX1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/FilterBufferX2_Out'], "
		"'Position');\n        orient = get_param( [gcb '/FilterBufferX2_Out'], 'Orientation');\n        delete_block(       "
		"[gcb '/FilterBufferX2_Out']);\n        add_block('built-in/Outport', [gcb '/FilterBufferX2_Out'], 'Position', pos, '"
		"Orientation', orient);\n\n        pos = get_param(    [gcb '/FilterBufferY1_Out'], 'Position');\n        orient = ge"
		"t_param( [gcb '/FilterBufferY1_Out'], 'Orientation');\n        delete_block(       [gcb '/FilterBufferY1_Out']);\n  "
		"      add_block('built-in/Outport', [gcb '/FilterBufferY1_Out'], 'Position', pos, 'Orientation', orient);\n\n       "
		" pos = get_param(    [gcb '/FilterBufferY2_Out'], 'Position');\n        orient = get_param( [gcb '/FilterBufferY2_Ou"
		"t'], 'Orientation');\n        delete_block(       [gcb '/FilterBufferY2_Out']);\n        add_block('built-in/Outport"
		"', [gcb '/FilterBufferY2_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16In'], 'Por"
		"t', '1');\n        set_param([gcb '/f16FiltBufferX1'], 'Port', '2');\n        set_param([gcb '/f16FiltBufferX2'], 'P"
		"ort', '3');\n        set_param([gcb '/f32FiltBufferY1'], 'Port', '4');\n        set_param([gcb '/f32FiltBufferY2'], "
		"'Port', '5');\n        set_param([gcb '/f16B0'], 'Port', '6');\n        set_param([gcb '/f16B1'], 'Port', '7');\n   "
		"     set_param([gcb '/f16B2'], 'Port', '8');\n        set_param([gcb '/f16A1'], 'Port', '9');\n        set_param([gc"
		"b '/f16A2'], 'Port', '10');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n        set_param([gcb '/FilterBuff"
		"erX1_Out'], 'Port', '2');\n        set_param([gcb '/FilterBufferX2_Out'], 'Port', '3');\n        set_param([gcb '/Fi"
		"lterBufferY1_Out'], 'Port', '4');\n        set_param([gcb '/FilterBufferY2_Out'], 'Port', '5');\n\n        set_param"
		"(gcb,'MaskEnables',{'on','off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 275\n          hei"
		"ght = 275;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n  "
		"  end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GDFLIB_FilterIIR2_F16', 'horizontalAlignment', 'center');"
		"\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)"
		"'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  6
		  Object {
		    $ObjectID		    326
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off'"
		    ",'off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    327
		    Type		    "edit"
		    Name		    "f16B0"
		    Prompt		    "f16B0 (B0 coefficient of the IIR2 filter in 16-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    328
		    Type		    "edit"
		    Name		    "f16B1"
		    Prompt		    "f16B1 (B1 coefficient of the IIR2 filter in 16-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    329
		    Type		    "edit"
		    Name		    "f16B2"
		    Prompt		    "f16B2 (B2 coefficient of the IIR2 filter in 16-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    330
		    Type		    "edit"
		    Name		    "f16A1"
		    Prompt		    "f16A1 (A1 coefficient of the IIR2 filter in 16-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    331
		    Type		    "edit"
		    Name		    "f16A2"
		    Prompt		    "f16A2 (A2 coefficient of the IIR2 filter in 16-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GDFLIB_FilterIIR2_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"38"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "35:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Terminator
		  Name			  "FilterBufferX1_Out"
		  SID			  "35:35"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Terminator
		  Name			  "FilterBufferX2_Out"
		  SID			  "35:36"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Terminator
		  Name			  "FilterBufferY1_Out"
		  SID			  "35:37"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Terminator
		  Name			  "FilterBufferY2_Out"
		  SID			  "35:38"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  31
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GDFLIB_FilterIIR2_SF"
		  SID			  "35:4"
		  Ports			  [10, 5]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GDFLIB_FilterIIR2_SF_F16"
		  Parameters		  "showStates,f16B0,f16B1,f16B2,f16A1,f16A2"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "35:20"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  17
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    332
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "35:23"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  18
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    333
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GDFLIB_FilterIIR2_BAM_F16.mdl');text(10,75,'First order IIR filter.');text(10,60,'NXP "
		    "2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16A1"
		  SID			  "35:33"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16A2"
		  SID			  "35:34"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16B0"
		  SID			  "35:30"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16B1"
		  SID			  "35:31"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16B2"
		  SID			  "35:32"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16FiltBufferX1"
		  SID			  "35:26"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  19
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16FiltBufferX2"
		  SID			  "35:27"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  20
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32FiltBufferY1"
		  SID			  "35:28"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32FiltBufferY2"
		  SID			  "35:29"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "35:15"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  12
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  5
		  DstBlock		  "FilterBufferY2_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  4
		  DstBlock		  "FilterBufferY1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  3
		  DstBlock		  "FilterBufferX2_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  2
		  DstBlock		  "FilterBufferX1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f16A2"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f16A1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f16B2"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f16B1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f16B0"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f32FiltBufferY2"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "f32FiltBufferY1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "f16FiltBufferX2"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f16FiltBufferX1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GDFLIB_FilterMA_F16"
	      SID		      "36"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 210, 245, 285]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		334
		$ClassName		"Simulink.Mask"
		Type			"GDFLIB_FilterMA_F16"
		Description		"Exponential moving average filter in 16-bit fixed-point fractional implementation. This block supports"
		" re-initialization of the internal state during simulation. If the block is reset, the filter's output will be align"
		"ed with the input f16FilterMAOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/u16NSamples'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/u16NSamples'], 'Position');\n        orient = get_para"
		"m( [gcb, '/u16NSamples'], 'Orientation');\n        delete_block(       [gcb, '/u16NSamples']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/u16NSamples'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/f32Acc'], 'Orientation');\n        delete_block(    "
		"   [gcb, '/f32Acc']);\n        add_block('built-in/Ground', [gcb, '/f32Acc'], 'Position', pos, 'Orientation', orient"
		");\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n        orient = get_param( [gcb '/f32Acc_Out"
		"'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n        add_block('built-in/Terminator', [gc"
		"b '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16In'], 'Port', '1');\n   "
		"     set_param([gcb '/f16FilterMAOut_preset'], 'Port', '2');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n\n"
		"        set_param(gcb,'MaskEnables',{'on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height "
		"= 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end"
		"\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/u16NSamples'], 'BlockType'), 'Ground')\n        "
		"posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/u16NSamples'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/u16NSamples'], 'Orientation');\n        delete_block(       [gcb, '/u16NSamples']);\n      "
		"  add_block('built-in/Inport', [gcb, '/u16NSamples'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uin"
		"t16');\n\n        pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/f32Acc'], "
		"'Orientation');\n        delete_block(       [gcb, '/f32Acc']);\n        add_block('built-in/Inport', [gcb, '/f32Acc"
		"'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n        pos = get_param(    [gcb '/f32A"
		"cc_Out'], 'Position');\n        orient = get_param( [gcb '/f32Acc_Out'], 'Orientation');\n        delete_block(     "
		"  [gcb '/f32Acc_Out']);\n        add_block('built-in/Outport', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', "
		"orient);\n\n\n        set_param([gcb '/f16In'], 'Port', '1');\n        set_param([gcb '/f16FilterMAOut_preset'], 'Po"
		"rt', '2');\n        set_param([gcb '/u16NSamples'], 'Port', '3');\n        set_param([gcb '/f32Acc'], 'Port', '4');\n"
		"\n        set_param([gcb '/f16Out'], 'Port', '1');\n        set_param([gcb '/f32Acc_Out'], 'Port', '2');\n\n        "
		"set_param(gcb,'MaskEnables',{'on','on','off'});\n\n        if (posblk(4) - posblk(2)) < 125\n          height = 125;"
		"\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend"
		"\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GDFLIB_FilterMA_F16', 'horizontalAlignment', 'center');\n"
		"if showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)']"
		", 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  3
		  Object {
		    $ObjectID		    335
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    336
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    337
		    Type		    "edit"
		    Name		    "u16NSamples"
		    Prompt		    "u16NSamples (Recalculated smoothing factor in the range 0 to 15)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GDFLIB_FilterMA_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"20"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "36:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16FilterMAOut_preset"
		  SID			  "36:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "36:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GDFLIB_FilterMA_SF"
		  SID			  "36:5"
		  Ports			  [4, 2]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GDFLIB_FilterMA_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,u16NSamples"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "36:12"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  14
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    338
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "36:15"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  15
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    339
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GDFLIB_FilterMA_BAM_F16.mdl');text(10,75,'Exponential moving average filter.');text(10"
		    ",60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc"
		  SID			  "36:19"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  17
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Out"
		  SID			  "36:20"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  18
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NSamples"
		  SID			  "36:18"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  16
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "36:10"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  12
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GDFLIB_FilterMA_SF"
		  SrcPort		  2
		  DstBlock		  "f32Acc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GDFLIB_FilterMA_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32Acc"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterMA_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "u16NSamples"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterMA_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f16FilterMAOut_preset"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterMA_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterMA_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "F32"
	  SID			  "37"
	  Ports			  []
	  Position		  [120, 0, 220, 100]
	  ZOrder		  2
	  RequestExecContextInheritance	off
	  System {
	    Name		    "F32"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "GDFLIB_FilterFIR_F32"
	      SID		      "38"
	      Ports		      [1, 1]
	      Position		      [20, 0, 250, 50]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		340
		$ClassName		"Simulink.Mask"
		Type			"GDFLIB_FilterFIR_F32"
		Description		"Finite impulse response filter in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB U"
		"ser's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GDFLIB_FilterFIR_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    341
		    Type		    "edit"
		    Name		    "u32Order"
		    Prompt		    "u32Order (FIR filter order)"
		    Value		    "3"
		  }
		  Object {
		    $ObjectID		    342
		    Type		    "edit"
		    Name		    "pCoefBuf"
		    Prompt		    "pCoefBuf (FIR filter coefficients buffer. The array stores (u32Order + 1) filter coefficients.)"
		    Value		    "2^31*[0.25 0.25 0.25 0.25]"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GDFLIB_FilterFIR_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "39"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GDFLIB_FilterFIR_SF"
		  SID			  "40"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GDFLIB_FilterFIR_SF_F32"
		  Parameters		  "u32Order,pCoefBuf"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "41"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    343
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "42"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    344
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GDFLIB_FilterFIR_BAM_F32.mdl');text(10,75,'FIR filter.');text(10,60,'NXP 2020');text(1"
		    "0,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "43"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GDFLIB_FilterFIR_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterFIR_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GDFLIB_FilterIIR1_F32"
	      SID		      "44"
	      Ports		      [1, 1]
	      Position		      [20, 69, 255, 121]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		345
		$ClassName		"Simulink.Mask"
		Type			"GDFLIB_FilterIIR1_F32"
		Description		"Direct form I first order IIR filter in 32-bit fixed-point fractional implementation. Refer to the AMM"
		"CLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32B0'], 'BlockType'), 'Inport')\n        posblk = get_param(g"
		"cb, 'Position');\n\n        pos = get_param(    [gcb, '/f32B0'], 'Position');\n        orient = get_param( [gcb, '/f"
		"32B0'], 'Orientation');\n        delete_block(       [gcb, '/f32B0']);\n        add_block('built-in/Ground', [gcb, '"
		"/f32B0'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32B1'], 'Position');\n   "
		"     orient = get_param( [gcb, '/f32B1'], 'Orientation');\n        delete_block(       [gcb, '/f32B1']);\n        ad"
		"d_block('built-in/Ground', [gcb, '/f32B1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    "
		"[gcb, '/f32A1'], 'Position');\n        orient = get_param( [gcb, '/f32A1'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/f32A1']);\n        add_block('built-in/Ground', [gcb, '/f32A1'], 'Position', pos, 'Orientation', orient"
		");\n\n        pos = get_param(    [gcb, '/f32FiltBufferX'], 'Position');\n        orient = get_param( [gcb, '/f32Fil"
		"tBufferX'], 'Orientation');\n        delete_block(       [gcb, '/f32FiltBufferX']);\n        add_block('built-in/Gro"
		"und', [gcb, '/f32FiltBufferX'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32F"
		"iltBufferY'], 'Position');\n        orient = get_param( [gcb, '/f32FiltBufferY'], 'Orientation');\n        delete_bl"
		"ock(       [gcb, '/f32FiltBufferY']);\n        add_block('built-in/Ground', [gcb, '/f32FiltBufferY'], 'Position', po"
		"s, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f32FiltBufferX_Out'], 'Position');\n        orien"
		"t = get_param( [gcb '/f32FiltBufferX_Out'], 'Orientation');\n        delete_block(       [gcb '/f32FiltBufferX_Out']"
		");\n        add_block('built-in/Terminator', [gcb '/f32FiltBufferX_Out'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb '/f32FiltBufferY_Out'], 'Position');\n        orient = get_param( [gcb '/f32FiltB"
		"ufferY_Out'], 'Orientation');\n        delete_block(       [gcb '/f32FiltBufferY_Out']);\n        add_block('built-i"
		"n/Terminator', [gcb '/f32FiltBufferY_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f"
		"32In'], 'Port', '1');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'o"
		"n','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Po"
		"sition',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variable"
		"s\n    if strcmp(get_param([gcb '/f32B0'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n"
		"        pos = get_param(    [gcb, '/f32B0'], 'Position');\n        orient = get_param( [gcb, '/f32B0'], 'Orientation"
		"');\n        delete_block(       [gcb, '/f32B0']);\n        add_block('built-in/Inport', [gcb, '/f32B0'], 'Position'"
		", pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32B1'], 'Position'"
		");\n        orient = get_param( [gcb, '/f32B1'], 'Orientation');\n        delete_block(       [gcb, '/f32B1']);\n   "
		"     add_block('built-in/Inport', [gcb, '/f32B1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32'"
		");\n\n        pos = get_param(    [gcb, '/f32A1'], 'Position');\n        orient = get_param( [gcb, '/f32A1'], 'Orien"
		"tation');\n        delete_block(       [gcb, '/f32A1']);\n        add_block('built-in/Inport', [gcb, '/f32A1'], 'Pos"
		"ition', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32FiltBuffer"
		"X'], 'Position');\n        orient = get_param( [gcb, '/f32FiltBufferX'], 'Orientation');\n        delete_block(     "
		"  [gcb, '/f32FiltBufferX']);\n        add_block('built-in/Inport', [gcb, '/f32FiltBufferX'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32FiltBufferY'], 'Position');\n"
		"        orient = get_param( [gcb, '/f32FiltBufferY'], 'Orientation');\n        delete_block(       [gcb, '/f32FiltBu"
		"fferY']);\n        add_block('built-in/Inport', [gcb, '/f32FiltBufferY'], 'Position', pos, 'Orientation', orient, 'O"
		"utDataTypeStr', 'int32');\n\n\n        pos = get_param(    [gcb '/f32FiltBufferX_Out'], 'Position');\n        orient"
		" = get_param( [gcb '/f32FiltBufferX_Out'], 'Orientation');\n        delete_block(       [gcb '/f32FiltBufferX_Out'])"
		";\n        add_block('built-in/Outport', [gcb '/f32FiltBufferX_Out'], 'Position', pos, 'Orientation', orient);\n\n  "
		"      pos = get_param(    [gcb '/f32FiltBufferY_Out'], 'Position');\n        orient = get_param( [gcb '/f32FiltBuffe"
		"rY_Out'], 'Orientation');\n        delete_block(       [gcb '/f32FiltBufferY_Out']);\n        add_block('built-in/Ou"
		"tport', [gcb '/f32FiltBufferY_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32In'],"
		" 'Port', '1');\n        set_param([gcb '/f32B0'], 'Port', '2');\n        set_param([gcb '/f32B1'], 'Port', '3');\n  "
		"      set_param([gcb '/f32A1'], 'Port', '4');\n        set_param([gcb '/f32FiltBufferX'], 'Port', '5');\n        set"
		"_param([gcb '/f32FiltBufferY'], 'Port', '6');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n        set_param"
		"([gcb '/f32FiltBufferX_Out'], 'Port', '2');\n        set_param([gcb '/f32FiltBufferY_Out'], 'Port', '3');\n\n       "
		" set_param(gcb,'MaskEnables',{'on','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 175\n          heigh"
		"t = 175;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    "
		"end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GDFLIB_FilterIIR1_F32', 'horizontalAlignment', 'center');"
		"\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)"
		"'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  4
		  Object {
		    $ObjectID		    346
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off','off'});\n"
		    "end"
		  }
		  Object {
		    $ObjectID		    347
		    Type		    "edit"
		    Name		    "f32B0"
		    Prompt		    "f32B0 (B0 coefficient of the IIR1 filter in 32-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    348
		    Type		    "edit"
		    Name		    "f32B1"
		    Prompt		    "f32B1 (B1 coefficient of the IIR1 filter in 32-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    349
		    Type		    "edit"
		    Name		    "f32A1"
		    Prompt		    "f32A1 (A1 coefficient of the IIR1 filter in 32-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GDFLIB_FilterIIR1_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"26"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "44:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GDFLIB_FilterIIR1_SF"
		  SID			  "44:4"
		  Ports			  [6, 3]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GDFLIB_FilterIIR1_SF_F32"
		  Parameters		  "showStates,f32B0,f32B1,f32A1"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "44:14"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  11
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    350
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "44:17"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  12
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    351
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GDFLIB_FilterIIR1_BAM_F32.mdl');text(10,75,'First order IIR filter.');text(10,60,'NXP "
		    "2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32A1"
		  SID			  "44:22"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  15
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32B0"
		  SID			  "44:20"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  13
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32B1"
		  SID			  "44:21"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  14
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32FiltBufferX"
		  SID			  "44:23"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  16
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FiltBufferX_Out"
		  SID			  "44:25"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  18
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32FiltBufferY"
		  SID			  "44:24"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  17
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32FiltBufferY_Out"
		  SID			  "44:26"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  19
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "44:11"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GDFLIB_FilterIIR1_SF"
		  SrcPort		  3
		  DstBlock		  "f32FiltBufferY_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GDFLIB_FilterIIR1_SF"
		  SrcPort		  2
		  DstBlock		  "f32FiltBufferX_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GDFLIB_FilterIIR1_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32FiltBufferY"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32FiltBufferX"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32A1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f32B1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32B0"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GDFLIB_FilterIIR2_F32"
	      SID		      "45"
	      Ports		      [1, 1]
	      Position		      [20, 140, 255, 190]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		352
		$ClassName		"Simulink.Mask"
		Type			"GDFLIB_FilterIIR2_F32"
		Description		"Direct form I second order IIR filter in 32-bit fixed-point fractional implementation. Refer to the AM"
		"MCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32FiltBufferX1'], 'BlockType'), 'Inport')\n        posblk = g"
		"et_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32FiltBufferX1'], 'Position');\n        orient = "
		"get_param( [gcb, '/f32FiltBufferX1'], 'Orientation');\n        delete_block(       [gcb, '/f32FiltBufferX1']);\n    "
		"    add_block('built-in/Ground', [gcb, '/f32FiltBufferX1'], 'Position', pos, 'Orientation', orient);\n\n        pos "
		"= get_param(    [gcb, '/f32FiltBufferX2'], 'Position');\n        orient = get_param( [gcb, '/f32FiltBufferX2'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/f32FiltBufferX2']);\n        add_block('built-in/Ground', [gcb, '/f"
		"32FiltBufferX2'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32FiltBufferY1'],"
		" 'Position');\n        orient = get_param( [gcb, '/f32FiltBufferY1'], 'Orientation');\n        delete_block(       ["
		"gcb, '/f32FiltBufferY1']);\n        add_block('built-in/Ground', [gcb, '/f32FiltBufferY1'], 'Position', pos, 'Orient"
		"ation', orient);\n\n        pos = get_param(    [gcb, '/f32FiltBufferY2'], 'Position');\n        orient = get_param("
		" [gcb, '/f32FiltBufferY2'], 'Orientation');\n        delete_block(       [gcb, '/f32FiltBufferY2']);\n        add_bl"
		"ock('built-in/Ground', [gcb, '/f32FiltBufferY2'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_para"
		"m(    [gcb, '/f32B0'], 'Position');\n        orient = get_param( [gcb, '/f32B0'], 'Orientation');\n        delete_bl"
		"ock(       [gcb, '/f32B0']);\n        add_block('built-in/Ground', [gcb, '/f32B0'], 'Position', pos, 'Orientation', "
		"orient);\n\n        pos = get_param(    [gcb, '/f32B1'], 'Position');\n        orient = get_param( [gcb, '/f32B1'], "
		"'Orientation');\n        delete_block(       [gcb, '/f32B1']);\n        add_block('built-in/Ground', [gcb, '/f32B1']"
		", 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32B2'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/f32B2'], 'Orientation');\n        delete_block(       [gcb, '/f32B2']);\n        add_block("
		"'built-in/Ground', [gcb, '/f32B2'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/"
		"f32A1'], 'Position');\n        orient = get_param( [gcb, '/f32A1'], 'Orientation');\n        delete_block(       [gc"
		"b, '/f32A1']);\n        add_block('built-in/Ground', [gcb, '/f32A1'], 'Position', pos, 'Orientation', orient);\n\n  "
		"      pos = get_param(    [gcb, '/f32A2'], 'Position');\n        orient = get_param( [gcb, '/f32A2'], 'Orientation')"
		";\n        delete_block(       [gcb, '/f32A2']);\n        add_block('built-in/Ground', [gcb, '/f32A2'], 'Position', "
		"pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/FilterBufferX1_Out'], 'Position');\n        ori"
		"ent = get_param( [gcb '/FilterBufferX1_Out'], 'Orientation');\n        delete_block(       [gcb '/FilterBufferX1_Out"
		"']);\n        add_block('built-in/Terminator', [gcb '/FilterBufferX1_Out'], 'Position', pos, 'Orientation', orient);"
		"\n\n        pos = get_param(    [gcb '/FilterBufferX2_Out'], 'Position');\n        orient = get_param( [gcb '/Filter"
		"BufferX2_Out'], 'Orientation');\n        delete_block(       [gcb '/FilterBufferX2_Out']);\n        add_block('built"
		"-in/Terminator', [gcb '/FilterBufferX2_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(  "
		"  [gcb '/FilterBufferY1_Out'], 'Position');\n        orient = get_param( [gcb '/FilterBufferY1_Out'], 'Orientation')"
		";\n        delete_block(       [gcb '/FilterBufferY1_Out']);\n        add_block('built-in/Terminator', [gcb '/Filter"
		"BufferY1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/FilterBufferY2_Out'],"
		" 'Position');\n        orient = get_param( [gcb '/FilterBufferY2_Out'], 'Orientation');\n        delete_block(      "
		" [gcb '/FilterBufferY2_Out']);\n        add_block('built-in/Terminator', [gcb '/FilterBufferY2_Out'], 'Position', po"
		"s, 'Orientation', orient);\n\n\n        set_param([gcb '/f32In'], 'Port', '1');\n\n        set_param([gcb '/f32Out']"
		", 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on'});\n\n        if (posblk(4) - "
		"posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk"
		"(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f32FiltBufferX"
		"1'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f3"
		"2FiltBufferX1'], 'Position');\n        orient = get_param( [gcb, '/f32FiltBufferX1'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/f32FiltBufferX1']);\n        add_block('built-in/Inport', [gcb, '/f32FiltBufferX1'], 'Positio"
		"n', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32FiltBufferX2']"
		", 'Position');\n        orient = get_param( [gcb, '/f32FiltBufferX2'], 'Orientation');\n        delete_block(       "
		"[gcb, '/f32FiltBufferX2']);\n        add_block('built-in/Inport', [gcb, '/f32FiltBufferX2'], 'Position', pos, 'Orien"
		"tation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32FiltBufferY1'], 'Position');\n"
		"        orient = get_param( [gcb, '/f32FiltBufferY1'], 'Orientation');\n        delete_block(       [gcb, '/f32FiltB"
		"ufferY1']);\n        add_block('built-in/Inport', [gcb, '/f32FiltBufferY1'], 'Position', pos, 'Orientation', orient,"
		" 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32FiltBufferY2'], 'Position');\n        orient "
		"= get_param( [gcb, '/f32FiltBufferY2'], 'Orientation');\n        delete_block(       [gcb, '/f32FiltBufferY2']);\n  "
		"      add_block('built-in/Inport', [gcb, '/f32FiltBufferY2'], 'Position', pos, 'Orientation', orient, 'OutDataTypeSt"
		"r', 'int32');\n\n        pos = get_param(    [gcb, '/f32B0'], 'Position');\n        orient = get_param( [gcb, '/f32B"
		"0'], 'Orientation');\n        delete_block(       [gcb, '/f32B0']);\n        add_block('built-in/Inport', [gcb, '/f3"
		"2B0'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f3"
		"2B1'], 'Position');\n        orient = get_param( [gcb, '/f32B1'], 'Orientation');\n        delete_block(       [gcb,"
		" '/f32B1']);\n        add_block('built-in/Inport', [gcb, '/f32B1'], 'Position', pos, 'Orientation', orient, 'OutData"
		"TypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32B2'], 'Position');\n        orient = get_param( [gcb, "
		"'/f32B2'], 'Orientation');\n        delete_block(       [gcb, '/f32B2']);\n        add_block('built-in/Inport', [gcb"
		", '/f32B2'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb"
		", '/f32A1'], 'Position');\n        orient = get_param( [gcb, '/f32A1'], 'Orientation');\n        delete_block(      "
		" [gcb, '/f32A1']);\n        add_block('built-in/Inport', [gcb, '/f32A1'], 'Position', pos, 'Orientation', orient, 'O"
		"utDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32A2'], 'Position');\n        orient = get_param( "
		"[gcb, '/f32A2'], 'Orientation');\n        delete_block(       [gcb, '/f32A2']);\n        add_block('built-in/Inport'"
		", [gcb, '/f32A2'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n        pos = get_param("
		"    [gcb '/FilterBufferX1_Out'], 'Position');\n        orient = get_param( [gcb '/FilterBufferX1_Out'], 'Orientation"
		"');\n        delete_block(       [gcb '/FilterBufferX1_Out']);\n        add_block('built-in/Outport', [gcb '/FilterB"
		"ufferX1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/FilterBufferX2_Out'], "
		"'Position');\n        orient = get_param( [gcb '/FilterBufferX2_Out'], 'Orientation');\n        delete_block(       "
		"[gcb '/FilterBufferX2_Out']);\n        add_block('built-in/Outport', [gcb '/FilterBufferX2_Out'], 'Position', pos, '"
		"Orientation', orient);\n\n        pos = get_param(    [gcb '/FilterBufferY1_Out'], 'Position');\n        orient = ge"
		"t_param( [gcb '/FilterBufferY1_Out'], 'Orientation');\n        delete_block(       [gcb '/FilterBufferY1_Out']);\n  "
		"      add_block('built-in/Outport', [gcb '/FilterBufferY1_Out'], 'Position', pos, 'Orientation', orient);\n\n       "
		" pos = get_param(    [gcb '/FilterBufferY2_Out'], 'Position');\n        orient = get_param( [gcb '/FilterBufferY2_Ou"
		"t'], 'Orientation');\n        delete_block(       [gcb '/FilterBufferY2_Out']);\n        add_block('built-in/Outport"
		"', [gcb '/FilterBufferY2_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32In'], 'Por"
		"t', '1');\n        set_param([gcb '/f32FiltBufferX1'], 'Port', '2');\n        set_param([gcb '/f32FiltBufferX2'], 'P"
		"ort', '3');\n        set_param([gcb '/f32FiltBufferY1'], 'Port', '4');\n        set_param([gcb '/f32FiltBufferY2'], "
		"'Port', '5');\n        set_param([gcb '/f32B0'], 'Port', '6');\n        set_param([gcb '/f32B1'], 'Port', '7');\n   "
		"     set_param([gcb '/f32B2'], 'Port', '8');\n        set_param([gcb '/f32A1'], 'Port', '9');\n        set_param([gc"
		"b '/f32A2'], 'Port', '10');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n        set_param([gcb '/FilterBuff"
		"erX1_Out'], 'Port', '2');\n        set_param([gcb '/FilterBufferX2_Out'], 'Port', '3');\n        set_param([gcb '/Fi"
		"lterBufferY1_Out'], 'Port', '4');\n        set_param([gcb '/FilterBufferY2_Out'], 'Port', '5');\n\n        set_param"
		"(gcb,'MaskEnables',{'on','off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 275\n          hei"
		"ght = 275;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n  "
		"  end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GDFLIB_FilterIIR2_F32', 'horizontalAlignment', 'center');"
		"\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)"
		"'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  6
		  Object {
		    $ObjectID		    353
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off'"
		    ",'off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    354
		    Type		    "edit"
		    Name		    "f32B0"
		    Prompt		    "f32B0 (B0 coefficient of the IIR2 filter in 32-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    355
		    Type		    "edit"
		    Name		    "f32B1"
		    Prompt		    "f32B1 (B1 coefficient of the IIR2 filter in 32-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    356
		    Type		    "edit"
		    Name		    "f32B2"
		    Prompt		    "f32B2 (B2 coefficient of the IIR2 filter in 32-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    357
		    Type		    "edit"
		    Name		    "f32A1"
		    Prompt		    "f32A1 (A1 coefficient of the IIR2 filter in 32-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    358
		    Type		    "edit"
		    Name		    "f32A2"
		    Prompt		    "f32A2 (A2 coefficient of the IIR2 filter in 32-bit fixed-point fractional format)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GDFLIB_FilterIIR2_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"38"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "45:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Terminator
		  Name			  "FilterBufferX1_Out"
		  SID			  "45:35"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Terminator
		  Name			  "FilterBufferX2_Out"
		  SID			  "45:36"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Terminator
		  Name			  "FilterBufferY1_Out"
		  SID			  "45:37"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Terminator
		  Name			  "FilterBufferY2_Out"
		  SID			  "45:38"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  31
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GDFLIB_FilterIIR2_SF"
		  SID			  "45:4"
		  Ports			  [10, 5]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GDFLIB_FilterIIR2_SF_F32"
		  Parameters		  "showStates,f32B0,f32B1,f32B2,f32A1,f32A2"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "45:20"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  17
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    359
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "45:23"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  18
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    360
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GDFLIB_FilterIIR2_BAM_F32.mdl');text(10,75,'First order IIR filter.');text(10,60,'NXP "
		    "2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32A1"
		  SID			  "45:33"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32A2"
		  SID			  "45:34"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32B0"
		  SID			  "45:30"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32B1"
		  SID			  "45:31"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32B2"
		  SID			  "45:32"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32FiltBufferX1"
		  SID			  "45:26"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  19
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32FiltBufferX2"
		  SID			  "45:27"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  20
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32FiltBufferY1"
		  SID			  "45:28"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32FiltBufferY2"
		  SID			  "45:29"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "45:15"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  12
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  5
		  DstBlock		  "FilterBufferY2_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  4
		  DstBlock		  "FilterBufferY1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  3
		  DstBlock		  "FilterBufferX2_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  2
		  DstBlock		  "FilterBufferX1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32A2"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f32A1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32B2"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f32B1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f32B0"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f32FiltBufferY2"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "f32FiltBufferY1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "f32FiltBufferX2"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f32FiltBufferX1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GDFLIB_FilterMA_F32"
	      SID		      "46"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 210, 245, 285]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		361
		$ClassName		"Simulink.Mask"
		Type			"GDFLIB_FilterMA_F32"
		Description		"Exponential moving average filter in 32-bit fixed-point fractional implementation. This block supports"
		" re-initialization of the internal state during simulation. If the block is reset, the filter's output will be align"
		"ed with the input f32FilterMAOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/u16NSamples'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/u16NSamples'], 'Position');\n        orient = get_para"
		"m( [gcb, '/u16NSamples'], 'Orientation');\n        delete_block(       [gcb, '/u16NSamples']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/u16NSamples'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/f32Acc'], 'Orientation');\n        delete_block(    "
		"   [gcb, '/f32Acc']);\n        add_block('built-in/Ground', [gcb, '/f32Acc'], 'Position', pos, 'Orientation', orient"
		");\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n        orient = get_param( [gcb '/f32Acc_Out"
		"'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n        add_block('built-in/Terminator', [gc"
		"b '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32In'], 'Port', '1');\n   "
		"     set_param([gcb '/f32FilterMAOut_preset'], 'Port', '2');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n\n"
		"        set_param(gcb,'MaskEnables',{'on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height "
		"= 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end"
		"\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/u16NSamples'], 'BlockType'), 'Ground')\n        "
		"posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/u16NSamples'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/u16NSamples'], 'Orientation');\n        delete_block(       [gcb, '/u16NSamples']);\n      "
		"  add_block('built-in/Inport', [gcb, '/u16NSamples'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uin"
		"t16');\n\n        pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/f32Acc'], "
		"'Orientation');\n        delete_block(       [gcb, '/f32Acc']);\n        add_block('built-in/Inport', [gcb, '/f32Acc"
		"'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n        pos = get_param(    [gcb '/f32A"
		"cc_Out'], 'Position');\n        orient = get_param( [gcb '/f32Acc_Out'], 'Orientation');\n        delete_block(     "
		"  [gcb '/f32Acc_Out']);\n        add_block('built-in/Outport', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', "
		"orient);\n\n\n        set_param([gcb '/f32In'], 'Port', '1');\n        set_param([gcb '/f32FilterMAOut_preset'], 'Po"
		"rt', '2');\n        set_param([gcb '/u16NSamples'], 'Port', '3');\n        set_param([gcb '/f32Acc'], 'Port', '4');\n"
		"\n        set_param([gcb '/f32Out'], 'Port', '1');\n        set_param([gcb '/f32Acc_Out'], 'Port', '2');\n\n        "
		"set_param(gcb,'MaskEnables',{'on','on','off'});\n\n        if (posblk(4) - posblk(2)) < 125\n          height = 125;"
		"\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend"
		"\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GDFLIB_FilterMA_F32', 'horizontalAlignment', 'center');\n"
		"if showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)']"
		", 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  3
		  Object {
		    $ObjectID		    362
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    363
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    364
		    Type		    "edit"
		    Name		    "u16NSamples"
		    Prompt		    "u16NSamples (Recalculated smoothing factor in the range 0 to 31)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GDFLIB_FilterMA_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"20"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "46:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32FilterMAOut_preset"
		  SID			  "46:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "46:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GDFLIB_FilterMA_SF"
		  SID			  "46:5"
		  Ports			  [4, 2]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GDFLIB_FilterMA_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,u16NSamples"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "46:12"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  14
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    365
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "46:15"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  15
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    366
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GDFLIB_FilterMA_BAM_F32.mdl');text(10,75,'Exponential moving average filter.');text(10"
		    ",60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc"
		  SID			  "46:19"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  17
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Out"
		  SID			  "46:20"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  18
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NSamples"
		  SID			  "46:18"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  16
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "46:10"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  12
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GDFLIB_FilterMA_SF"
		  SrcPort		  2
		  DstBlock		  "f32Acc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GDFLIB_FilterMA_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32Acc"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterMA_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "u16NSamples"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterMA_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32FilterMAOut_preset"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterMA_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterMA_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "FLT"
	  SID			  "47"
	  Ports			  []
	  Position		  [240, 0, 340, 100]
	  ZOrder		  3
	  RequestExecContextInheritance	off
	  System {
	    Name		    "FLT"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "GDFLIB_FilterFIR_FLT"
	      SID		      "48"
	      Ports		      [1, 1]
	      Position		      [20, 0, 250, 50]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		367
		$ClassName		"Simulink.Mask"
		Type			"GDFLIB_FilterFIR_FLT"
		Description		"Finite impulse response filter in single precision floating-point implementation. Refer to the AMMCLIB"
		" User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GDFLIB_FilterFIR_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    368
		    Type		    "edit"
		    Name		    "u32Order"
		    Prompt		    "u32Order (FIR filter order)"
		    Value		    "3"
		  }
		  Object {
		    $ObjectID		    369
		    Type		    "edit"
		    Name		    "pCoefBuf"
		    Prompt		    "pCoefBuf (FIR filter coefficients buffer. The array stores (u32Order + 1) filter coefficients.)"
		    Value		    "[0.25 0.25 0.25 0.25]"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GDFLIB_FilterFIR_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "49"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GDFLIB_FilterFIR_SF"
		  SID			  "50"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GDFLIB_FilterFIR_SF_FLT"
		  Parameters		  "u32Order,pCoefBuf"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "51"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    370
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "52"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    371
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GDFLIB_FilterFIR_BAM_FLT.mdl');text(10,75,'FIR filter.');text(10,60,'NXP 2020');text(1"
		    "0,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "53"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GDFLIB_FilterFIR_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterFIR_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GDFLIB_FilterIIR1_FLT"
	      SID		      "54"
	      Ports		      [1, 1]
	      Position		      [20, 69, 255, 121]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		372
		$ClassName		"Simulink.Mask"
		Type			"GDFLIB_FilterIIR1_FLT"
		Description		"Direct form I first order IIR filter in single precision floating-point implementation. Refer to the A"
		"MMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltB0'], 'BlockType'), 'Inport')\n        posblk = get_param(g"
		"cb, 'Position');\n\n        pos = get_param(    [gcb, '/fltB0'], 'Position');\n        orient = get_param( [gcb, '/f"
		"ltB0'], 'Orientation');\n        delete_block(       [gcb, '/fltB0']);\n        add_block('built-in/Ground', [gcb, '"
		"/fltB0'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltB1'], 'Position');\n   "
		"     orient = get_param( [gcb, '/fltB1'], 'Orientation');\n        delete_block(       [gcb, '/fltB1']);\n        ad"
		"d_block('built-in/Ground', [gcb, '/fltB1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    "
		"[gcb, '/fltA1'], 'Position');\n        orient = get_param( [gcb, '/fltA1'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/fltA1']);\n        add_block('built-in/Ground', [gcb, '/fltA1'], 'Position', pos, 'Orientation', orient"
		");\n\n        pos = get_param(    [gcb, '/fltFiltBufferX'], 'Position');\n        orient = get_param( [gcb, '/fltFil"
		"tBufferX'], 'Orientation');\n        delete_block(       [gcb, '/fltFiltBufferX']);\n        add_block('built-in/Gro"
		"und', [gcb, '/fltFiltBufferX'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltF"
		"iltBufferY'], 'Position');\n        orient = get_param( [gcb, '/fltFiltBufferY'], 'Orientation');\n        delete_bl"
		"ock(       [gcb, '/fltFiltBufferY']);\n        add_block('built-in/Ground', [gcb, '/fltFiltBufferY'], 'Position', po"
		"s, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/fltFiltBufferX_Out'], 'Position');\n        orien"
		"t = get_param( [gcb '/fltFiltBufferX_Out'], 'Orientation');\n        delete_block(       [gcb '/fltFiltBufferX_Out']"
		");\n        add_block('built-in/Terminator', [gcb '/fltFiltBufferX_Out'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb '/fltFiltBufferY_Out'], 'Position');\n        orient = get_param( [gcb '/fltFiltB"
		"ufferY_Out'], 'Orientation');\n        delete_block(       [gcb '/fltFiltBufferY_Out']);\n        add_block('built-i"
		"n/Terminator', [gcb '/fltFiltBufferY_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f"
		"ltIn'], 'Port', '1');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'o"
		"n','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Po"
		"sition',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variable"
		"s\n    if strcmp(get_param([gcb '/fltB0'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n"
		"        pos = get_param(    [gcb, '/fltB0'], 'Position');\n        orient = get_param( [gcb, '/fltB0'], 'Orientation"
		"');\n        delete_block(       [gcb, '/fltB0']);\n        add_block('built-in/Inport', [gcb, '/fltB0'], 'Position'"
		", pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltB1'], 'Position"
		"');\n        orient = get_param( [gcb, '/fltB1'], 'Orientation');\n        delete_block(       [gcb, '/fltB1']);\n  "
		"      add_block('built-in/Inport', [gcb, '/fltB1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'singl"
		"e');\n\n        pos = get_param(    [gcb, '/fltA1'], 'Position');\n        orient = get_param( [gcb, '/fltA1'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/fltA1']);\n        add_block('built-in/Inport', [gcb, '/fltA1'], 'P"
		"osition', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltFiltBuf"
		"ferX'], 'Position');\n        orient = get_param( [gcb, '/fltFiltBufferX'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/fltFiltBufferX']);\n        add_block('built-in/Inport', [gcb, '/fltFiltBufferX'], 'Position', pos, 'Or"
		"ientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltFiltBufferY'], 'Position'"
		");\n        orient = get_param( [gcb, '/fltFiltBufferY'], 'Orientation');\n        delete_block(       [gcb, '/fltFi"
		"ltBufferY']);\n        add_block('built-in/Inport', [gcb, '/fltFiltBufferY'], 'Position', pos, 'Orientation', orient"
		", 'OutDataTypeStr', 'single');\n\n\n        pos = get_param(    [gcb '/fltFiltBufferX_Out'], 'Position');\n        o"
		"rient = get_param( [gcb '/fltFiltBufferX_Out'], 'Orientation');\n        delete_block(       [gcb '/fltFiltBufferX_O"
		"ut']);\n        add_block('built-in/Outport', [gcb '/fltFiltBufferX_Out'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb '/fltFiltBufferY_Out'], 'Position');\n        orient = get_param( [gcb '/fltFiltB"
		"ufferY_Out'], 'Orientation');\n        delete_block(       [gcb '/fltFiltBufferY_Out']);\n        add_block('built-i"
		"n/Outport', [gcb '/fltFiltBufferY_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/fltI"
		"n'], 'Port', '1');\n        set_param([gcb '/fltB0'], 'Port', '2');\n        set_param([gcb '/fltB1'], 'Port', '3');"
		"\n        set_param([gcb '/fltA1'], 'Port', '4');\n        set_param([gcb '/fltFiltBufferX'], 'Port', '5');\n       "
		" set_param([gcb '/fltFiltBufferY'], 'Port', '6');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n        set_p"
		"aram([gcb '/fltFiltBufferX_Out'], 'Port', '2');\n        set_param([gcb '/fltFiltBufferY_Out'], 'Port', '3');\n\n   "
		"     set_param(gcb,'MaskEnables',{'on','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 175\n          h"
		"eight = 175;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n"
		"    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GDFLIB_FilterIIR1_FLT', 'horizontalAlignment', 'center');"
		"\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)"
		"'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  4
		  Object {
		    $ObjectID		    373
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off','off'});\n"
		    "end"
		  }
		  Object {
		    $ObjectID		    374
		    Type		    "edit"
		    Name		    "fltB0"
		    Prompt		    "fltB0 (B0 coefficient of the IIR1 filter in single precision floating-point format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    375
		    Type		    "edit"
		    Name		    "fltB1"
		    Prompt		    "fltB1 (B1 coefficient of the IIR1 filter in single precision floating-point format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    376
		    Type		    "edit"
		    Name		    "fltA1"
		    Prompt		    "fltA1 (A1 coefficient of the IIR1 filter in single precision floating-point format)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GDFLIB_FilterIIR1_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"26"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "54:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GDFLIB_FilterIIR1_SF"
		  SID			  "54:4"
		  Ports			  [6, 3]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GDFLIB_FilterIIR1_SF_FLT"
		  Parameters		  "showStates,fltB0,fltB1,fltA1"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "54:14"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  11
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    377
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "54:17"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  12
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    378
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GDFLIB_FilterIIR1_BAM_FLT.mdl');text(10,75,'First order IIR filter.');text(10,60,'NXP "
		    "2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltA1"
		  SID			  "54:22"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  15
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltB0"
		  SID			  "54:20"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  13
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltB1"
		  SID			  "54:21"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  14
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltFiltBufferX"
		  SID			  "54:23"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  16
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltFiltBufferX_Out"
		  SID			  "54:25"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  18
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltFiltBufferY"
		  SID			  "54:24"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  17
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltFiltBufferY_Out"
		  SID			  "54:26"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  19
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "54:11"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GDFLIB_FilterIIR1_SF"
		  SrcPort		  3
		  DstBlock		  "fltFiltBufferY_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GDFLIB_FilterIIR1_SF"
		  SrcPort		  2
		  DstBlock		  "fltFiltBufferX_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GDFLIB_FilterIIR1_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltFiltBufferY"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "fltFiltBufferX"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltA1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "fltB1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "fltB0"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR1_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GDFLIB_FilterIIR2_FLT"
	      SID		      "55"
	      Ports		      [1, 1]
	      Position		      [20, 140, 255, 190]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		379
		$ClassName		"Simulink.Mask"
		Type			"GDFLIB_FilterIIR2_FLT"
		Description		"Direct form I second order IIR filter in single precision floating-point implementation. Refer to the "
		"AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltFiltBufferX1'], 'BlockType'), 'Inport')\n        posblk = g"
		"et_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltFiltBufferX1'], 'Position');\n        orient = "
		"get_param( [gcb, '/fltFiltBufferX1'], 'Orientation');\n        delete_block(       [gcb, '/fltFiltBufferX1']);\n    "
		"    add_block('built-in/Ground', [gcb, '/fltFiltBufferX1'], 'Position', pos, 'Orientation', orient);\n\n        pos "
		"= get_param(    [gcb, '/fltFiltBufferX2'], 'Position');\n        orient = get_param( [gcb, '/fltFiltBufferX2'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/fltFiltBufferX2']);\n        add_block('built-in/Ground', [gcb, '/f"
		"ltFiltBufferX2'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltFiltBufferY1'],"
		" 'Position');\n        orient = get_param( [gcb, '/fltFiltBufferY1'], 'Orientation');\n        delete_block(       ["
		"gcb, '/fltFiltBufferY1']);\n        add_block('built-in/Ground', [gcb, '/fltFiltBufferY1'], 'Position', pos, 'Orient"
		"ation', orient);\n\n        pos = get_param(    [gcb, '/fltFiltBufferY2'], 'Position');\n        orient = get_param("
		" [gcb, '/fltFiltBufferY2'], 'Orientation');\n        delete_block(       [gcb, '/fltFiltBufferY2']);\n        add_bl"
		"ock('built-in/Ground', [gcb, '/fltFiltBufferY2'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_para"
		"m(    [gcb, '/fltB0'], 'Position');\n        orient = get_param( [gcb, '/fltB0'], 'Orientation');\n        delete_bl"
		"ock(       [gcb, '/fltB0']);\n        add_block('built-in/Ground', [gcb, '/fltB0'], 'Position', pos, 'Orientation', "
		"orient);\n\n        pos = get_param(    [gcb, '/fltB1'], 'Position');\n        orient = get_param( [gcb, '/fltB1'], "
		"'Orientation');\n        delete_block(       [gcb, '/fltB1']);\n        add_block('built-in/Ground', [gcb, '/fltB1']"
		", 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltB2'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/fltB2'], 'Orientation');\n        delete_block(       [gcb, '/fltB2']);\n        add_block("
		"'built-in/Ground', [gcb, '/fltB2'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/"
		"fltA1'], 'Position');\n        orient = get_param( [gcb, '/fltA1'], 'Orientation');\n        delete_block(       [gc"
		"b, '/fltA1']);\n        add_block('built-in/Ground', [gcb, '/fltA1'], 'Position', pos, 'Orientation', orient);\n\n  "
		"      pos = get_param(    [gcb, '/fltA2'], 'Position');\n        orient = get_param( [gcb, '/fltA2'], 'Orientation')"
		";\n        delete_block(       [gcb, '/fltA2']);\n        add_block('built-in/Ground', [gcb, '/fltA2'], 'Position', "
		"pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/FilterBufferX1_Out'], 'Position');\n        ori"
		"ent = get_param( [gcb '/FilterBufferX1_Out'], 'Orientation');\n        delete_block(       [gcb '/FilterBufferX1_Out"
		"']);\n        add_block('built-in/Terminator', [gcb '/FilterBufferX1_Out'], 'Position', pos, 'Orientation', orient);"
		"\n\n        pos = get_param(    [gcb '/FilterBufferX2_Out'], 'Position');\n        orient = get_param( [gcb '/Filter"
		"BufferX2_Out'], 'Orientation');\n        delete_block(       [gcb '/FilterBufferX2_Out']);\n        add_block('built"
		"-in/Terminator', [gcb '/FilterBufferX2_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(  "
		"  [gcb '/FilterBufferY1_Out'], 'Position');\n        orient = get_param( [gcb '/FilterBufferY1_Out'], 'Orientation')"
		";\n        delete_block(       [gcb '/FilterBufferY1_Out']);\n        add_block('built-in/Terminator', [gcb '/Filter"
		"BufferY1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/FilterBufferY2_Out'],"
		" 'Position');\n        orient = get_param( [gcb '/FilterBufferY2_Out'], 'Orientation');\n        delete_block(      "
		" [gcb '/FilterBufferY2_Out']);\n        add_block('built-in/Terminator', [gcb '/FilterBufferY2_Out'], 'Position', po"
		"s, 'Orientation', orient);\n\n\n        set_param([gcb '/fltIn'], 'Port', '1');\n\n        set_param([gcb '/fltOut']"
		", 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on'});\n\n        if (posblk(4) - "
		"posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk"
		"(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/fltFiltBufferX"
		"1'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fl"
		"tFiltBufferX1'], 'Position');\n        orient = get_param( [gcb, '/fltFiltBufferX1'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/fltFiltBufferX1']);\n        add_block('built-in/Inport', [gcb, '/fltFiltBufferX1'], 'Positio"
		"n', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltFiltBufferX2'"
		"], 'Position');\n        orient = get_param( [gcb, '/fltFiltBufferX2'], 'Orientation');\n        delete_block(      "
		" [gcb, '/fltFiltBufferX2']);\n        add_block('built-in/Inport', [gcb, '/fltFiltBufferX2'], 'Position', pos, 'Orie"
		"ntation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltFiltBufferY1'], 'Position')"
		";\n        orient = get_param( [gcb, '/fltFiltBufferY1'], 'Orientation');\n        delete_block(       [gcb, '/fltFi"
		"ltBufferY1']);\n        add_block('built-in/Inport', [gcb, '/fltFiltBufferY1'], 'Position', pos, 'Orientation', orie"
		"nt, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltFiltBufferY2'], 'Position');\n        ori"
		"ent = get_param( [gcb, '/fltFiltBufferY2'], 'Orientation');\n        delete_block(       [gcb, '/fltFiltBufferY2']);"
		"\n        add_block('built-in/Inport', [gcb, '/fltFiltBufferY2'], 'Position', pos, 'Orientation', orient, 'OutDataTy"
		"peStr', 'single');\n\n        pos = get_param(    [gcb, '/fltB0'], 'Position');\n        orient = get_param( [gcb, '"
		"/fltB0'], 'Orientation');\n        delete_block(       [gcb, '/fltB0']);\n        add_block('built-in/Inport', [gcb,"
		" '/fltB0'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb"
		", '/fltB1'], 'Position');\n        orient = get_param( [gcb, '/fltB1'], 'Orientation');\n        delete_block(      "
		" [gcb, '/fltB1']);\n        add_block('built-in/Inport', [gcb, '/fltB1'], 'Position', pos, 'Orientation', orient, 'O"
		"utDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltB2'], 'Position');\n        orient = get_param("
		" [gcb, '/fltB2'], 'Orientation');\n        delete_block(       [gcb, '/fltB2']);\n        add_block('built-in/Inport"
		"', [gcb, '/fltB2'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param("
		"    [gcb, '/fltA1'], 'Position');\n        orient = get_param( [gcb, '/fltA1'], 'Orientation');\n        delete_bloc"
		"k(       [gcb, '/fltA1']);\n        add_block('built-in/Inport', [gcb, '/fltA1'], 'Position', pos, 'Orientation', or"
		"ient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltA2'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/fltA2'], 'Orientation');\n        delete_block(       [gcb, '/fltA2']);\n        add_block('built-i"
		"n/Inport', [gcb, '/fltA2'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n        pos = "
		"get_param(    [gcb '/FilterBufferX1_Out'], 'Position');\n        orient = get_param( [gcb '/FilterBufferX1_Out'], 'O"
		"rientation');\n        delete_block(       [gcb '/FilterBufferX1_Out']);\n        add_block('built-in/Outport', [gcb"
		" '/FilterBufferX1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/FilterBuffer"
		"X2_Out'], 'Position');\n        orient = get_param( [gcb '/FilterBufferX2_Out'], 'Orientation');\n        delete_blo"
		"ck(       [gcb '/FilterBufferX2_Out']);\n        add_block('built-in/Outport', [gcb '/FilterBufferX2_Out'], 'Positio"
		"n', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/FilterBufferY1_Out'], 'Position');\n        o"
		"rient = get_param( [gcb '/FilterBufferY1_Out'], 'Orientation');\n        delete_block(       [gcb '/FilterBufferY1_O"
		"ut']);\n        add_block('built-in/Outport', [gcb '/FilterBufferY1_Out'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb '/FilterBufferY2_Out'], 'Position');\n        orient = get_param( [gcb '/FilterBu"
		"fferY2_Out'], 'Orientation');\n        delete_block(       [gcb '/FilterBufferY2_Out']);\n        add_block('built-i"
		"n/Outport', [gcb '/FilterBufferY2_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/fltI"
		"n'], 'Port', '1');\n        set_param([gcb '/fltFiltBufferX1'], 'Port', '2');\n        set_param([gcb '/fltFiltBuffe"
		"rX2'], 'Port', '3');\n        set_param([gcb '/fltFiltBufferY1'], 'Port', '4');\n        set_param([gcb '/fltFiltBuf"
		"ferY2'], 'Port', '5');\n        set_param([gcb '/fltB0'], 'Port', '6');\n        set_param([gcb '/fltB1'], 'Port', '"
		"7');\n        set_param([gcb '/fltB2'], 'Port', '8');\n        set_param([gcb '/fltA1'], 'Port', '9');\n        set_"
		"param([gcb '/fltA2'], 'Port', '10');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n        set_param([gcb '/F"
		"ilterBufferX1_Out'], 'Port', '2');\n        set_param([gcb '/FilterBufferX2_Out'], 'Port', '3');\n        set_param("
		"[gcb '/FilterBufferY1_Out'], 'Port', '4');\n        set_param([gcb '/FilterBufferY2_Out'], 'Port', '5');\n\n        "
		"set_param(gcb,'MaskEnables',{'on','off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 275\n    "
		"      height = 275;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n      "
		"  end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GDFLIB_FilterIIR2_FLT', 'horizontalAlignment', 'center');"
		"\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)"
		"'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  6
		  Object {
		    $ObjectID		    380
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off'"
		    ",'off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    381
		    Type		    "edit"
		    Name		    "fltB0"
		    Prompt		    "fltB0 (B0 coefficient of the IIR2 filter in single precision floating-point format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    382
		    Type		    "edit"
		    Name		    "fltB1"
		    Prompt		    "fltB1 (B1 coefficient of the IIR2 filter in single precision floating-point format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    383
		    Type		    "edit"
		    Name		    "fltB2"
		    Prompt		    "fltB2 (B2 coefficient of the IIR2 filter in single precision floating-point format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    384
		    Type		    "edit"
		    Name		    "fltA1"
		    Prompt		    "fltA1 (A1 coefficient of the IIR2 filter in single precision floating-point format)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    385
		    Type		    "edit"
		    Name		    "fltA2"
		    Prompt		    "fltA2 (A2 coefficient of the IIR2 filter in single precision floating-point format)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GDFLIB_FilterIIR2_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"38"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "55:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Terminator
		  Name			  "FilterBufferX1_Out"
		  SID			  "55:35"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Terminator
		  Name			  "FilterBufferX2_Out"
		  SID			  "55:36"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Terminator
		  Name			  "FilterBufferY1_Out"
		  SID			  "55:37"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Terminator
		  Name			  "FilterBufferY2_Out"
		  SID			  "55:38"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  31
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GDFLIB_FilterIIR2_SF"
		  SID			  "55:4"
		  Ports			  [10, 5]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GDFLIB_FilterIIR2_SF_FLT"
		  Parameters		  "showStates,fltB0,fltB1,fltB2,fltA1,fltA2"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "55:20"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  17
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    386
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "55:23"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  18
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    387
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GDFLIB_FilterIIR2_BAM_FLT.mdl');text(10,75,'First order IIR filter.');text(10,60,'NXP "
		    "2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltA1"
		  SID			  "55:33"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltA2"
		  SID			  "55:34"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltB0"
		  SID			  "55:30"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltB1"
		  SID			  "55:31"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltB2"
		  SID			  "55:32"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltFiltBufferX1"
		  SID			  "55:26"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  19
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltFiltBufferX2"
		  SID			  "55:27"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  20
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltFiltBufferY1"
		  SID			  "55:28"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltFiltBufferY2"
		  SID			  "55:29"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "55:15"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  12
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  5
		  DstBlock		  "FilterBufferY2_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  4
		  DstBlock		  "FilterBufferY1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  3
		  DstBlock		  "FilterBufferX2_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  2
		  DstBlock		  "FilterBufferX1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "GDFLIB_FilterIIR2_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltA2"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "fltA1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "fltB2"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "fltB1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "fltB0"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "fltFiltBufferY2"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "fltFiltBufferY1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "fltFiltBufferX2"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "fltFiltBufferX1"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterIIR2_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GDFLIB_FilterMA_FLT"
	      SID		      "56"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 210, 245, 285]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		388
		$ClassName		"Simulink.Mask"
		Type			"GDFLIB_FilterMA_FLT"
		Description		"Exponential moving average filter in single precision floating-point implementation. This block suppor"
		"ts re-initialization of the internal state during simulation. If the block is reset, the filter's output will be ali"
		"gned with the input fltFilterMAOut_preset. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltLambda'], 'BlockType'), 'Inport')\n        posblk = get_par"
		"am(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltLambda'], 'Position');\n        orient = get_param( ["
		"gcb, '/fltLambda'], 'Orientation');\n        delete_block(       [gcb, '/fltLambda']);\n        add_block('built-in/"
		"Ground', [gcb, '/fltLambda'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltAcc"
		"'], 'Position');\n        orient = get_param( [gcb, '/fltAcc'], 'Orientation');\n        delete_block(       [gcb, '"
		"/fltAcc']);\n        add_block('built-in/Ground', [gcb, '/fltAcc'], 'Position', pos, 'Orientation', orient);\n\n\n  "
		"      pos = get_param(    [gcb '/fltAcc_Out'], 'Position');\n        orient = get_param( [gcb '/fltAcc_Out'], 'Orien"
		"tation');\n        delete_block(       [gcb '/fltAcc_Out']);\n        add_block('built-in/Terminator', [gcb '/fltAcc"
		"_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/fltIn'], 'Port', '1');\n        set_p"
		"aram([gcb '/fltFilterMAOut_preset'], 'Port', '2');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n\n        se"
		"t_param(gcb,'MaskEnables',{'on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n   "
		"       set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n  "
		"  % shown state variables\n    if strcmp(get_param([gcb '/fltLambda'], 'BlockType'), 'Ground')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltLambda'], 'Position');\n        orient = get_para"
		"m( [gcb, '/fltLambda'], 'Orientation');\n        delete_block(       [gcb, '/fltLambda']);\n        add_block('built"
		"-in/Inport', [gcb, '/fltLambda'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        po"
		"s = get_param(    [gcb, '/fltAcc'], 'Position');\n        orient = get_param( [gcb, '/fltAcc'], 'Orientation');\n   "
		"     delete_block(       [gcb, '/fltAcc']);\n        add_block('built-in/Inport', [gcb, '/fltAcc'], 'Position', pos,"
		" 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n        pos = get_param(    [gcb '/fltAcc_Out'], 'Position"
		"');\n        orient = get_param( [gcb '/fltAcc_Out'], 'Orientation');\n        delete_block(       [gcb '/fltAcc_Out"
		"']);\n        add_block('built-in/Outport', [gcb '/fltAcc_Out'], 'Position', pos, 'Orientation', orient);\n\n\n     "
		"   set_param([gcb '/fltIn'], 'Port', '1');\n        set_param([gcb '/fltFilterMAOut_preset'], 'Port', '2');\n       "
		" set_param([gcb '/fltLambda'], 'Port', '3');\n        set_param([gcb '/fltAcc'], 'Port', '4');\n\n        set_param("
		"[gcb '/fltOut'], 'Port', '1');\n        set_param([gcb '/fltAcc_Out'], 'Port', '2');\n\n        set_param(gcb,'MaskE"
		"nables',{'on','on','off'});\n\n        if (posblk(4) - posblk(2)) < 125\n          height = 125;\n          set_para"
		"m(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GDFLIB_FilterMA_FLT', 'horizontalAlignment', 'center');\n"
		"if showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)']"
		", 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  3
		  Object {
		    $ObjectID		    389
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    390
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    391
		    Type		    "edit"
		    Name		    "fltLambda"
		    Prompt		    "fltLambda (Smoothing factor)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GDFLIB_FilterMA_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"20"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "56:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltFilterMAOut_preset"
		  SID			  "56:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "56:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GDFLIB_FilterMA_SF"
		  SID			  "56:5"
		  Ports			  [4, 2]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GDFLIB_FilterMA_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,fltLambda"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "56:12"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  14
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    392
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "56:15"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  15
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    393
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GDFLIB_FilterMA_BAM_FLT.mdl');text(10,75,'Exponential moving average filter.');text(10"
		    ",60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAcc"
		  SID			  "56:19"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  17
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAcc_Out"
		  SID			  "56:20"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  18
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLambda"
		  SID			  "56:18"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  16
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "56:10"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  12
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GDFLIB_FilterMA_SF"
		  SrcPort		  2
		  DstBlock		  "fltAcc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GDFLIB_FilterMA_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltAcc"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterMA_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltLambda"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterMA_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "fltFilterMAOut_preset"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterMA_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GDFLIB_FilterMA_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "GFLIB"
      SID		      "57"
      Ports		      []
      Position		      [240, 0, 340, 100]
      ZOrder		      3
      RequestExecContextInheritance off
      System {
	Name			"GFLIB"
	Location		[100, 100, 900, 600]
	Open			off
	PortBlocksUseCompactNotation off
	SetExecutionDomain	off
	ExecutionDomainType	"Deduce"
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	SimulinkSubDomain	"Simulink"
	Block {
	  BlockType		  SubSystem
	  Name			  "F16"
	  SID			  "58"
	  Ports			  []
	  Position		  [0, 0, 100, 100]
	  ZOrder		  1
	  RequestExecContextInheritance	off
	  System {
	    Name		    "F16"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Acos_F16"
	      SID		      "59"
	      Ports		      [1, 1]
	      Position		      [20, 0, 220, 50]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		394
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Acos_F16"
		Description		"Inverse cosine function in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's G"
		"uide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Acos_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Acos_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "60"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Acos_SF"
		  SID			  "61"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Acos_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "62"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    395
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "63"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    396
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Acos_BAM_F16.mdl');text(10,75,'Inverse cosine function');text(10,60,'NXP 2020');"
		    "text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "64"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Acos_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Acos_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Asin_F16"
	      SID		      "65"
	      Ports		      [1, 1]
	      Position		      [20, 70, 220, 120]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		397
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Asin_F16"
		Description		"Inverse sine function in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Gui"
		"de for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Asin_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Asin_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "66"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Asin_SF"
		  SID			  "67"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Asin_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "68"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    398
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "69"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    399
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Asin_BAM_F16.mdl');text(10,75,'Inverse sine function');text(10,60,'NXP 2020');te"
		    "xt(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "70"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Asin_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Asin_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_AtanYXShifted_F16"
	      SID		      "71"
	      Ports		      [7, 1]
	      Position		      [20, 140, 265, 340]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		400
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_AtanYXShifted_F16"
		Description		"Shifted arctangent of two arguments Y/X in 16-bit fixed-point fractional implementation. Refer to the "
		"AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_AtanYXShifted_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_AtanYXShifted_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16InY"
		  SID			  "72"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16InX"
		  SID			  "73"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "Ky"
		  SID			  "74"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "Kx"
		  SID			  "75"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  5
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "Ny"
		  SID			  "76"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  6
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "Nx"
		  SID			  "77"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  7
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "6"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "ThetaAdj"
		  SID			  "78"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "7"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_AtanYXShifted_SF"
		  SID			  "79"
		  Ports			  [7, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_AtanYXShifted_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "80"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  10
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    401
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "81"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  11
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    402
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_AtanYXShifted_BAM_F16.mdl');text(10,75,'Shifted arctangent of two arguments Y/X."
		    "');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "82"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  9
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_AtanYXShifted_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "ThetaAdj"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "Nx"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "Ny"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "Kx"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "Ky"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f16InX"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f16InY"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_AtanYX_F16"
	      SID		      "83"
	      Ports		      [2, 1]
	      Position		      [20, 360, 230, 435]
	      ZOrder		      5
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		403
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_AtanYX_F16"
		Description		"Arctangent of two arguments Y/X in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB "
		"User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_AtanYX_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_AtanYX_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16InY"
		  SID			  "84"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16InX"
		  SID			  "85"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_AtanYX_SF"
		  SID			  "86"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_AtanYX_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "87"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    404
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "88"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    405
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_AtanYX_BAM_F16.mdl');text(10,75,'Arctangent of two arguments Y/X.');text(10,60,'"
		    "NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "89"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_AtanYX_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16InX"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYX_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16InY"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYX_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Atan_F16"
	      SID		      "90"
	      Ports		      [1, 1]
	      Position		      [20, 455, 220, 505]
	      ZOrder		      6
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		406
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Atan_F16"
		Description		"Inverse tangent function in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's "
		"Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Atan_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Atan_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "91"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Atan_SF"
		  SID			  "92"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Atan_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "93"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    407
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "94"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    408
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Atan_BAM_F16.mdl');text(10,75,'Inverse tangent function');text(10,60,'NXP 2020')"
		    ";text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "95"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Atan_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Atan_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIDpAW_F16"
	      SID		      "96"
	      Ports		      [2, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 525, 280, 600]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		409
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIDpAW_F16"
		Description		"Parallel form PID controller with anti-windup in 16-bit fixed-point fractional implementation. This bl"
		"ock supports re-initialization of the internal state during simulation. If the block is reset, the controller's outp"
		"ut will be aligned with the input f16ControllerPIDpAWOut_preset. Refer to the AMMCLIB User's Guide for further detai"
		"ls."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16PropGain'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16PropGain'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f16PropGain'], 'Orientation');\n        delete_block(       [gcb, '/f16PropGain']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/f16PropGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/f16IntegGain'], 'Position');\n        orient = get_param( [gcb, '/f16IntegGain'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/f16IntegGain']);\n        add_block('built-in/Ground', [gcb, '/f16IntegGain'], 'Position', po"
		"s, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16DerivGain'], 'Position');\n        orient = get"
		"_param( [gcb, '/f16DerivGain'], 'Orientation');\n        delete_block(       [gcb, '/f16DerivGain']);\n        add_b"
		"lock('built-in/Ground', [gcb, '/f16DerivGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param("
		"    [gcb, '/f16FiltCoef'], 'Position');\n        orient = get_param( [gcb, '/f16FiltCoef'], 'Orientation');\n       "
		" delete_block(       [gcb, '/f16FiltCoef']);\n        add_block('built-in/Ground', [gcb, '/f16FiltCoef'], 'Position'"
		", pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16PropGainShift'], 'Position');\n        orie"
		"nt = get_param( [gcb, '/s16PropGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShift'])"
		";\n        add_block('built-in/Ground', [gcb, '/s16PropGainShift'], 'Position', pos, 'Orientation', orient);\n\n    "
		"    pos = get_param(    [gcb, '/s16IntegGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16IntegGainS"
		"hift'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShift']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s1"
		"6DerivGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16DerivGainShift'], 'Orientation');\n        d"
		"elete_block(       [gcb, '/s16DerivGainShift']);\n        add_block('built-in/Ground', [gcb, '/s16DerivGainShift'], "
		"'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16LowerLimit'], 'Position');\n     "
		"   orient = get_param( [gcb, '/f16LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimit']"
		");\n        add_block('built-in/Ground', [gcb, '/f16LowerLimit'], 'Position', pos, 'Orientation', orient);\n\n      "
		"  pos = get_param(    [gcb, '/f16UpperLimit'], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimit'], 'O"
		"rientation');\n        delete_block(       [gcb, '/f16UpperLimit']);\n        add_block('built-in/Ground', [gcb, '/f"
		"16UpperLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1'], '"
		"Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n        delete_block(       [gc"
		"b, '/f32IntegPartK_1']);\n        add_block('built-in/Ground', [gcb, '/f32IntegPartK_1'], 'Position', pos, 'Orientat"
		"ion', orient);\n\n        pos = get_param(    [gcb, '/f16DerivPartK_1'], 'Position');\n        orient = get_param( ["
		"gcb, '/f16DerivPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/f16DerivPartK_1']);\n        add_bloc"
		"k('built-in/Ground', [gcb, '/f16DerivPartK_1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param("
		"    [gcb, '/f16InK_1'], 'Position');\n        orient = get_param( [gcb, '/f16InK_1'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/f16InK_1']);\n        add_block('built-in/Ground', [gcb, '/f16InK_1'], 'Position', pos, 'Orie"
		"ntation', orient);\n\n\n        pos = get_param(    [gcb '/f32IntegPartK_1_Out'], 'Position');\n        orient = get"
		"_param( [gcb '/f32IntegPartK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IntegPartK_1_Out']);\n "
		"       add_block('built-in/Terminator', [gcb '/f32IntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n  "
		"      pos = get_param(    [gcb '/f16DerivPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f16DerivPar"
		"tK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f16DerivPartK_1_Out']);\n        add_block('built-in"
		"/Terminator', [gcb '/f16DerivPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    "
		"[gcb '/f16InK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f16InK_1_Out'], 'Orientation');\n        del"
		"ete_block(       [gcb '/f16InK_1_Out']);\n        add_block('built-in/Terminator', [gcb '/f16InK_1_Out'], 'Position'"
		", pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16InErr'], 'Port', '1');\n        set_param([gcb '/f16"
		"ControllerPIDpAWOut_preset'], 'Port', '2');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n        set_param(["
		"gcb '/u16LimitFlag'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on',"
		"'on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n          set_param(gcb,'Posit"
		"ion',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n"
		"    if strcmp(get_param([gcb '/f16PropGain'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n"
		"\n        pos = get_param(    [gcb, '/f16PropGain'], 'Position');\n        orient = get_param( [gcb, '/f16PropGain']"
		", 'Orientation');\n        delete_block(       [gcb, '/f16PropGain']);\n        add_block('built-in/Inport', [gcb, '"
		"/f16PropGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    ["
		"gcb, '/f16IntegGain'], 'Position');\n        orient = get_param( [gcb, '/f16IntegGain'], 'Orientation');\n        de"
		"lete_block(       [gcb, '/f16IntegGain']);\n        add_block('built-in/Inport', [gcb, '/f16IntegGain'], 'Position',"
		" pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16DerivGain'], 'Pos"
		"ition');\n        orient = get_param( [gcb, '/f16DerivGain'], 'Orientation');\n        delete_block(       [gcb, '/f"
		"16DerivGain']);\n        add_block('built-in/Inport', [gcb, '/f16DerivGain'], 'Position', pos, 'Orientation', orient"
		", 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16FiltCoef'], 'Position');\n        orient = g"
		"et_param( [gcb, '/f16FiltCoef'], 'Orientation');\n        delete_block(       [gcb, '/f16FiltCoef']);\n        add_b"
		"lock('built-in/Inport', [gcb, '/f16FiltCoef'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n"
		"\n        pos = get_param(    [gcb, '/s16PropGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16PropG"
		"ainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShift']);\n        add_block('built-in/I"
		"nport', [gcb, '/s16PropGainShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        p"
		"os = get_param(    [gcb, '/s16IntegGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16IntegGainShift'"
		"], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShift']);\n        add_block('built-in/Inport', "
		"[gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = ge"
		"t_param(    [gcb, '/s16DerivGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16DerivGainShift'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/s16DerivGainShift']);\n        add_block('built-in/Inport', [gcb, '"
		"/s16DerivGainShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param"
		"(    [gcb, '/f16LowerLimit'], 'Position');\n        orient = get_param( [gcb, '/f16LowerLimit'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/f16LowerLimit']);\n        add_block('built-in/Inport', [gcb, '/f16LowerLimit'], '"
		"Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16UpperLi"
		"mit'], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimit'], 'Orientation');\n        delete_block(    "
		"   [gcb, '/f16UpperLimit']);\n        add_block('built-in/Inport', [gcb, '/f16UpperLimit'], 'Position', pos, 'Orient"
		"ation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1'], 'Position');\n"
		"        orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32Integ"
		"PartK_1']);\n        add_block('built-in/Inport', [gcb, '/f32IntegPartK_1'], 'Position', pos, 'Orientation', orient,"
		" 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16DerivPartK_1'], 'Position');\n        orient "
		"= get_param( [gcb, '/f16DerivPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/f16DerivPartK_1']);\n  "
		"      add_block('built-in/Inport', [gcb, '/f16DerivPartK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeSt"
		"r', 'int16');\n\n        pos = get_param(    [gcb, '/f16InK_1'], 'Position');\n        orient = get_param( [gcb, '/f"
		"16InK_1'], 'Orientation');\n        delete_block(       [gcb, '/f16InK_1']);\n        add_block('built-in/Inport', ["
		"gcb, '/f16InK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n\n        pos = get_param("
		"    [gcb '/f32IntegPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1_Out'], 'Orientati"
		"on');\n        delete_block(       [gcb '/f32IntegPartK_1_Out']);\n        add_block('built-in/Outport', [gcb '/f32I"
		"ntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16DerivPartK_1_Ou"
		"t'], 'Position');\n        orient = get_param( [gcb '/f16DerivPartK_1_Out'], 'Orientation');\n        delete_block( "
		"      [gcb '/f16DerivPartK_1_Out']);\n        add_block('built-in/Outport', [gcb '/f16DerivPartK_1_Out'], 'Position'"
		", pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InK_1_Out'], 'Position');\n        orient = "
		"get_param( [gcb '/f16InK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InK_1_Out']);\n        add_"
		"block('built-in/Outport', [gcb '/f16InK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gc"
		"b '/f16InErr'], 'Port', '1');\n        set_param([gcb '/f16ControllerPIDpAWOut_preset'], 'Port', '2');\n        set_"
		"param([gcb '/f16PropGain'], 'Port', '3');\n        set_param([gcb '/f16IntegGain'], 'Port', '4');\n        set_param"
		"([gcb '/f16DerivGain'], 'Port', '5');\n        set_param([gcb '/f16FiltCoef'], 'Port', '6');\n        set_param([gcb"
		" '/s16PropGainShift'], 'Port', '7');\n        set_param([gcb '/s16IntegGainShift'], 'Port', '8');\n        set_param"
		"([gcb '/s16DerivGainShift'], 'Port', '9');\n        set_param([gcb '/f16LowerLimit'], 'Port', '10');\n        set_pa"
		"ram([gcb '/f16UpperLimit'], 'Port', '11');\n        set_param([gcb '/f32IntegPartK_1'], 'Port', '12');\n        set_"
		"param([gcb '/f16DerivPartK_1'], 'Port', '13');\n        set_param([gcb '/f16InK_1'], 'Port', '14');\n\n        set_p"
		"aram([gcb '/f16Out'], 'Port', '1');\n        set_param([gcb '/u16LimitFlag'], 'Port', '2');\n        set_param([gcb "
		"'/f32IntegPartK_1_Out'], 'Port', '3');\n        set_param([gcb '/f16DerivPartK_1_Out'], 'Port', '4');\n        set_p"
		"aram([gcb '/f16InK_1_Out'], 'Port', '5');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off',"
		"'off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 375\n          height = 375;\n          set"
		"_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIDpAW_F16', 'horizontalAlignment', 'cen"
		"ter');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited perfor"
		"mance)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  11
		  Object {
		    $ObjectID		    410
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskE"
		    "nables',{'on','on','off','off','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    411
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    412
		    Type		    "edit"
		    Name		    "f16PropGain"
		    Prompt		    "f16PropGain (Proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    413
		    Type		    "edit"
		    Name		    "f16IntegGain"
		    Prompt		    "f16IntegGain (Integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    414
		    Type		    "edit"
		    Name		    "f16DerivGain"
		    Prompt		    "f16DerivGain (Derivative gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    415
		    Type		    "edit"
		    Name		    "f16FiltCoef"
		    Prompt		    "f16FiltCoef (Derivative term filter coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    416
		    Type		    "edit"
		    Name		    "s16PropGainShift"
		    Prompt		    "s16PropGainShift (Proportional gain shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    417
		    Type		    "edit"
		    Name		    "s16IntegGainShift"
		    Prompt		    "s16IntegGainShift (Integral gain shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    418
		    Type		    "edit"
		    Name		    "s16DerivGainShift"
		    Prompt		    "s16DerivGainShift (Derivative gain shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    419
		    Type		    "edit"
		    Name		    "f16LowerLimit"
		    Prompt		    "f16LowerLimit (Lower limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    420
		    Type		    "edit"
		    Name		    "f16UpperLimit"
		    Prompt		    "f16UpperLimit (Upper limit of the controller)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIDpAW_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"45"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16InErr"
		  SID			  "96:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16ControllerPIDpAWOut_preset"
		  SID			  "96:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "96:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIDpAW_SF"
		  SID			  "96:5"
		  Ports			  [14, 5]
		  Position		  [135, 175, 285, 240]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIDpAW_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,f16PropGain,f16IntegGain,f16DerivGain,f16FiltCoef,s16PropGainShift,s16"
		  "IntegGainShift,s16DerivGainShift,f16LowerLimit,f16UpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "96:25"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  27
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    421
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "96:28"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  28
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    422
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIDpAW_BAM_F16.mdl');text(10,75,'Parallel form of a standard PID contr"
		    "oller with anti-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16DerivGain"
		  SID			  "96:33"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16DerivPartK_1"
		  SID			  "96:41"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16DerivPartK_1_Out"
		  SID			  "96:44"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  42
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16FiltCoef"
		  SID			  "96:34"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InK_1"
		  SID			  "96:42"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  40
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InK_1_Out"
		  SID			  "96:45"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  43
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IntegGain"
		  SID			  "96:32"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimit"
		  SID			  "96:38"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  36
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16PropGain"
		  SID			  "96:31"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimit"
		  SID			  "96:39"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1"
		  SID			  "96:40"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1_Out"
		  SID			  "96:43"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  41
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16DerivGainShift"
		  SID			  "96:37"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShift"
		  SID			  "96:36"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  34
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShift"
		  SID			  "96:35"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "96:20"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  22
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlag"
		  SID			  "96:21"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  23
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  5
		  DstBlock		  "f16InK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  4
		  DstBlock		  "f16DerivPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  3
		  DstBlock		  "f32IntegPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlag"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f16InK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f16DerivPartK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32IntegPartK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f16UpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f16LowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "s16DerivGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "s16IntegGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "s16PropGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f16FiltCoef"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f16DerivGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f16IntegGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f16PropGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "f16ControllerPIDpAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "f16InErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIpAW_F16"
	      SID		      "97"
	      Ports		      [2, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 620, 275, 695]
	      ZOrder		      9
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		423
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIpAW_F16"
		Description		"Parallel form PI controller with anti-windup in 16-bit fixed-point fractional implementation. This blo"
		"ck supports re-initialization of the internal state during simulation. If the block is reset, the controller's outpu"
		"t will be aligned with the input f16ControllerPIpAWOut_preset. Refer to the AMMCLIB User's Guide for further details"
		"."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16PropGain'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16PropGain'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f16PropGain'], 'Orientation');\n        delete_block(       [gcb, '/f16PropGain']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/f16PropGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/f16IntegGain'], 'Position');\n        orient = get_param( [gcb, '/f16IntegGain'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/f16IntegGain']);\n        add_block('built-in/Ground', [gcb, '/f16IntegGain'], 'Position', po"
		"s, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16PropGainShift'], 'Position');\n        orient ="
		" get_param( [gcb, '/s16PropGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShift']);\n "
		"       add_block('built-in/Ground', [gcb, '/s16PropGainShift'], 'Position', pos, 'Orientation', orient);\n\n        "
		"pos = get_param(    [gcb, '/s16IntegGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16IntegGainShift"
		"'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShift']);\n        add_block('built-in/Ground',"
		" [gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16Low"
		"erLimit'], 'Position');\n        orient = get_param( [gcb, '/f16LowerLimit'], 'Orientation');\n        delete_block("
		"       [gcb, '/f16LowerLimit']);\n        add_block('built-in/Ground', [gcb, '/f16LowerLimit'], 'Position', pos, 'Or"
		"ientation', orient);\n\n        pos = get_param(    [gcb, '/f16UpperLimit'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f16UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16UpperLimit']);\n        add_bloc"
		"k('built-in/Ground', [gcb, '/f16UpperLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(  "
		"  [gcb, '/f32IntegPartK_1'], 'Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n "
		"       delete_block(       [gcb, '/f32IntegPartK_1']);\n        add_block('built-in/Ground', [gcb, '/f32IntegPartK_1"
		"'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16InK_1'], 'Position');\n      "
		"  orient = get_param( [gcb, '/f16InK_1'], 'Orientation');\n        delete_block(       [gcb, '/f16InK_1']);\n       "
		" add_block('built-in/Ground', [gcb, '/f16InK_1'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_pa"
		"ram(    [gcb '/f32IntegPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1_Out'], 'Orien"
		"tation');\n        delete_block(       [gcb '/f32IntegPartK_1_Out']);\n        add_block('built-in/Terminator', [gcb"
		" '/f32IntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InK_1_Ou"
		"t'], 'Position');\n        orient = get_param( [gcb '/f16InK_1_Out'], 'Orientation');\n        delete_block(       ["
		"gcb '/f16InK_1_Out']);\n        add_block('built-in/Terminator', [gcb '/f16InK_1_Out'], 'Position', pos, 'Orientatio"
		"n', orient);\n\n\n        set_param([gcb '/f16InErr'], 'Port', '1');\n        set_param([gcb '/f16ControllerPIpAWOut"
		"_preset'], 'Port', '2');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n        set_param([gcb '/u16LimitFlag'"
		"], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on'});\n\n        if (p"
		"osblk(4) - posblk(2)) > 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk"
		"(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f16"
		"PropGain'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gc"
		"b, '/f16PropGain'], 'Position');\n        orient = get_param( [gcb, '/f16PropGain'], 'Orientation');\n        delete"
		"_block(       [gcb, '/f16PropGain']);\n        add_block('built-in/Inport', [gcb, '/f16PropGain'], 'Position', pos, "
		"'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16IntegGain'], 'Position'"
		");\n        orient = get_param( [gcb, '/f16IntegGain'], 'Orientation');\n        delete_block(       [gcb, '/f16Inte"
		"gGain']);\n        add_block('built-in/Inport', [gcb, '/f16IntegGain'], 'Position', pos, 'Orientation', orient, 'Out"
		"DataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/s16PropGainShift'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/s16PropGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShift']);\n    "
		"    add_block('built-in/Inport', [gcb, '/s16PropGainShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr"
		"', 'int16');\n\n        pos = get_param(    [gcb, '/s16IntegGainShift'], 'Position');\n        orient = get_param( ["
		"gcb, '/s16IntegGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShift']);\n        add_"
		"block('built-in/Inport', [gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int"
		"16');\n\n        pos = get_param(    [gcb, '/f16LowerLimit'], 'Position');\n        orient = get_param( [gcb, '/f16L"
		"owerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimit']);\n        add_block('built-in/Inp"
		"ort', [gcb, '/f16LowerLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = "
		"get_param(    [gcb, '/f16UpperLimit'], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimit'], 'Orientati"
		"on');\n        delete_block(       [gcb, '/f16UpperLimit']);\n        add_block('built-in/Inport', [gcb, '/f16UpperL"
		"imit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f"
		"32IntegPartK_1'], 'Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n        dele"
		"te_block(       [gcb, '/f32IntegPartK_1']);\n        add_block('built-in/Inport', [gcb, '/f32IntegPartK_1'], 'Positi"
		"on', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16InK_1'], 'Pos"
		"ition');\n        orient = get_param( [gcb, '/f16InK_1'], 'Orientation');\n        delete_block(       [gcb, '/f16In"
		"K_1']);\n        add_block('built-in/Inport', [gcb, '/f16InK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTy"
		"peStr', 'int16');\n\n\n        pos = get_param(    [gcb '/f32IntegPartK_1_Out'], 'Position');\n        orient = get_"
		"param( [gcb '/f32IntegPartK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IntegPartK_1_Out']);\n  "
		"      add_block('built-in/Outport', [gcb '/f32IntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n      "
		"  pos = get_param(    [gcb '/f16InK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f16InK_1_Out'], 'Orien"
		"tation');\n        delete_block(       [gcb '/f16InK_1_Out']);\n        add_block('built-in/Outport', [gcb '/f16InK_"
		"1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16InErr'], 'Port', '1');\n        s"
		"et_param([gcb '/f16ControllerPIpAWOut_preset'], 'Port', '2');\n        set_param([gcb '/f16PropGain'], 'Port', '3');"
		"\n        set_param([gcb '/f16IntegGain'], 'Port', '4');\n        set_param([gcb '/s16PropGainShift'], 'Port', '5');"
		"\n        set_param([gcb '/s16IntegGainShift'], 'Port', '6');\n        set_param([gcb '/f16LowerLimit'], 'Port', '7'"
		");\n        set_param([gcb '/f16UpperLimit'], 'Port', '8');\n        set_param([gcb '/f32IntegPartK_1'], 'Port', '9'"
		");\n        set_param([gcb '/f16InK_1'], 'Port', '10');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n       "
		" set_param([gcb '/u16LimitFlag'], 'Port', '2');\n        set_param([gcb '/f32IntegPartK_1_Out'], 'Port', '3');\n    "
		"    set_param([gcb '/f16InK_1_Out'], 'Port', '4');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','of"
		"f','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 275\n          height = 275;\n          set_param(gc"
		"b,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIpAW_F16', 'horizontalAlignment', 'cent"
		"er');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited perform"
		"ance)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  8
		  Object {
		    $ObjectID		    424
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','"
		    "on','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    425
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    426
		    Type		    "edit"
		    Name		    "f16PropGain"
		    Prompt		    "f16PropGain (Proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    427
		    Type		    "edit"
		    Name		    "f16IntegGain"
		    Prompt		    "f16IntegGain (Integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    428
		    Type		    "edit"
		    Name		    "s16PropGainShift"
		    Prompt		    "s16PropGainShift (Proportional gain shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    429
		    Type		    "edit"
		    Name		    "s16IntegGainShift"
		    Prompt		    "s16IntegGainShift (Integral gain shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    430
		    Type		    "edit"
		    Name		    "f16LowerLimit"
		    Prompt		    "f16LowerLimit (Lower limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    431
		    Type		    "edit"
		    Name		    "f16UpperLimit"
		    Prompt		    "f16UpperLimit (Upper limit of the controller)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIpAW_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"35"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16InErr"
		  SID			  "97:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16ControllerPIpAWOut_preset"
		  SID			  "97:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "97:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIpAW_SF"
		  SID			  "97:5"
		  Ports			  [10, 4]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIpAW_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,f16PropGain,f16IntegGain,s16PropGainShift,s16IntegGainShift,f16LowerLi"
		  "mit,f16UpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "97:20"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  22
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    432
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "97:23"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  23
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    433
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIpAW_BAM_F16.mdl');text(10,75,'Parallel form of a standard PI control"
		    "ler with anti-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InK_1"
		  SID			  "97:33"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InK_1_Out"
		  SID			  "97:35"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IntegGain"
		  SID			  "97:27"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimit"
		  SID			  "97:30"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16PropGain"
		  SID			  "97:26"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimit"
		  SID			  "97:31"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1"
		  SID			  "97:32"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1_Out"
		  SID			  "97:34"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShift"
		  SID			  "97:29"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShift"
		  SID			  "97:28"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "97:16"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  18
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlag"
		  SID			  "97:17"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  19
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIpAW_SF"
		  SrcPort		  4
		  DstBlock		  "f16InK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIpAW_SF"
		  SrcPort		  3
		  DstBlock		  "f32IntegPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIpAW_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlag"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "GFLIB_ControllerPIpAW_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f16InK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32IntegPartK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f16UpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f16LowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "s16IntegGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "s16PropGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f16IntegGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "f16PropGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "f16ControllerPIpAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f16InErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIp_F16"
	      SID		      "98"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 715, 265, 790]
	      ZOrder		      10
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		434
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIp_F16"
		Description		"Parallel form PI controller without anti-windup in 16-bit fixed-point fractional implementation. This "
		"block supports re-initialization of the internal state during simulation. If the block is reset, the controller's ou"
		"tput will be aligned with the input f16ControllerPIpOut_preset. Refer to the AMMCLIB User's Guide for further detail"
		"s."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16PropGain'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16PropGain'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f16PropGain'], 'Orientation');\n        delete_block(       [gcb, '/f16PropGain']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/f16PropGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/f16IntegGain'], 'Position');\n        orient = get_param( [gcb, '/f16IntegGain'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/f16IntegGain']);\n        add_block('built-in/Ground', [gcb, '/f16IntegGain'], 'Position', po"
		"s, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16PropGainShift'], 'Position');\n        orient ="
		" get_param( [gcb, '/s16PropGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShift']);\n "
		"       add_block('built-in/Ground', [gcb, '/s16PropGainShift'], 'Position', pos, 'Orientation', orient);\n\n        "
		"pos = get_param(    [gcb, '/s16IntegGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16IntegGainShift"
		"'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShift']);\n        add_block('built-in/Ground',"
		" [gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32Int"
		"egPartK_1'], 'Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n        delete_bl"
		"ock(       [gcb, '/f32IntegPartK_1']);\n        add_block('built-in/Ground', [gcb, '/f32IntegPartK_1'], 'Position', "
		"pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16InK_1'], 'Position');\n        orient = get_p"
		"aram( [gcb, '/f16InK_1'], 'Orientation');\n        delete_block(       [gcb, '/f16InK_1']);\n        add_block('buil"
		"t-in/Ground', [gcb, '/f16InK_1'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f"
		"32IntegPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1_Out'], 'Orientation');\n     "
		"   delete_block(       [gcb '/f32IntegPartK_1_Out']);\n        add_block('built-in/Terminator', [gcb '/f32IntegPartK"
		"_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InK_1_Out'], 'Position')"
		";\n        orient = get_param( [gcb '/f16InK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InK_1_O"
		"ut']);\n        add_block('built-in/Terminator', [gcb '/f16InK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n"
		"\n        set_param([gcb '/f16InErr'], 'Port', '1');\n        set_param([gcb '/f16ControllerPIpOut_preset'], 'Port',"
		" '2');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','o"
		"n','on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n          set_param(gcb,'Positio"
		"n',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n  "
		"  if strcmp(get_param([gcb '/f16PropGain'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n"
		"        pos = get_param(    [gcb, '/f16PropGain'], 'Position');\n        orient = get_param( [gcb, '/f16PropGain'], "
		"'Orientation');\n        delete_block(       [gcb, '/f16PropGain']);\n        add_block('built-in/Inport', [gcb, '/f"
		"16PropGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gc"
		"b, '/f16IntegGain'], 'Position');\n        orient = get_param( [gcb, '/f16IntegGain'], 'Orientation');\n        dele"
		"te_block(       [gcb, '/f16IntegGain']);\n        add_block('built-in/Inport', [gcb, '/f16IntegGain'], 'Position', p"
		"os, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/s16PropGainShift'], 'P"
		"osition');\n        orient = get_param( [gcb, '/s16PropGainShift'], 'Orientation');\n        delete_block(       [gc"
		"b, '/s16PropGainShift']);\n        add_block('built-in/Inport', [gcb, '/s16PropGainShift'], 'Position', pos, 'Orient"
		"ation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/s16IntegGainShift'], 'Position');"
		"\n        orient = get_param( [gcb, '/s16IntegGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16I"
		"ntegGainShift']);\n        add_block('built-in/Inport', [gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientation',"
		" orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1'], 'Position');\n       "
		" orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegPartK_1"
		"']);\n        add_block('built-in/Inport', [gcb, '/f32IntegPartK_1'], 'Position', pos, 'Orientation', orient, 'OutDa"
		"taTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16InK_1'], 'Position');\n        orient = get_param( ["
		"gcb, '/f16InK_1'], 'Orientation');\n        delete_block(       [gcb, '/f16InK_1']);\n        add_block('built-in/In"
		"port', [gcb, '/f16InK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n\n        pos = ge"
		"t_param(    [gcb '/f32IntegPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1_Out'], 'O"
		"rientation');\n        delete_block(       [gcb '/f32IntegPartK_1_Out']);\n        add_block('built-in/Outport', [gc"
		"b '/f32IntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InK_1_O"
		"ut'], 'Position');\n        orient = get_param( [gcb '/f16InK_1_Out'], 'Orientation');\n        delete_block(       "
		"[gcb '/f16InK_1_Out']);\n        add_block('built-in/Outport', [gcb '/f16InK_1_Out'], 'Position', pos, 'Orientation'"
		", orient);\n\n\n        set_param([gcb '/f16InErr'], 'Port', '1');\n        set_param([gcb '/f16ControllerPIpOut_pre"
		"set'], 'Port', '2');\n        set_param([gcb '/f16PropGain'], 'Port', '3');\n        set_param([gcb '/f16IntegGain']"
		", 'Port', '4');\n        set_param([gcb '/s16PropGainShift'], 'Port', '5');\n        set_param([gcb '/s16IntegGainSh"
		"ift'], 'Port', '6');\n        set_param([gcb '/f32IntegPartK_1'], 'Port', '7');\n        set_param([gcb '/f16InK_1']"
		", 'Port', '8');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n        set_param([gcb '/f32IntegPartK_1_Out'],"
		" 'Port', '2');\n        set_param([gcb '/f16InK_1_Out'], 'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on',"
		"'on','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 225\n          height = 225;\n          set_"
		"param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIp_F16', 'horizontalAlignment', 'center"
		"');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performan"
		"ce)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  6
		  Object {
		    $ObjectID		    435
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off',"
		    "'off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    436
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    437
		    Type		    "edit"
		    Name		    "f16PropGain"
		    Prompt		    "f16PropGain (Proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    438
		    Type		    "edit"
		    Name		    "f16IntegGain"
		    Prompt		    "f16IntegGain (Integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    439
		    Type		    "edit"
		    Name		    "s16PropGainShift"
		    Prompt		    "s16PropGainShift (Proportional gain shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    440
		    Type		    "edit"
		    Name		    "s16IntegGainShift"
		    Prompt		    "s16IntegGainShift (Integral gain shift)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIp_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"30"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16InErr"
		  SID			  "98:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16ControllerPIpOut_preset"
		  SID			  "98:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "98:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIp_SF"
		  SID			  "98:5"
		  Ports			  [8, 3]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIp_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,f16PropGain,f16IntegGain,s16PropGainShift,s16IntegGainShift"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "98:17"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  19
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    441
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "98:20"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  20
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    442
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIp_BAM_F16.mdl');text(10,75,'Parallel form of a standard PI controlle"
		    "r without anti-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InK_1"
		  SID			  "98:28"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InK_1_Out"
		  SID			  "98:30"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16IntegGain"
		  SID			  "98:24"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16PropGain"
		  SID			  "98:23"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1"
		  SID			  "98:27"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1_Out"
		  SID			  "98:29"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShift"
		  SID			  "98:26"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShift"
		  SID			  "98:25"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "98:14"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  16
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIp_SF"
		  SrcPort		  3
		  DstBlock		  "f16InK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIp_SF"
		  SrcPort		  2
		  DstBlock		  "f32IntegPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIp_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f16InK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32IntegPartK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "s16IntegGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "s16PropGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f16IntegGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f16PropGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f16ControllerPIpOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f16InErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIrAW_F16"
	      SID		      "99"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 810, 275, 885]
	      ZOrder		      11
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		443
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIrAW_F16"
		Description		"Recurrent form PI controller with anti-windup in 16-bit fixed-point fractional implementation. This bl"
		"ock supports re-initialization of the internal state during simulation. If the block is reset, the controller's outp"
		"ut will be aligned with the input f16ControllerPIrAWOut_preset. Refer to the AMMCLIB User's Guide for further detail"
		"s."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16UpperLimit'], 'BlockType'), 'Inport')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16UpperLimit'], 'Position');\n        orient = get_"
		"param( [gcb, '/f16UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16UpperLimit']);\n        add_"
		"block('built-in/Ground', [gcb, '/f16UpperLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_para"
		"m(    [gcb, '/f16LowerLimit'], 'Position');\n        orient = get_param( [gcb, '/f16LowerLimit'], 'Orientation');\n "
		"       delete_block(       [gcb, '/f16LowerLimit']);\n        add_block('built-in/Ground', [gcb, '/f16LowerLimit'], "
		"'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        orie"
		"nt = get_param( [gcb, '/f32Acc'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc']);\n        add_block"
		"('built-in/Ground', [gcb, '/f32Acc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, "
		"'/f16InErrK1'], 'Position');\n        orient = get_param( [gcb, '/f16InErrK1'], 'Orientation');\n        delete_bloc"
		"k(       [gcb, '/f16InErrK1']);\n        add_block('built-in/Ground', [gcb, '/f16InErrK1'], 'Position', pos, 'Orient"
		"ation', orient);\n\n        pos = get_param(    [gcb, '/f16CC1sc'], 'Position');\n        orient = get_param( [gcb, "
		"'/f16CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc']);\n        add_block('built-in/Ground'"
		", [gcb, '/f16CC1sc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16CC2sc'], 'P"
		"osition');\n        orient = get_param( [gcb, '/f16CC2sc'], 'Orientation');\n        delete_block(       [gcb, '/f16"
		"CC2sc']);\n        add_block('built-in/Ground', [gcb, '/f16CC2sc'], 'Position', pos, 'Orientation', orient);\n\n    "
		"    pos = get_param(    [gcb, '/u16NShift'], 'Position');\n        orient = get_param( [gcb, '/u16NShift'], 'Orienta"
		"tion');\n        delete_block(       [gcb, '/u16NShift']);\n        add_block('built-in/Ground', [gcb, '/u16NShift']"
		", 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n     "
		"   orient = get_param( [gcb '/f32Acc_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n    "
		"    add_block('built-in/Terminator', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = "
		"get_param(    [gcb '/f16InErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/f16InErrK1_Out'], 'Orientati"
		"on');\n        delete_block(       [gcb '/f16InErrK1_Out']);\n        add_block('built-in/Terminator', [gcb '/f16InE"
		"rrK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16InErr'], 'Port', '1');\n      "
		"  set_param([gcb '/f16ControllerPIrAWOut_preset'], 'Port', '2');\n\n        set_param([gcb '/f16Out'], 'Port', '1');"
		"\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2))"
		" > 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height"
		"])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f16UpperLimit'], 'BlockT"
		"ype'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16UpperLimit'"
		"], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimit'], 'Orientation');\n        delete_block(       ["
		"gcb, '/f16UpperLimit']);\n        add_block('built-in/Inport', [gcb, '/f16UpperLimit'], 'Position', pos, 'Orientatio"
		"n', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16LowerLimit'], 'Position');\n      "
		"  orient = get_param( [gcb, '/f16LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimit'])"
		";\n        add_block('built-in/Inport', [gcb, '/f16LowerLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTyp"
		"eStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/"
		"f32Acc'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc']);\n        add_block('built-in/Inport', [gcb"
		", '/f32Acc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gc"
		"b, '/f16InErrK1'], 'Position');\n        orient = get_param( [gcb, '/f16InErrK1'], 'Orientation');\n        delete_b"
		"lock(       [gcb, '/f16InErrK1']);\n        add_block('built-in/Inport', [gcb, '/f16InErrK1'], 'Position', pos, 'Ori"
		"entation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16CC1sc'], 'Position');\n    "
		"    orient = get_param( [gcb, '/f16CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc']);\n     "
		"   add_block('built-in/Inport', [gcb, '/f16CC1sc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16"
		"');\n\n        pos = get_param(    [gcb, '/f16CC2sc'], 'Position');\n        orient = get_param( [gcb, '/f16CC2sc'],"
		" 'Orientation');\n        delete_block(       [gcb, '/f16CC2sc']);\n        add_block('built-in/Inport', [gcb, '/f16"
		"CC2sc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/"
		"u16NShift'], 'Position');\n        orient = get_param( [gcb, '/u16NShift'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/u16NShift']);\n        add_block('built-in/Inport', [gcb, '/u16NShift'], 'Position', pos, 'Orientation'"
		", orient, 'OutDataTypeStr', 'uint16');\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n        o"
		"rient = get_param( [gcb '/f32Acc_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n        "
		"add_block('built-in/Outport', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_par"
		"am(    [gcb '/f16InErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/f16InErrK1_Out'], 'Orientation');\n"
		"        delete_block(       [gcb '/f16InErrK1_Out']);\n        add_block('built-in/Outport', [gcb '/f16InErrK1_Out']"
		", 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16InErr'], 'Port', '1');\n        set_para"
		"m([gcb '/f16ControllerPIrAWOut_preset'], 'Port', '2');\n        set_param([gcb '/f16UpperLimit'], 'Port', '3');\n   "
		"     set_param([gcb '/f16LowerLimit'], 'Port', '4');\n        set_param([gcb '/f32Acc'], 'Port', '5');\n        set_"
		"param([gcb '/f16InErrK1'], 'Port', '6');\n        set_param([gcb '/f16CC1sc'], 'Port', '7');\n        set_param([gcb"
		" '/f16CC2sc'], 'Port', '8');\n        set_param([gcb '/u16NShift'], 'Port', '9');\n\n        set_param([gcb '/f16Out"
		"'], 'Port', '1');\n        set_param([gcb '/f32Acc_Out'], 'Port', '2');\n        set_param([gcb '/f16InErrK1_Out'], "
		"'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off','off'});\n\n        if (posb"
		"lk(4) - posblk(2)) < 250\n          height = 250;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk("
		"3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIrAW_F16', 'horizontalAlignment', 'cent"
		"er');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited perform"
		"ance)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  7
		  Object {
		    $ObjectID		    444
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','"
		    "off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    445
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    446
		    Type		    "edit"
		    Name		    "f16UpperLimit"
		    Prompt		    "f16UpperLimit (Upper Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    447
		    Type		    "edit"
		    Name		    "f16LowerLimit"
		    Prompt		    "f16LowerLimit (Lower Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    448
		    Type		    "edit"
		    Name		    "f16CC1sc"
		    Prompt		    "f16CC1sc (CC1 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    449
		    Type		    "edit"
		    Name		    "f16CC2sc"
		    Prompt		    "f16CC2sc (CC2 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    450
		    Type		    "edit"
		    Name		    "u16NShift"
		    Prompt		    "u16NShift (Scaling bitwise shift applied to the controller coefficients)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIrAW_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"32"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16InErr"
		  SID			  "99:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16ControllerPIrAWOut_preset"
		  SID			  "99:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "99:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIrAW_SF"
		  SID			  "99:5"
		  Ports			  [9, 3]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIrAW_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,f16UpperLimit,f16LowerLimit,f16CC1sc,f16CC2sc,u16NShift"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "99:18"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  20
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    451
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "99:21"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  21
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    452
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIrAW_BAM_F16.mdl');text(10,75,'Recurrent form PI controller with anti"
		    "-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC1sc"
		  SID			  "99:28"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC2sc"
		  SID			  "99:29"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InErrK1"
		  SID			  "99:27"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InErrK1_Out"
		  SID			  "99:32"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimit"
		  SID			  "99:25"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimit"
		  SID			  "99:24"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc"
		  SID			  "99:26"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Out"
		  SID			  "99:31"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShift"
		  SID			  "99:30"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "99:15"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  17
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIrAW_SF"
		  SrcPort		  3
		  DstBlock		  "f16InErrK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIrAW_SF"
		  SrcPort		  2
		  DstBlock		  "f32Acc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIrAW_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "u16NShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f16CC2sc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f16CC1sc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f16InErrK1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32Acc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f16LowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f16UpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f16ControllerPIrAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "f16InErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIr_F16"
	      SID		      "100"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 905, 265, 980]
	      ZOrder		      12
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		453
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIr_F16"
		Description		"Reccurent form PI controller without anti-windup in 16-bit fixed-point fractional implementation. This"
		" block supports re-initialization of the internal state during simulation. If the block is reset, the controller's o"
		"utput will be aligned with the input f16ControllerPIrOut_preset. Refer to the AMMCLIB User's Guide for further detai"
		"ls."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16CC1sc'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16CC1sc'], 'Position');\n        orient = get_param( [gc"
		"b, '/f16CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/f16CC1sc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16CC2sc'],"
		" 'Position');\n        orient = get_param( [gcb, '/f16CC2sc'], 'Orientation');\n        delete_block(       [gcb, '/"
		"f16CC2sc']);\n        add_block('built-in/Ground', [gcb, '/f16CC2sc'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/f32Acc'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/f32Acc']);\n        add_block('built-in/Ground', [gcb, '/f32Acc'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16InErrK1'], 'Position');\n        orient "
		"= get_param( [gcb, '/f16InErrK1'], 'Orientation');\n        delete_block(       [gcb, '/f16InErrK1']);\n        add_"
		"block('built-in/Ground', [gcb, '/f16InErrK1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param( "
		"   [gcb, '/u16NShift'], 'Position');\n        orient = get_param( [gcb, '/u16NShift'], 'Orientation');\n        dele"
		"te_block(       [gcb, '/u16NShift']);\n        add_block('built-in/Ground', [gcb, '/u16NShift'], 'Position', pos, 'O"
		"rientation', orient);\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n        orient = get_param"
		"( [gcb '/f32Acc_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n        add_block('built-"
		"in/Terminator', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/"
		"f16InErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/f16InErrK1_Out'], 'Orientation');\n        delete"
		"_block(       [gcb '/f16InErrK1_Out']);\n        add_block('built-in/Terminator', [gcb '/f16InErrK1_Out'], 'Position"
		"', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16InErr'], 'Port', '1');\n        set_param([gcb '/f1"
		"6ControllerPIrOut_preset'], 'Port', '2');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n\n        set_param(g"
		"cb,'MaskEnables',{'on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n  "
		"        set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n "
		"   % shown state variables\n    if strcmp(get_param([gcb '/f16CC1sc'], 'BlockType'), 'Ground')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16CC1sc'], 'Position');\n        orient = get_param"
		"( [gcb, '/f16CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f16CC1sc']);\n        add_block('built-in"
		"/Inport', [gcb, '/f16CC1sc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = g"
		"et_param(    [gcb, '/f16CC2sc'], 'Position');\n        orient = get_param( [gcb, '/f16CC2sc'], 'Orientation');\n    "
		"    delete_block(       [gcb, '/f16CC2sc']);\n        add_block('built-in/Inport', [gcb, '/f16CC2sc'], 'Position', p"
		"os, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32Acc'], 'Position');"
		"\n        orient = get_param( [gcb, '/f32Acc'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc']);\n   "
		"     add_block('built-in/Inport', [gcb, '/f32Acc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32"
		"');\n\n        pos = get_param(    [gcb, '/f16InErrK1'], 'Position');\n        orient = get_param( [gcb, '/f16InErrK"
		"1'], 'Orientation');\n        delete_block(       [gcb, '/f16InErrK1']);\n        add_block('built-in/Inport', [gcb,"
		" '/f16InErrK1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    "
		"[gcb, '/u16NShift'], 'Position');\n        orient = get_param( [gcb, '/u16NShift'], 'Orientation');\n        delete_"
		"block(       [gcb, '/u16NShift']);\n        add_block('built-in/Inport', [gcb, '/u16NShift'], 'Position', pos, 'Orie"
		"ntation', orient, 'OutDataTypeStr', 'uint16');\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n "
		"       orient = get_param( [gcb '/f32Acc_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n"
		"        add_block('built-in/Outport', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos ="
		" get_param(    [gcb '/f16InErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/f16InErrK1_Out'], 'Orientat"
		"ion');\n        delete_block(       [gcb '/f16InErrK1_Out']);\n        add_block('built-in/Outport', [gcb '/f16InErr"
		"K1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16InErr'], 'Port', '1');\n        "
		"set_param([gcb '/f16ControllerPIrOut_preset'], 'Port', '2');\n        set_param([gcb '/f16CC1sc'], 'Port', '3');\n  "
		"      set_param([gcb '/f16CC2sc'], 'Port', '4');\n        set_param([gcb '/f32Acc'], 'Port', '5');\n        set_para"
		"m([gcb '/f16InErrK1'], 'Port', '6');\n        set_param([gcb '/u16NShift'], 'Port', '7');\n\n        set_param([gcb "
		"'/f16Out'], 'Port', '1');\n        set_param([gcb '/f32Acc_Out'], 'Port', '2');\n        set_param([gcb '/f16InErrK1"
		"_Out'], 'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off'});\n\n        if (posblk(4"
		") - posblk(2)) < 200\n          height = 200;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), "
		"posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIr_F16', 'horizontalAlignment', 'center"
		"');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performan"
		"ce)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  5
		  Object {
		    $ObjectID		    454
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off','off'"
		    ",'off'});\nend"
		  }
		  Object {
		    $ObjectID		    455
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    456
		    Type		    "edit"
		    Name		    "f16CC1"
		    Prompt		    "f16CC1 (CC1 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    457
		    Type		    "edit"
		    Name		    "f16CC2"
		    Prompt		    "f16CC2 (CC2 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    458
		    Type		    "edit"
		    Name		    "u16NShift"
		    Prompt		    "u16NShift (Scaling bitwise shift applied to the controller coefficients)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIr_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"28"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16InErr"
		  SID			  "100:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16ControllerPIrOut_preset"
		  SID			  "100:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "100:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIr_SF"
		  SID			  "100:5"
		  Ports			  [7, 3]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIr_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,f16CC1,f16CC2,u16NShift"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "100:16"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  18
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    459
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "100:19"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  19
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    460
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIr_BAM_F16.mdl');text(10,75,'Recurrent form PI controller without ant"
		    "i-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC1sc"
		  SID			  "100:22"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  20
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16CC2sc"
		  SID			  "100:23"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InErrK1"
		  SID			  "100:25"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InErrK1_Out"
		  SID			  "100:28"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc"
		  SID			  "100:24"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Out"
		  SID			  "100:27"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShift"
		  SID			  "100:26"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "100:13"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  15
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIr_SF"
		  SrcPort		  3
		  DstBlock		  "f16InErrK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIr_SF"
		  SrcPort		  2
		  DstBlock		  "f32Acc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIr_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "u16NShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f16InErrK1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32Acc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f16CC2sc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f16CC1sc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f16ControllerPIrOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f16InErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Cos_F16"
	      SID		      "101"
	      Ports		      [1, 1]
	      Position		      [20, 1000, 215, 1050]
	      ZOrder		      13
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		461
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Cos_F16"
		Description		"Cosine function in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide for"
		" further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Cos_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Cos_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "102"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Cos_SF"
		  SID			  "103"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Cos_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "104"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    462
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "105"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    463
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Cos_BAM_F16.mdl');text(10,75,'Cosine function');text(10,60,'NXP 2020');text(10,4"
		    "5,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "106"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Cos_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Cos_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Hyst_F16"
	      SID		      "107"
	      Ports		      [1, 1]
	      Position		      [20, 1069, 220, 1121]
	      ZOrder		      14
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		464
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Hyst_F16"
		Description		"Hysteresis function in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide"
		" for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16HystOn'], 'BlockType'), 'Inport')\n        posblk = get_par"
		"am(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16HystOn'], 'Position');\n        orient = get_param( ["
		"gcb, '/f16HystOn'], 'Orientation');\n        delete_block(       [gcb, '/f16HystOn']);\n        add_block('built-in/"
		"Ground', [gcb, '/f16HystOn'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16Hys"
		"tOff'], 'Position');\n        orient = get_param( [gcb, '/f16HystOff'], 'Orientation');\n        delete_block(      "
		" [gcb, '/f16HystOff']);\n        add_block('built-in/Ground', [gcb, '/f16HystOff'], 'Position', pos, 'Orientation', "
		"orient);\n\n        pos = get_param(    [gcb, '/f16OutValOn'], 'Position');\n        orient = get_param( [gcb, '/f16"
		"OutValOn'], 'Orientation');\n        delete_block(       [gcb, '/f16OutValOn']);\n        add_block('built-in/Ground"
		"', [gcb, '/f16OutValOn'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16OutValO"
		"ff'], 'Position');\n        orient = get_param( [gcb, '/f16OutValOff'], 'Orientation');\n        delete_block(      "
		" [gcb, '/f16OutValOff']);\n        add_block('built-in/Ground', [gcb, '/f16OutValOff'], 'Position', pos, 'Orientatio"
		"n', orient);\n\n        pos = get_param(    [gcb, '/f16OutState'], 'Position');\n        orient = get_param( [gcb, '"
		"/f16OutState'], 'Orientation');\n        delete_block(       [gcb, '/f16OutState']);\n        add_block('built-in/Gr"
		"ound', [gcb, '/f16OutState'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f16Ou"
		"tState_Out'], 'Position');\n        orient = get_param( [gcb '/f16OutState_Out'], 'Orientation');\n        delete_bl"
		"ock(       [gcb '/f16OutState_Out']);\n        add_block('built-in/Terminator', [gcb '/f16OutState_Out'], 'Position'"
		", pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16In'], 'Port', '1');\n\n        set_param([gcb '/f16O"
		"ut'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on'});\n\n        if (posblk(4) - p"
		"osblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk("
		"2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f16HystOn'], 'B"
		"lockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16HystOn"
		"'], 'Position');\n        orient = get_param( [gcb, '/f16HystOn'], 'Orientation');\n        delete_block(       [gcb"
		", '/f16HystOn']);\n        add_block('built-in/Inport', [gcb, '/f16HystOn'], 'Position', pos, 'Orientation', orient,"
		" 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16HystOff'], 'Position');\n        orient = get"
		"_param( [gcb, '/f16HystOff'], 'Orientation');\n        delete_block(       [gcb, '/f16HystOff']);\n        add_block"
		"('built-in/Inport', [gcb, '/f16HystOff'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n   "
		"     pos = get_param(    [gcb, '/f16OutValOn'], 'Position');\n        orient = get_param( [gcb, '/f16OutValOn'], 'Or"
		"ientation');\n        delete_block(       [gcb, '/f16OutValOn']);\n        add_block('built-in/Inport', [gcb, '/f16O"
		"utValOn'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, "
		"'/f16OutValOff'], 'Position');\n        orient = get_param( [gcb, '/f16OutValOff'], 'Orientation');\n        delete_"
		"block(       [gcb, '/f16OutValOff']);\n        add_block('built-in/Inport', [gcb, '/f16OutValOff'], 'Position', pos,"
		" 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16OutState'], 'Position'"
		");\n        orient = get_param( [gcb, '/f16OutState'], 'Orientation');\n        delete_block(       [gcb, '/f16OutSt"
		"ate']);\n        add_block('built-in/Inport', [gcb, '/f16OutState'], 'Position', pos, 'Orientation', orient, 'OutDat"
		"aTypeStr', 'int16');\n\n\n        pos = get_param(    [gcb '/f16OutState_Out'], 'Position');\n        orient = get_p"
		"aram( [gcb '/f16OutState_Out'], 'Orientation');\n        delete_block(       [gcb '/f16OutState_Out']);\n        add"
		"_block('built-in/Outport', [gcb '/f16OutState_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param"
		"([gcb '/f16In'], 'Port', '1');\n        set_param([gcb '/f16HystOn'], 'Port', '2');\n        set_param([gcb '/f16Hys"
		"tOff'], 'Port', '3');\n        set_param([gcb '/f16OutValOn'], 'Port', '4');\n        set_param([gcb '/f16OutValOff'"
		"], 'Port', '5');\n        set_param([gcb '/f16OutState'], 'Port', '6');\n\n        set_param([gcb '/f16Out'], 'Port'"
		", '1');\n        set_param([gcb '/f16OutState_Out'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','off"
		"','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 175\n          height = 175;\n          set_param(gcb"
		",'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_Hyst_F16', 'horizontalAlignment', 'center');\nif sh"
		"owStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)'], 'ho"
		"rizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  5
		  Object {
		    $ObjectID		    465
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off','off"
		    "','off'});\nend"
		  }
		  Object {
		    $ObjectID		    466
		    Type		    "edit"
		    Name		    "f16HystOn"
		    Prompt		    "f16HystOn (Value determining the upper threshold)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    467
		    Type		    "edit"
		    Name		    "f16HystOff"
		    Prompt		    "f16HystOff (Value determining the lower threshold)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    468
		    Type		    "edit"
		    Name		    "f16OutValOn"
		    Prompt		    "f16OutValOn (Value of the output when input is higher than the upper threshold)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    469
		    Type		    "edit"
		    Name		    "f16OutValOff"
		    Prompt		    "f16OutValOff (Value of the output when input is lower than the lower threshold)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Hyst_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"24"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "107:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Hyst_SF"
		  SID			  "107:4"
		  Ports			  [6, 2]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Hyst_SF_F16"
		  Parameters		  "showStates,f16HystOn,f16HystOff,f16OutValOn,f16OutValOff"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "107:13"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  10
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    470
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "107:16"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  11
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    471
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Hyst_BAM_F16.mdl');text(10,75,'Hysteresis function.');text(10,60,'NXP 2020');tex"
		    "t(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16HystOff"
		  SID			  "107:20"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  13
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16HystOn"
		  SID			  "107:19"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  12
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16OutState"
		  SID			  "107:23"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  16
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16OutState_Out"
		  SID			  "107:24"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  17
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16OutValOff"
		  SID			  "107:22"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  15
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16OutValOn"
		  SID			  "107:21"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  14
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "107:11"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Hyst_SF"
		  SrcPort		  2
		  DstBlock		  "f16OutState_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_Hyst_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16OutState"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f16OutValOff"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f16OutValOn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f16HystOff"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f16HystOn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_IntegratorTR_F16"
	      SID		      "108"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 1140, 260, 1215]
	      ZOrder		      15
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		472
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_IntegratorTR_F16"
		Description		"Discrete integrator transformed from a linear model using Billinear (trapezoidal) transformation in 16"
		"-bit fixed-point fractional implementation. This block supports re-initialization of the internal state during simul"
		"ation. If the block is reset, the integrator's output will be aligned with the input f16IntegratorTROut_preset. Refe"
		"r to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16C1'], 'BlockType'), 'Inport')\n        posblk = get_param(g"
		"cb, 'Position');\n\n        pos = get_param(    [gcb, '/f16C1'], 'Position');\n        orient = get_param( [gcb, '/f"
		"16C1'], 'Orientation');\n        delete_block(       [gcb, '/f16C1']);\n        add_block('built-in/Ground', [gcb, '"
		"/f16C1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/u16NShift'], 'Position');\n"
		"        orient = get_param( [gcb, '/u16NShift'], 'Orientation');\n        delete_block(       [gcb, '/u16NShift']);\n"
		"        add_block('built-in/Ground', [gcb, '/u16NShift'], 'Position', pos, 'Orientation', orient);\n\n        pos = "
		"get_param(    [gcb, '/f32State'], 'Position');\n        orient = get_param( [gcb, '/f32State'], 'Orientation');\n   "
		"     delete_block(       [gcb, '/f32State']);\n        add_block('built-in/Ground', [gcb, '/f32State'], 'Position', "
		"pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16InK1'], 'Position');\n        orient = get_pa"
		"ram( [gcb, '/f16InK1'], 'Orientation');\n        delete_block(       [gcb, '/f16InK1']);\n        add_block('built-i"
		"n/Ground', [gcb, '/f16InK1'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f32St"
		"ate_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n        delete_block(  "
		"     [gcb '/f32State_Out']);\n        add_block('built-in/Terminator', [gcb '/f32State_Out'], 'Position', pos, 'Orie"
		"ntation', orient);\n\n        pos = get_param(    [gcb '/f16InK1_Out'], 'Position');\n        orient = get_param( [g"
		"cb '/f16InK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InK1_Out']);\n        add_block('built-in"
		"/Terminator', [gcb '/f16InK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f16In'], "
		"'Port', '1');\n        set_param([gcb '/f16IntegratorTROut_preset'], 'Port', '2');\n\n        set_param([gcb '/f16Ou"
		"t'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on'});\n\n        if (posblk(4) - posblk("
		"2)) > 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+hei"
		"ght])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f16C1'], 'BlockType')"
		", 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16C1'], 'Position'"
		");\n        orient = get_param( [gcb, '/f16C1'], 'Orientation');\n        delete_block(       [gcb, '/f16C1']);\n   "
		"     add_block('built-in/Inport', [gcb, '/f16C1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16'"
		");\n\n        pos = get_param(    [gcb, '/u16NShift'], 'Position');\n        orient = get_param( [gcb, '/u16NShift']"
		", 'Orientation');\n        delete_block(       [gcb, '/u16NShift']);\n        add_block('built-in/Inport', [gcb, '/u"
		"16NShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n        pos = get_param(    [gcb"
		", '/f32State'], 'Position');\n        orient = get_param( [gcb, '/f32State'], 'Orientation');\n        delete_block("
		"       [gcb, '/f32State']);\n        add_block('built-in/Inport', [gcb, '/f32State'], 'Position', pos, 'Orientation'"
		", orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f16InK1'], 'Position');\n        orient"
		" = get_param( [gcb, '/f16InK1'], 'Orientation');\n        delete_block(       [gcb, '/f16InK1']);\n        add_block"
		"('built-in/Inport', [gcb, '/f16InK1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n\n    "
		"    pos = get_param(    [gcb '/f32State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out'], 'Ori"
		"entation');\n        delete_block(       [gcb '/f32State_Out']);\n        add_block('built-in/Outport', [gcb '/f32St"
		"ate_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f16InK1_Out'], 'Position')"
		";\n        orient = get_param( [gcb '/f16InK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f16InK1_Out"
		"']);\n        add_block('built-in/Outport', [gcb '/f16InK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n    "
		"    set_param([gcb '/f16In'], 'Port', '1');\n        set_param([gcb '/f16IntegratorTROut_preset'], 'Port', '2');\n  "
		"      set_param([gcb '/f16C1'], 'Port', '3');\n        set_param([gcb '/u16NShift'], 'Port', '4');\n        set_para"
		"m([gcb '/f32State'], 'Port', '5');\n        set_param([gcb '/f16InK1'], 'Port', '6');\n\n        set_param([gcb '/f1"
		"6Out'], 'Port', '1');\n        set_param([gcb '/f32State_Out'], 'Port', '2');\n        set_param([gcb '/f16InK1_Out'"
		"], 'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off'});\n\n        if (posblk(4) - posblk("
		"2)) < 175\n          height = 175;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+h"
		"eight])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_IntegratorTR_F16', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  4
		  Object {
		    $ObjectID		    473
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off','off'});\n"
		    "end"
		  }
		  Object {
		    $ObjectID		    474
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    475
		    Type		    "edit"
		    Name		    "f16C1"
		    Prompt		    "f16C1 (Integrator coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    476
		    Type		    "edit"
		    Name		    "u16NShift"
		    Prompt		    "u16NShift (Scaling bitwise shift applied to the integrator coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_IntegratorTR_F16"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"26"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "108:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16IntegratorTROut_preset"
		  SID			  "108:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "108:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_IntegratorTR_SF"
		  SID			  "108:5"
		  Ports			  [6, 3]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GFLIB_IntegratorTR_SF_F16"
		  Parameters		  "showStates,resetStatesEnable,f16C1,u16NShift"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "108:15"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  17
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    477
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "108:18"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  18
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    478
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_IntegratorTR_BAM_F16.mdl');text(10,75,'Discrete integrator transformed from a li"
		    "near model using Billinear (trapezoidal) transformation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'"
		    "28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16C1"
		  SID			  "108:21"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  19
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16InK1"
		  SID			  "108:24"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16InK1_Out"
		  SID			  "108:26"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32State"
		  SID			  "108:23"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32State_Out"
		  SID			  "108:25"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShift"
		  SID			  "108:22"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  20
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "108:12"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  14
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_IntegratorTR_SF"
		  SrcPort		  3
		  DstBlock		  "f16InK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_IntegratorTR_SF"
		  SrcPort		  2
		  DstBlock		  "f32State_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_IntegratorTR_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f16InK1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32State"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "u16NShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f16C1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f16IntegratorTROut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Limit_F16"
	      SID		      "109"
	      Ports		      [1, 1]
	      Position		      [20, 1239, 225, 1291]
	      ZOrder		      16
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		479
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Limit_F16"
		Description		"Limit function in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide for "
		"further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16LowerLimit'], 'BlockType'), 'Inport')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16LowerLimit'], 'Position');\n        orient = get_"
		"param( [gcb, '/f16LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimit']);\n        add_"
		"block('built-in/Ground', [gcb, '/f16LowerLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_para"
		"m(    [gcb, '/f16UpperLimit'], 'Position');\n        orient = get_param( [gcb, '/f16UpperLimit'], 'Orientation');\n "
		"       delete_block(       [gcb, '/f16UpperLimit']);\n        add_block('built-in/Ground', [gcb, '/f16UpperLimit'], "
		"'Position', pos, 'Orientation', orient);\n\n\n\n        set_param([gcb '/f16In'], 'Port', '1');\n\n        set_param"
		"([gcb '/f16Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on'});\n\n        if (posblk(4) -"
		" posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posbl"
		"k(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f16LowerLimit"
		"'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16"
		"LowerLimit'], 'Position');\n        orient = get_param( [gcb, '/f16LowerLimit'], 'Orientation');\n        delete_blo"
		"ck(       [gcb, '/f16LowerLimit']);\n        add_block('built-in/Inport', [gcb, '/f16LowerLimit'], 'Position', pos, "
		"'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16UpperLimit'], 'Position"
		"');\n        orient = get_param( [gcb, '/f16UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16Up"
		"perLimit']);\n        add_block('built-in/Inport', [gcb, '/f16UpperLimit'], 'Position', pos, 'Orientation', orient, "
		"'OutDataTypeStr', 'int16');\n\n\n\n        set_param([gcb '/f16In'], 'Port', '1');\n        set_param([gcb '/f16Lowe"
		"rLimit'], 'Port', '2');\n        set_param([gcb '/f16UpperLimit'], 'Port', '3');\n\n        set_param([gcb '/f16Out'"
		"], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','off','off'});\n\n        if (posblk(4) - posblk(2)) <"
		" 100\n          height = 100;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height"
		"])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_Limit_F16', 'horizontalAlignment', 'center');\nif s"
		"howStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)'], 'h"
		"orizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  3
		  Object {
		    $ObjectID		    480
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    481
		    Type		    "edit"
		    Name		    "f16LowerLimit"
		    Prompt		    "f16LowerLimit (Lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    482
		    Type		    "edit"
		    Name		    "f16UpperLimit"
		    Prompt		    "f16UpperLimit (Upper limit)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Limit_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"16"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "109:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Limit_SF"
		  SID			  "109:4"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Limit_SF_F16"
		  Parameters		  "showStates,f16LowerLimit,f16UpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "109:9"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    483
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "109:12"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    484
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Limit_BAM_F16.mdl');text(10,75,'Limit function.');text(10,60,'NXP 2020');text(10"
		    ",45,'1.0');text(10,30,'23-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimit"
		  SID			  "109:15"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  8
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimit"
		  SID			  "109:16"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  9
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "109:8"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Limit_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16UpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Limit_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16LowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Limit_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Limit_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_LowerLimit_F16"
	      SID		      "110"
	      Ports		      [1, 1]
	      Position		      [20, 1310, 250, 1360]
	      ZOrder		      17
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		485
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_LowerLimit_F16"
		Description		"Lower limit function in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guid"
		"e for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16LowerLimit'], 'BlockType'), 'Inport')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16LowerLimit'], 'Position');\n        orient = get_"
		"param( [gcb, '/f16LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimit']);\n        add_"
		"block('built-in/Ground', [gcb, '/f16LowerLimit'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param("
		"[gcb '/f16In'], 'Port', '1');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnab"
		"les',{'on','on'});\n\n        if (posblk(4) - posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Posi"
		"tion',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n"
		"    if strcmp(get_param([gcb '/f16LowerLimit'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position')"
		";\n\n        pos = get_param(    [gcb, '/f16LowerLimit'], 'Position');\n        orient = get_param( [gcb, '/f16Lower"
		"Limit'], 'Orientation');\n        delete_block(       [gcb, '/f16LowerLimit']);\n        add_block('built-in/Inport'"
		", [gcb, '/f16LowerLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n\n\n        set_pa"
		"ram([gcb '/f16In'], 'Port', '1');\n        set_param([gcb '/f16LowerLimit'], 'Port', '2');\n\n        set_param([gcb"
		" '/f16Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','off'});\n\n        if (posblk(4) - posblk(2"
		")) < 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+heig"
		"ht])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_LowerLimit_F16', 'horizontalAlignment', 'center');\n"
		"if showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)']"
		", 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    486
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    487
		    Type		    "edit"
		    Name		    "f16LowerLimit"
		    Prompt		    "f16LowerLimit (Value determining the lower limit threshold)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_LowerLimit_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"14"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "110:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_LowerLimit_SF"
		  SID			  "110:4"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_LowerLimit_SF_F16"
		  Parameters		  "showStates,f16LowerLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "110:8"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    488
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "110:11"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    489
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_LowerLimit_BAM_F16.mdl');text(10,75,'Lower limit function.');text(10,60,'NXP 202"
		    "0');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16LowerLimit"
		  SID			  "110:14"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  7
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "110:7"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_LowerLimit_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16LowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_LowerLimit_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_LowerLimit_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Lut1D_F16"
	      SID		      "111"
	      Ports		      [2, 1]
	      Position		      [20, 1380, 225, 1455]
	      ZOrder		      18
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		490
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Lut1D_F16"
		Description		"One dimensional lookup table function in 16-bit fixed-point fractional implementation. Refer to the AM"
		"MCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Lut1D_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    491
		    Type		    "edit"
		    Name		    "pf16Table"
		    Prompt		    "pf16Table (Vector holding the ordinate values of interpolating intervals)"
		    Value		    "2^15*[-0.75 -0.25 0.0 0.25 0.75]"
		  }
		  Object {
		    $ObjectID		    492
		    Type		    "edit"
		    Name		    "s16MidIdx"
		    Prompt		    "Middle index in the table pf16Table (zero-based indexing)"
		    Value		    "2"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Lut1D_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "112"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u16ShamOffset"
		  SID			  "113"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Lut1D_SF"
		  SID			  "114"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Lut1D_SF_F16"
		  Parameters		  "pf16Table,s16MidIdx"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "115"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    493
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "116"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    494
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Lut1D_BAM_F16.mdl');text(10,75,'One dimensional lookup table function');text(10,"
		    "60,'NXP 2020');text(10,45,'1.0');text(10,30,'23-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "117"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Lut1D_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u16ShamOffset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut1D_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut1D_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Lut2D_F16"
	      SID		      "118"
	      Ports		      [4, 1]
	      Position		      [20, 1472, 225, 1598]
	      ZOrder		      19
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		495
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Lut2D_F16"
		Description		"Two dimensional lookup table function in 16-bit fixed-point fractional implementation. Refer to the AM"
		"MCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Lut2D_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    496
		    Type		    "edit"
		    Name		    "pf16Table"
		    Prompt		    "pf16Table (Matrix of z-coordinate values at vertices)"
		    Value		    "2^15*[-0.75 0.0 0.75; -0.5 0.0 0.5; -0.25 0.0 0.25]"
		  }
		  Object {
		    $ObjectID		    497
		    Type		    "edit"
		    Name		    "s16MidIdx"
		    Prompt		    "Middle index in the table pf16Table (zero-based indexing over all elements)"
		    Value		    "4"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Lut2D_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "119"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "120"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u16ShamOffset1"
		  SID			  "121"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u16ShamOffset2"
		  SID			  "122"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  5
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Lut2D_SF"
		  SID			  "123"
		  Ports			  [4, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Lut2D_SF_F16"
		  Parameters		  "pf16Table,s16MidIdx"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "124"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    498
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "125"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  8
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    499
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Lut2D_BAM_F16.mdl');text(10,75,'Two dimensional lookup table function');text(10,"
		    "60,'NXP 2020');text(10,45,'1.0');text(10,30,'23-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "126"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  6
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Lut2D_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u16ShamOffset2"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut2D_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "u16ShamOffset1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut2D_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut2D_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut2D_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Ramp_F16"
	      SID		      "127"
	      Ports		      [1, 1]
	      Position		      [20, 1619, 220, 1671]
	      ZOrder		      20
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		500
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Ramp_F16"
		Description		"Rate of change limiter - ramp function in 16-bit fixed-point fractional implementation. Refer to the A"
		"MMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16State'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16State'], 'Position');\n        orient = get_param( [gc"
		"b, '/f16State'], 'Orientation');\n        delete_block(       [gcb, '/f16State']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/f16State'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f16RampUp']"
		", 'Position');\n        orient = get_param( [gcb, '/f16RampUp'], 'Orientation');\n        delete_block(       [gcb, "
		"'/f16RampUp']);\n        add_block('built-in/Ground', [gcb, '/f16RampUp'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb, '/f16RampDown'], 'Position');\n        orient = get_param( [gcb, '/f16RampDown']"
		", 'Orientation');\n        delete_block(       [gcb, '/f16RampDown']);\n        add_block('built-in/Ground', [gcb, '"
		"/f16RampDown'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f16State_Out'], 'Po"
		"sition');\n        orient = get_param( [gcb '/f16State_Out'], 'Orientation');\n        delete_block(       [gcb '/f1"
		"6State_Out']);\n        add_block('built-in/Terminator', [gcb '/f16State_Out'], 'Position', pos, 'Orientation', orie"
		"nt);\n\n\n        set_param([gcb '/f16In'], 'Port', '1');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n\n   "
		"     set_param(gcb,'MaskEnables',{'on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 50\n          height = 5"
		"0;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\ne"
		"lse\n    % shown state variables\n    if strcmp(get_param([gcb '/f16State'], 'BlockType'), 'Ground')\n        posblk"
		" = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16State'], 'Position');\n        orient = get"
		"_param( [gcb, '/f16State'], 'Orientation');\n        delete_block(       [gcb, '/f16State']);\n        add_block('bu"
		"ilt-in/Inport', [gcb, '/f16State'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        p"
		"os = get_param(    [gcb, '/f16RampUp'], 'Position');\n        orient = get_param( [gcb, '/f16RampUp'], 'Orientation'"
		");\n        delete_block(       [gcb, '/f16RampUp']);\n        add_block('built-in/Inport', [gcb, '/f16RampUp'], 'Po"
		"sition', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f16RampDown'"
		"], 'Position');\n        orient = get_param( [gcb, '/f16RampDown'], 'Orientation');\n        delete_block(       [gc"
		"b, '/f16RampDown']);\n        add_block('built-in/Inport', [gcb, '/f16RampDown'], 'Position', pos, 'Orientation', or"
		"ient, 'OutDataTypeStr', 'int16');\n\n\n        pos = get_param(    [gcb '/f16State_Out'], 'Position');\n        orie"
		"nt = get_param( [gcb '/f16State_Out'], 'Orientation');\n        delete_block(       [gcb '/f16State_Out']);\n       "
		" add_block('built-in/Outport', [gcb '/f16State_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_para"
		"m([gcb '/f16In'], 'Port', '1');\n        set_param([gcb '/f16State'], 'Port', '2');\n        set_param([gcb '/f16Ram"
		"pUp'], 'Port', '3');\n        set_param([gcb '/f16RampDown'], 'Port', '4');\n\n        set_param([gcb '/f16Out'], 'P"
		"ort', '1');\n        set_param([gcb '/f16State_Out'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','of"
		"f','off'});\n\n        if (posblk(4) - posblk(2)) < 125\n          height = 125;\n          set_param(gcb,'Position'"
		",[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_Ramp_F16', 'horizontalAlignment', 'center');\nif sh"
		"owStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)'], 'ho"
		"rizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  3
		  Object {
		    $ObjectID		    501
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    502
		    Type		    "edit"
		    Name		    "f16RampUp"
		    Prompt		    "f16RampUp (Ramp up increment coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    503
		    Type		    "edit"
		    Name		    "f16RampDown"
		    Prompt		    "f16RampDown (Ramp decrement coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Ramp_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"20"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "127:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Ramp_SF"
		  SID			  "127:4"
		  Ports			  [4, 2]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Ramp_SF_F16"
		  Parameters		  "showStates,f16RampUp,f16RampDown"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "127:11"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  8
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    504
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "127:14"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  9
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    505
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Ramp_BAM_F16.mdl');text(10,75,'Rate of change limiter - ramp function.');text(10"
		    ",60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16RampDown"
		  SID			  "127:19"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  12
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16RampUp"
		  SID			  "127:18"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  11
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16State"
		  SID			  "127:17"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  10
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f16State_Out"
		  SID			  "127:20"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  13
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "127:9"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  6
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Ramp_SF"
		  SrcPort		  2
		  DstBlock		  "f16State_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_Ramp_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16RampDown"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Ramp_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f16RampUp"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Ramp_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f16State"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Ramp_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Ramp_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Sign_F16"
	      SID		      "128"
	      Ports		      [1, 1]
	      Position		      [20, 1690, 220, 1740]
	      ZOrder		      21
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		506
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Sign_F16"
		Description		"Bit accurate model of GFLIB_Sign function in 16-bit fixed-point fractional implementation. Refer to th"
		"e AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Sign_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Sign_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "129"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Sign_SF"
		  SID			  "130"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Sign_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "131"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    507
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "132"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    508
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Sign_BAM_F16.mdl');text(10,75,'Sign function.');text(10,60,'NXP 2020');text(10,4"
		    "5,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "133"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Sign_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Sign_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_SinCos_F16"
	      SID		      "134"
	      Ports		      [1, 1]
	      Position		      [20, 1760, 230, 1810]
	      ZOrder		      22
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		509
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_SinCos_F16"
		Description		"Calculation of sine and cosine of the same argument in 16-bit fixed-point fractional implementation. R"
		"efer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_SinCos_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_SinCos_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "135"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_SinCos_SF"
		  SID			  "136"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_SinCos_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "137"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    510
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "138"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    511
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_SinCos_BAM_F16.mdl');text(10,75,'Sine and cosine of the same argument');text(10,"
		    "60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "139"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_SinCos_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_SinCos_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Sin_F16"
	      SID		      "140"
	      Ports		      [1, 1]
	      Position		      [20, 1830, 215, 1880]
	      ZOrder		      23
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		512
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Sin_F16"
		Description		"Sine function in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide for f"
		"urther details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Sin_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Sin_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "141"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Sin_SF"
		  SID			  "142"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Sin_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "143"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    513
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "144"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    514
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Sin_BAM_F16.mdl');text(10,75,'Sine function');text(10,60,'NXP 2020');text(10,45,"
		    "'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "145"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Sin_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Sin_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Sqrt_F16"
	      SID		      "146"
	      Ports		      [1, 1]
	      Position		      [20, 1900, 220, 1950]
	      ZOrder		      24
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		515
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Sqrt_F16"
		Description		"Square root approximation in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's"
		" Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Sqrt_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Sqrt_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "147"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Sqrt_SF"
		  SID			  "148"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Sqrt_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "149"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    516
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "150"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    517
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Sqrt_BAM_F16.mdl');text(10,75,'Square root approximation.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "151"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Sqrt_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Sqrt_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Tan_F16"
	      SID		      "152"
	      Ports		      [1, 1]
	      Position		      [20, 1970, 215, 2020]
	      ZOrder		      25
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		518
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Tan_F16"
		Description		"Tangent function in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide fo"
		"r further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Tan_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Tan_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "153"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Tan_SF"
		  SID			  "154"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Tan_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "155"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    519
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "156"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    520
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Tan_BAM_F16.mdl');text(10,75,'Trigonometric tangent function');text(10,60,'NXP 2"
		    "020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "157"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Tan_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Tan_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_UpperLimit_F16"
	      SID		      "158"
	      Ports		      [1, 1]
	      Position		      [20, 2040, 250, 2090]
	      ZOrder		      26
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		521
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_UpperLimit_F16"
		Description		"Upper limit function in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guid"
		"e for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16UpperLimit'], 'BlockType'), 'Inport')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16UpperLimit'], 'Position');\n        orient = get_"
		"param( [gcb, '/f16UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f16UpperLimit']);\n        add_"
		"block('built-in/Ground', [gcb, '/f16UpperLimit'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param("
		"[gcb '/f16In'], 'Port', '1');\n\n        set_param([gcb '/f16Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnab"
		"les',{'on','on'});\n\n        if (posblk(4) - posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Posi"
		"tion',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n"
		"    if strcmp(get_param([gcb '/f16UpperLimit'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position')"
		";\n\n        pos = get_param(    [gcb, '/f16UpperLimit'], 'Position');\n        orient = get_param( [gcb, '/f16Upper"
		"Limit'], 'Orientation');\n        delete_block(       [gcb, '/f16UpperLimit']);\n        add_block('built-in/Inport'"
		", [gcb, '/f16UpperLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n\n\n        set_pa"
		"ram([gcb '/f16In'], 'Port', '1');\n        set_param([gcb '/f16UpperLimit'], 'Port', '2');\n\n        set_param([gcb"
		" '/f16Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','off'});\n\n        if (posblk(4) - posblk(2"
		")) < 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+heig"
		"ht])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_UpperLimit_F16', 'horizontalAlignment', 'center');\n"
		"if showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)']"
		", 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    522
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    523
		    Type		    "edit"
		    Name		    "f16UpperLimit"
		    Prompt		    "f16UpperLimit (Value determining the upper limit threshold)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_UpperLimit_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"14"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "158:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_UpperLimit_SF"
		  SID			  "158:4"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_UpperLimit_SF_F16"
		  Parameters		  "showStates,f16UpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "158:8"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    524
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "158:11"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    525
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_UpperLimit_BAM_F16.mdl');text(10,75,'Upper limit function.');text(10,60,'NXP 202"
		    "0');text(10,45,'1.0');text(10,30,'23-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16UpperLimit"
		  SID			  "158:14"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  7
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "158:7"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_UpperLimit_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16UpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_UpperLimit_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_UpperLimit_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_VMin_F16"
	      SID		      "159"
	      Ports		      [1, 1]
	      Position		      [20, 2110, 220, 2160]
	      ZOrder		      27
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		526
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_VMin_F16"
		Description		"16-bit fixed-point implementation of the GFLIB_VMin function, which finds the index of a vector minimu"
		"m. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_VMin_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_VMin_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "160"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_VMin_SF"
		  SID			  "161"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_VMin_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "162"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    527
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "163"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    528
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_VMin_BAM_F16.mdl');text(10,75,'Vector minimum');text(10,60,'NXP 2020');text(10,4"
		    "5,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "IndexOfMinimum"
		  SID			  "164"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_VMin_SF"
		  SrcPort		  1
		  DstBlock		  "IndexOfMinimum"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_VMin_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_VectorLimit_F16"
	      SID		      "165"
	      Ports		      [1, 2]
	      Position		      [20, 2180, 255, 2255]
	      ZOrder		      28
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		529
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_VectorLimit_F16"
		Description		"16-bit fixed-point fractional implementation of the GFLIB_VectorLimit function which limits the magnit"
		"ude of the input 2-element vector, keeping its direction unchanged. Refer to the AMMCLIB User's Guide for further de"
		"tails."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16Limit'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16Limit'], 'Position');\n        orient = get_param( [gc"
		"b, '/f16Limit'], 'Orientation');\n        delete_block(       [gcb, '/f16Limit']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/f16Limit'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param([gcb '/pIn'], 'Port', '1'"
		");\n\n        set_param([gcb '/bFlag'], 'Port', '1');\n        set_param([gcb '/pOut'], 'Port', '2');\n\n        set"
		"_param(gcb,'MaskEnables',{'on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n         "
		" set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % sh"
		"own state variables\n    if strcmp(get_param([gcb '/f16Limit'], 'BlockType'), 'Ground')\n        posblk = get_param("
		"gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16Limit'], 'Position');\n        orient = get_param( [gcb,"
		" '/f16Limit'], 'Orientation');\n        delete_block(       [gcb, '/f16Limit']);\n        add_block('built-in/Inport"
		"', [gcb, '/f16Limit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n\n\n        set_param("
		"[gcb '/pIn'], 'Port', '1');\n        set_param([gcb '/f16Limit'], 'Port', '2');\n\n        set_param([gcb '/bFlag'],"
		" 'Port', '1');\n        set_param([gcb '/pOut'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','off'});"
		"\n\n        if (posblk(4) - posblk(2)) < 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), "
		"posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_VectorLimit_F16', 'horizontalAlignment', 'center');"
		"\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)"
		"'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    530
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    531
		    Type		    "edit"
		    Name		    "f16Limit"
		    Prompt		    "f16Limit (The maximum magnitude of the input 2-element vector)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_VectorLimit_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"15"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "165:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_VectorLimit_SF"
		  SID			  "165:4"
		  Ports			  [2, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_VectorLimit_SF_F16"
		  Parameters		  "showStates,f16Limit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "165:9"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    532
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "165:12"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    533
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_VectorLimit_BAM_F16.mdl');text(10,75,'Vector Limit function.');text(10,60,'NXP 2"
		    "020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16Limit"
		  SID			  "165:15"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  8
		}
		Block {
		  BlockType		  Outport
		  Name			  "bFlag"
		  SID			  "165:7"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "165:8"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_VectorLimit_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_VectorLimit_SF"
		  SrcPort		  1
		  DstBlock		  "bFlag"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16Limit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_VectorLimit_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_VectorLimit_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "F32"
	  SID			  "166"
	  Ports			  []
	  Position		  [120, 0, 220, 100]
	  ZOrder		  2
	  RequestExecContextInheritance	off
	  System {
	    Name		    "F32"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Acos_F32"
	      SID		      "167"
	      Ports		      [1, 1]
	      Position		      [20, 0, 220, 50]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		534
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Acos_F32"
		Description		"Inverse cosine function in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's G"
		"uide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Acos_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Acos_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "168"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Acos_SF"
		  SID			  "169"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Acos_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "170"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    535
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "171"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    536
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Acos_BAM_F32.mdl');text(10,75,'Inverse cosine function');text(10,60,'NXP 2020');"
		    "text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "172"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Acos_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Acos_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Asin_F32"
	      SID		      "173"
	      Ports		      [1, 1]
	      Position		      [20, 70, 220, 120]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		537
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Asin_F32"
		Description		"Inverse sine function in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Gui"
		"de for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Asin_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Asin_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "174"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Asin_SF"
		  SID			  "175"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Asin_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "176"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    538
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "177"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    539
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Asin_BAM_F32.mdl');text(10,75,'Inverse sine function');text(10,60,'NXP 2020');te"
		    "xt(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "178"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Asin_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Asin_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_AtanYXShifted_F32"
	      SID		      "179"
	      Ports		      [7, 1]
	      Position		      [20, 140, 265, 340]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		540
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_AtanYXShifted_F32"
		Description		"Shifted arctangent of two arguments Y/X in 32-bit fixed-point fractional implementation. Refer to the "
		"AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_AtanYXShifted_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_AtanYXShifted_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32InY"
		  SID			  "180"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32InX"
		  SID			  "181"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "Ky"
		  SID			  "182"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "Kx"
		  SID			  "183"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  5
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "Ny"
		  SID			  "184"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  6
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "Nx"
		  SID			  "185"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  7
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "6"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "ThetaAdj"
		  SID			  "186"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "7"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_AtanYXShifted_SF"
		  SID			  "187"
		  Ports			  [7, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_AtanYXShifted_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "188"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  10
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    541
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "189"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  11
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    542
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_AtanYXShifted_BAM_F32.mdl');text(10,75,'Shifted arctangent of two arguments Y/X."
		    "');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "190"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  9
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_AtanYXShifted_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "ThetaAdj"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "Nx"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "Ny"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "Kx"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "Ky"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f32InX"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32InY"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_AtanYX_F32"
	      SID		      "191"
	      Ports		      [2, 1]
	      Position		      [20, 360, 230, 435]
	      ZOrder		      5
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		543
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_AtanYX_F32"
		Description		"Arctangent of two arguments Y/X in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB "
		"User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_AtanYX_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_AtanYX_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32InY"
		  SID			  "192"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32InX"
		  SID			  "193"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_AtanYX_SF"
		  SID			  "194"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_AtanYX_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "195"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    544
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "196"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    545
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_AtanYX_BAM_F32.mdl');text(10,75,'Arctangent of two arguments Y/X.');text(10,60,'"
		    "NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "197"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_AtanYX_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32InX"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYX_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32InY"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYX_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Atan_F32"
	      SID		      "198"
	      Ports		      [1, 1]
	      Position		      [20, 455, 220, 505]
	      ZOrder		      6
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		546
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Atan_F32"
		Description		"Inverse tangent function in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's "
		"Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Atan_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Atan_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "199"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Atan_SF"
		  SID			  "200"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Atan_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "201"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    547
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "202"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    548
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Atan_BAM_F32.mdl');text(10,75,'Inverse tangent function');text(10,60,'NXP 2020')"
		    ";text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "203"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Atan_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Atan_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIDpAW_F32"
	      SID		      "204"
	      Ports		      [2, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 525, 280, 600]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		549
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIDpAW_F32"
		Description		"Parallel form PID controller with anti-windup in 32-bit fixed-point fractional implementation. This bl"
		"ock supports re-initialization of the internal state during simulation. If the block is reset, the controller's outp"
		"ut will be aligned with the input f32ControllerPIDpAWOut_preset. Refer to the AMMCLIB User's Guide for further detai"
		"ls."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32PropGain'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32PropGain'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f32PropGain'], 'Orientation');\n        delete_block(       [gcb, '/f32PropGain']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/f32PropGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/f32IntegGain'], 'Position');\n        orient = get_param( [gcb, '/f32IntegGain'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/f32IntegGain']);\n        add_block('built-in/Ground', [gcb, '/f32IntegGain'], 'Position', po"
		"s, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32DerivGain'], 'Position');\n        orient = get"
		"_param( [gcb, '/f32DerivGain'], 'Orientation');\n        delete_block(       [gcb, '/f32DerivGain']);\n        add_b"
		"lock('built-in/Ground', [gcb, '/f32DerivGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param("
		"    [gcb, '/f32FiltCoef'], 'Position');\n        orient = get_param( [gcb, '/f32FiltCoef'], 'Orientation');\n       "
		" delete_block(       [gcb, '/f32FiltCoef']);\n        add_block('built-in/Ground', [gcb, '/f32FiltCoef'], 'Position'"
		", pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16PropGainShift'], 'Position');\n        orie"
		"nt = get_param( [gcb, '/s16PropGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShift'])"
		";\n        add_block('built-in/Ground', [gcb, '/s16PropGainShift'], 'Position', pos, 'Orientation', orient);\n\n    "
		"    pos = get_param(    [gcb, '/s16IntegGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16IntegGainS"
		"hift'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShift']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s1"
		"6DerivGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16DerivGainShift'], 'Orientation');\n        d"
		"elete_block(       [gcb, '/s16DerivGainShift']);\n        add_block('built-in/Ground', [gcb, '/s16DerivGainShift'], "
		"'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32LowerLimit'], 'Position');\n     "
		"   orient = get_param( [gcb, '/f32LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimit']"
		");\n        add_block('built-in/Ground', [gcb, '/f32LowerLimit'], 'Position', pos, 'Orientation', orient);\n\n      "
		"  pos = get_param(    [gcb, '/f32UpperLimit'], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimit'], 'O"
		"rientation');\n        delete_block(       [gcb, '/f32UpperLimit']);\n        add_block('built-in/Ground', [gcb, '/f"
		"32UpperLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1'], '"
		"Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n        delete_block(       [gc"
		"b, '/f32IntegPartK_1']);\n        add_block('built-in/Ground', [gcb, '/f32IntegPartK_1'], 'Position', pos, 'Orientat"
		"ion', orient);\n\n        pos = get_param(    [gcb, '/f32DerivPartK_1'], 'Position');\n        orient = get_param( ["
		"gcb, '/f32DerivPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32DerivPartK_1']);\n        add_bloc"
		"k('built-in/Ground', [gcb, '/f32DerivPartK_1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param("
		"    [gcb, '/f32InK_1'], 'Position');\n        orient = get_param( [gcb, '/f32InK_1'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/f32InK_1']);\n        add_block('built-in/Ground', [gcb, '/f32InK_1'], 'Position', pos, 'Orie"
		"ntation', orient);\n\n\n        pos = get_param(    [gcb '/f32IntegPartK_1_Out'], 'Position');\n        orient = get"
		"_param( [gcb '/f32IntegPartK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IntegPartK_1_Out']);\n "
		"       add_block('built-in/Terminator', [gcb '/f32IntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n  "
		"      pos = get_param(    [gcb '/f32DerivPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32DerivPar"
		"tK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32DerivPartK_1_Out']);\n        add_block('built-in"
		"/Terminator', [gcb '/f32DerivPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    "
		"[gcb '/f32InK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32InK_1_Out'], 'Orientation');\n        del"
		"ete_block(       [gcb '/f32InK_1_Out']);\n        add_block('built-in/Terminator', [gcb '/f32InK_1_Out'], 'Position'"
		", pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32InErr'], 'Port', '1');\n        set_param([gcb '/f32"
		"ControllerPIDpAWOut_preset'], 'Port', '2');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n        set_param(["
		"gcb '/u16LimitFlag'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on',"
		"'on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n          set_param(gcb,'Posit"
		"ion',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n"
		"    if strcmp(get_param([gcb '/f32PropGain'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n"
		"\n        pos = get_param(    [gcb, '/f32PropGain'], 'Position');\n        orient = get_param( [gcb, '/f32PropGain']"
		", 'Orientation');\n        delete_block(       [gcb, '/f32PropGain']);\n        add_block('built-in/Inport', [gcb, '"
		"/f32PropGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    ["
		"gcb, '/f32IntegGain'], 'Position');\n        orient = get_param( [gcb, '/f32IntegGain'], 'Orientation');\n        de"
		"lete_block(       [gcb, '/f32IntegGain']);\n        add_block('built-in/Inport', [gcb, '/f32IntegGain'], 'Position',"
		" pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32DerivGain'], 'Pos"
		"ition');\n        orient = get_param( [gcb, '/f32DerivGain'], 'Orientation');\n        delete_block(       [gcb, '/f"
		"32DerivGain']);\n        add_block('built-in/Inport', [gcb, '/f32DerivGain'], 'Position', pos, 'Orientation', orient"
		", 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32FiltCoef'], 'Position');\n        orient = g"
		"et_param( [gcb, '/f32FiltCoef'], 'Orientation');\n        delete_block(       [gcb, '/f32FiltCoef']);\n        add_b"
		"lock('built-in/Inport', [gcb, '/f32FiltCoef'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n"
		"\n        pos = get_param(    [gcb, '/s16PropGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16PropG"
		"ainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShift']);\n        add_block('built-in/I"
		"nport', [gcb, '/s16PropGainShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        p"
		"os = get_param(    [gcb, '/s16IntegGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16IntegGainShift'"
		"], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShift']);\n        add_block('built-in/Inport', "
		"[gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = ge"
		"t_param(    [gcb, '/s16DerivGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16DerivGainShift'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/s16DerivGainShift']);\n        add_block('built-in/Inport', [gcb, '"
		"/s16DerivGainShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param"
		"(    [gcb, '/f32LowerLimit'], 'Position');\n        orient = get_param( [gcb, '/f32LowerLimit'], 'Orientation');\n  "
		"      delete_block(       [gcb, '/f32LowerLimit']);\n        add_block('built-in/Inport', [gcb, '/f32LowerLimit'], '"
		"Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32UpperLi"
		"mit'], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimit'], 'Orientation');\n        delete_block(    "
		"   [gcb, '/f32UpperLimit']);\n        add_block('built-in/Inport', [gcb, '/f32UpperLimit'], 'Position', pos, 'Orient"
		"ation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1'], 'Position');\n"
		"        orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32Integ"
		"PartK_1']);\n        add_block('built-in/Inport', [gcb, '/f32IntegPartK_1'], 'Position', pos, 'Orientation', orient,"
		" 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32DerivPartK_1'], 'Position');\n        orient "
		"= get_param( [gcb, '/f32DerivPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32DerivPartK_1']);\n  "
		"      add_block('built-in/Inport', [gcb, '/f32DerivPartK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeSt"
		"r', 'int32');\n\n        pos = get_param(    [gcb, '/f32InK_1'], 'Position');\n        orient = get_param( [gcb, '/f"
		"32InK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32InK_1']);\n        add_block('built-in/Inport', ["
		"gcb, '/f32InK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n        pos = get_param("
		"    [gcb '/f32IntegPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1_Out'], 'Orientati"
		"on');\n        delete_block(       [gcb '/f32IntegPartK_1_Out']);\n        add_block('built-in/Outport', [gcb '/f32I"
		"ntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32DerivPartK_1_Ou"
		"t'], 'Position');\n        orient = get_param( [gcb '/f32DerivPartK_1_Out'], 'Orientation');\n        delete_block( "
		"      [gcb '/f32DerivPartK_1_Out']);\n        add_block('built-in/Outport', [gcb '/f32DerivPartK_1_Out'], 'Position'"
		", pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InK_1_Out'], 'Position');\n        orient = "
		"get_param( [gcb '/f32InK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InK_1_Out']);\n        add_"
		"block('built-in/Outport', [gcb '/f32InK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gc"
		"b '/f32InErr'], 'Port', '1');\n        set_param([gcb '/f32ControllerPIDpAWOut_preset'], 'Port', '2');\n        set_"
		"param([gcb '/f32PropGain'], 'Port', '3');\n        set_param([gcb '/f32IntegGain'], 'Port', '4');\n        set_param"
		"([gcb '/f32DerivGain'], 'Port', '5');\n        set_param([gcb '/f32FiltCoef'], 'Port', '6');\n        set_param([gcb"
		" '/s16PropGainShift'], 'Port', '7');\n        set_param([gcb '/s16IntegGainShift'], 'Port', '8');\n        set_param"
		"([gcb '/s16DerivGainShift'], 'Port', '9');\n        set_param([gcb '/f32LowerLimit'], 'Port', '10');\n        set_pa"
		"ram([gcb '/f32UpperLimit'], 'Port', '11');\n        set_param([gcb '/f32IntegPartK_1'], 'Port', '12');\n        set_"
		"param([gcb '/f32DerivPartK_1'], 'Port', '13');\n        set_param([gcb '/f32InK_1'], 'Port', '14');\n\n        set_p"
		"aram([gcb '/f32Out'], 'Port', '1');\n        set_param([gcb '/u16LimitFlag'], 'Port', '2');\n        set_param([gcb "
		"'/f32IntegPartK_1_Out'], 'Port', '3');\n        set_param([gcb '/f32DerivPartK_1_Out'], 'Port', '4');\n        set_p"
		"aram([gcb '/f32InK_1_Out'], 'Port', '5');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off',"
		"'off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 375\n          height = 375;\n          set"
		"_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIDpAW_F32', 'horizontalAlignment', 'cen"
		"ter');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited perfor"
		"mance)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  11
		  Object {
		    $ObjectID		    550
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskE"
		    "nables',{'on','on','off','off','off','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    551
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    552
		    Type		    "edit"
		    Name		    "f32PropGain"
		    Prompt		    "f32PropGain (Proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    553
		    Type		    "edit"
		    Name		    "f32IntegGain"
		    Prompt		    "f32IntegGain (Integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    554
		    Type		    "edit"
		    Name		    "f32DerivGain"
		    Prompt		    "f32DerivGain (Derivative gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    555
		    Type		    "edit"
		    Name		    "f32FiltCoef"
		    Prompt		    "f32FiltCoef (Derivative term filter coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    556
		    Type		    "edit"
		    Name		    "s16PropGainShift"
		    Prompt		    "s16PropGainShift (Proportional gain shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    557
		    Type		    "edit"
		    Name		    "s16IntegGainShift"
		    Prompt		    "s16IntegGainShift (Integral gain shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    558
		    Type		    "edit"
		    Name		    "s16DerivGainShift"
		    Prompt		    "s16DerivGainShift (Derivative gain shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    559
		    Type		    "edit"
		    Name		    "f32LowerLimit"
		    Prompt		    "f32LowerLimit (Lower limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    560
		    Type		    "edit"
		    Name		    "f32UpperLimit"
		    Prompt		    "f32UpperLimit (Upper limit of the controller)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIDpAW_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"45"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32InErr"
		  SID			  "204:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32ControllerPIDpAWOut_preset"
		  SID			  "204:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "204:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIDpAW_SF"
		  SID			  "204:5"
		  Ports			  [14, 5]
		  Position		  [135, 175, 285, 240]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIDpAW_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,f32PropGain,f32IntegGain,f32DerivGain,f32FiltCoef,s16PropGainShift,s16"
		  "IntegGainShift,s16DerivGainShift,f32LowerLimit,f32UpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "204:25"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  27
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    561
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "204:28"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  28
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    562
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIDpAW_BAM_F32.mdl');text(10,75,'Parallel form of a standard PID contr"
		    "oller with anti-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32DerivGain"
		  SID			  "204:33"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32DerivPartK_1"
		  SID			  "204:41"
		  Position		  [40, 678, 70, 692]
		  ZOrder		  39
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32DerivPartK_1_Out"
		  SID			  "204:44"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  42
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32FiltCoef"
		  SID			  "204:34"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InK_1"
		  SID			  "204:42"
		  Position		  [40, 718, 70, 732]
		  ZOrder		  40
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InK_1_Out"
		  SID			  "204:45"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  43
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegGain"
		  SID			  "204:32"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1"
		  SID			  "204:40"
		  Position		  [40, 638, 70, 652]
		  ZOrder		  38
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1_Out"
		  SID			  "204:43"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  41
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimit"
		  SID			  "204:38"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  36
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32PropGain"
		  SID			  "204:31"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimit"
		  SID			  "204:39"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16DerivGainShift"
		  SID			  "204:37"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShift"
		  SID			  "204:36"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  34
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShift"
		  SID			  "204:35"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "204:20"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  22
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlag"
		  SID			  "204:21"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  23
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  5
		  DstBlock		  "f32InK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  4
		  DstBlock		  "f32DerivPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  3
		  DstBlock		  "f32IntegPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlag"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32InK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  14
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f32DerivPartK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  13
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32IntegPartK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  12
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f32UpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f32LowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "s16DerivGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "s16IntegGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "s16PropGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f32FiltCoef"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "f32DerivGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "f32IntegGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  17
		  SrcBlock		  "f32PropGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  18
		  SrcBlock		  "f32ControllerPIDpAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  19
		  SrcBlock		  "f32InErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIpAW_F32"
	      SID		      "205"
	      Ports		      [2, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 620, 275, 695]
	      ZOrder		      9
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		563
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIpAW_F32"
		Description		"Parallel form PI controller with anti-windup in 32-bit fixed-point fractional implementation. This blo"
		"ck supports re-initialization of the internal state during simulation. If the block is reset, the controller's outpu"
		"t will be aligned with the input f32ControllerPIpAWOut_preset. Refer to the AMMCLIB User's Guide for further details"
		"."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32PropGain'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32PropGain'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f32PropGain'], 'Orientation');\n        delete_block(       [gcb, '/f32PropGain']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/f32PropGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/f32IntegGain'], 'Position');\n        orient = get_param( [gcb, '/f32IntegGain'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/f32IntegGain']);\n        add_block('built-in/Ground', [gcb, '/f32IntegGain'], 'Position', po"
		"s, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16PropGainShift'], 'Position');\n        orient ="
		" get_param( [gcb, '/s16PropGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShift']);\n "
		"       add_block('built-in/Ground', [gcb, '/s16PropGainShift'], 'Position', pos, 'Orientation', orient);\n\n        "
		"pos = get_param(    [gcb, '/s16IntegGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16IntegGainShift"
		"'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShift']);\n        add_block('built-in/Ground',"
		" [gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32Low"
		"erLimit'], 'Position');\n        orient = get_param( [gcb, '/f32LowerLimit'], 'Orientation');\n        delete_block("
		"       [gcb, '/f32LowerLimit']);\n        add_block('built-in/Ground', [gcb, '/f32LowerLimit'], 'Position', pos, 'Or"
		"ientation', orient);\n\n        pos = get_param(    [gcb, '/f32UpperLimit'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f32UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32UpperLimit']);\n        add_bloc"
		"k('built-in/Ground', [gcb, '/f32UpperLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(  "
		"  [gcb, '/f32IntegPartK_1'], 'Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n "
		"       delete_block(       [gcb, '/f32IntegPartK_1']);\n        add_block('built-in/Ground', [gcb, '/f32IntegPartK_1"
		"'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32InK_1'], 'Position');\n      "
		"  orient = get_param( [gcb, '/f32InK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32InK_1']);\n       "
		" add_block('built-in/Ground', [gcb, '/f32InK_1'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_pa"
		"ram(    [gcb '/f32IntegPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1_Out'], 'Orien"
		"tation');\n        delete_block(       [gcb '/f32IntegPartK_1_Out']);\n        add_block('built-in/Terminator', [gcb"
		" '/f32IntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InK_1_Ou"
		"t'], 'Position');\n        orient = get_param( [gcb '/f32InK_1_Out'], 'Orientation');\n        delete_block(       ["
		"gcb '/f32InK_1_Out']);\n        add_block('built-in/Terminator', [gcb '/f32InK_1_Out'], 'Position', pos, 'Orientatio"
		"n', orient);\n\n\n        set_param([gcb '/f32InErr'], 'Port', '1');\n        set_param([gcb '/f32ControllerPIpAWOut"
		"_preset'], 'Port', '2');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n        set_param([gcb '/u16LimitFlag'"
		"], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on'});\n\n        if (p"
		"osblk(4) - posblk(2)) > 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk"
		"(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f32"
		"PropGain'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gc"
		"b, '/f32PropGain'], 'Position');\n        orient = get_param( [gcb, '/f32PropGain'], 'Orientation');\n        delete"
		"_block(       [gcb, '/f32PropGain']);\n        add_block('built-in/Inport', [gcb, '/f32PropGain'], 'Position', pos, "
		"'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32IntegGain'], 'Position'"
		");\n        orient = get_param( [gcb, '/f32IntegGain'], 'Orientation');\n        delete_block(       [gcb, '/f32Inte"
		"gGain']);\n        add_block('built-in/Inport', [gcb, '/f32IntegGain'], 'Position', pos, 'Orientation', orient, 'Out"
		"DataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/s16PropGainShift'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/s16PropGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShift']);\n    "
		"    add_block('built-in/Inport', [gcb, '/s16PropGainShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr"
		"', 'int16');\n\n        pos = get_param(    [gcb, '/s16IntegGainShift'], 'Position');\n        orient = get_param( ["
		"gcb, '/s16IntegGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShift']);\n        add_"
		"block('built-in/Inport', [gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int"
		"16');\n\n        pos = get_param(    [gcb, '/f32LowerLimit'], 'Position');\n        orient = get_param( [gcb, '/f32L"
		"owerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimit']);\n        add_block('built-in/Inp"
		"ort', [gcb, '/f32LowerLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = "
		"get_param(    [gcb, '/f32UpperLimit'], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimit'], 'Orientati"
		"on');\n        delete_block(       [gcb, '/f32UpperLimit']);\n        add_block('built-in/Inport', [gcb, '/f32UpperL"
		"imit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f"
		"32IntegPartK_1'], 'Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n        dele"
		"te_block(       [gcb, '/f32IntegPartK_1']);\n        add_block('built-in/Inport', [gcb, '/f32IntegPartK_1'], 'Positi"
		"on', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32InK_1'], 'Pos"
		"ition');\n        orient = get_param( [gcb, '/f32InK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32In"
		"K_1']);\n        add_block('built-in/Inport', [gcb, '/f32InK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTy"
		"peStr', 'int32');\n\n\n        pos = get_param(    [gcb '/f32IntegPartK_1_Out'], 'Position');\n        orient = get_"
		"param( [gcb '/f32IntegPartK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32IntegPartK_1_Out']);\n  "
		"      add_block('built-in/Outport', [gcb '/f32IntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n      "
		"  pos = get_param(    [gcb '/f32InK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32InK_1_Out'], 'Orien"
		"tation');\n        delete_block(       [gcb '/f32InK_1_Out']);\n        add_block('built-in/Outport', [gcb '/f32InK_"
		"1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32InErr'], 'Port', '1');\n        s"
		"et_param([gcb '/f32ControllerPIpAWOut_preset'], 'Port', '2');\n        set_param([gcb '/f32PropGain'], 'Port', '3');"
		"\n        set_param([gcb '/f32IntegGain'], 'Port', '4');\n        set_param([gcb '/s16PropGainShift'], 'Port', '5');"
		"\n        set_param([gcb '/s16IntegGainShift'], 'Port', '6');\n        set_param([gcb '/f32LowerLimit'], 'Port', '7'"
		");\n        set_param([gcb '/f32UpperLimit'], 'Port', '8');\n        set_param([gcb '/f32IntegPartK_1'], 'Port', '9'"
		");\n        set_param([gcb '/f32InK_1'], 'Port', '10');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n       "
		" set_param([gcb '/u16LimitFlag'], 'Port', '2');\n        set_param([gcb '/f32IntegPartK_1_Out'], 'Port', '3');\n    "
		"    set_param([gcb '/f32InK_1_Out'], 'Port', '4');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','of"
		"f','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 275\n          height = 275;\n          set_param(gc"
		"b,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIpAW_F32', 'horizontalAlignment', 'cent"
		"er');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited perform"
		"ance)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  8
		  Object {
		    $ObjectID		    564
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','"
		    "on','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    565
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    566
		    Type		    "edit"
		    Name		    "f32PropGain"
		    Prompt		    "f32PropGain (Proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    567
		    Type		    "edit"
		    Name		    "f32IntegGain"
		    Prompt		    "f32IntegGain (Integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    568
		    Type		    "edit"
		    Name		    "s16PropGainShift"
		    Prompt		    "s16PropGainShift (Proportional gain shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    569
		    Type		    "edit"
		    Name		    "s16IntegGainShift"
		    Prompt		    "s16IntegGainShift (Integral gain shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    570
		    Type		    "edit"
		    Name		    "f32LowerLimit"
		    Prompt		    "f32LowerLimit (Lower limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    571
		    Type		    "edit"
		    Name		    "f32UpperLimit"
		    Prompt		    "f32UpperLimit (Upper limit of the controller)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIpAW_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"35"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32InErr"
		  SID			  "205:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32ControllerPIpAWOut_preset"
		  SID			  "205:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "205:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIpAW_SF"
		  SID			  "205:5"
		  Ports			  [10, 4]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIpAW_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,f32PropGain,f32IntegGain,s16PropGainShift,s16IntegGainShift,f32LowerLi"
		  "mit,f32UpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "205:20"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  22
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    572
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "205:23"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  23
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    573
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIpAW_BAM_F32.mdl');text(10,75,'Parallel form of a standard PI control"
		    "ler with anti-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InK_1"
		  SID			  "205:33"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InK_1_Out"
		  SID			  "205:35"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegGain"
		  SID			  "205:27"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1"
		  SID			  "205:32"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1_Out"
		  SID			  "205:34"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimit"
		  SID			  "205:30"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32PropGain"
		  SID			  "205:26"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimit"
		  SID			  "205:31"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShift"
		  SID			  "205:29"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShift"
		  SID			  "205:28"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "205:16"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  18
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlag"
		  SID			  "205:17"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  19
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIpAW_SF"
		  SrcPort		  4
		  DstBlock		  "f32InK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIpAW_SF"
		  SrcPort		  3
		  DstBlock		  "f32IntegPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIpAW_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlag"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "GFLIB_ControllerPIpAW_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32InK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32IntegPartK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f32UpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32LowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "s16IntegGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "s16PropGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f32IntegGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "f32PropGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "f32ControllerPIpAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "f32InErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIp_F32"
	      SID		      "206"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 715, 265, 790]
	      ZOrder		      10
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		574
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIp_F32"
		Description		"Parallel form PI controller without anti-windup in 32-bit fixed-point fractional implementation. This "
		"block supports re-initialization of the internal state during simulation. If the block is reset, the controller's ou"
		"tput will be aligned with the input f32ControllerPIpOut_preset. Refer to the AMMCLIB User's Guide for further detail"
		"s."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32PropGain'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32PropGain'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f32PropGain'], 'Orientation');\n        delete_block(       [gcb, '/f32PropGain']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/f32PropGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/f32IntegGain'], 'Position');\n        orient = get_param( [gcb, '/f32IntegGain'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/f32IntegGain']);\n        add_block('built-in/Ground', [gcb, '/f32IntegGain'], 'Position', po"
		"s, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16PropGainShift'], 'Position');\n        orient ="
		" get_param( [gcb, '/s16PropGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16PropGainShift']);\n "
		"       add_block('built-in/Ground', [gcb, '/s16PropGainShift'], 'Position', pos, 'Orientation', orient);\n\n        "
		"pos = get_param(    [gcb, '/s16IntegGainShift'], 'Position');\n        orient = get_param( [gcb, '/s16IntegGainShift"
		"'], 'Orientation');\n        delete_block(       [gcb, '/s16IntegGainShift']);\n        add_block('built-in/Ground',"
		" [gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32Int"
		"egPartK_1'], 'Position');\n        orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n        delete_bl"
		"ock(       [gcb, '/f32IntegPartK_1']);\n        add_block('built-in/Ground', [gcb, '/f32IntegPartK_1'], 'Position', "
		"pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32InK_1'], 'Position');\n        orient = get_p"
		"aram( [gcb, '/f32InK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32InK_1']);\n        add_block('buil"
		"t-in/Ground', [gcb, '/f32InK_1'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f"
		"32IntegPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1_Out'], 'Orientation');\n     "
		"   delete_block(       [gcb '/f32IntegPartK_1_Out']);\n        add_block('built-in/Terminator', [gcb '/f32IntegPartK"
		"_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InK_1_Out'], 'Position')"
		";\n        orient = get_param( [gcb '/f32InK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InK_1_O"
		"ut']);\n        add_block('built-in/Terminator', [gcb '/f32InK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n"
		"\n        set_param([gcb '/f32InErr'], 'Port', '1');\n        set_param([gcb '/f32ControllerPIpOut_preset'], 'Port',"
		" '2');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','o"
		"n','on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n          set_param(gcb,'Positio"
		"n',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n  "
		"  if strcmp(get_param([gcb '/f32PropGain'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n"
		"        pos = get_param(    [gcb, '/f32PropGain'], 'Position');\n        orient = get_param( [gcb, '/f32PropGain'], "
		"'Orientation');\n        delete_block(       [gcb, '/f32PropGain']);\n        add_block('built-in/Inport', [gcb, '/f"
		"32PropGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gc"
		"b, '/f32IntegGain'], 'Position');\n        orient = get_param( [gcb, '/f32IntegGain'], 'Orientation');\n        dele"
		"te_block(       [gcb, '/f32IntegGain']);\n        add_block('built-in/Inport', [gcb, '/f32IntegGain'], 'Position', p"
		"os, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/s16PropGainShift'], 'P"
		"osition');\n        orient = get_param( [gcb, '/s16PropGainShift'], 'Orientation');\n        delete_block(       [gc"
		"b, '/s16PropGainShift']);\n        add_block('built-in/Inport', [gcb, '/s16PropGainShift'], 'Position', pos, 'Orient"
		"ation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/s16IntegGainShift'], 'Position');"
		"\n        orient = get_param( [gcb, '/s16IntegGainShift'], 'Orientation');\n        delete_block(       [gcb, '/s16I"
		"ntegGainShift']);\n        add_block('built-in/Inport', [gcb, '/s16IntegGainShift'], 'Position', pos, 'Orientation',"
		" orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/f32IntegPartK_1'], 'Position');\n       "
		" orient = get_param( [gcb, '/f32IntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32IntegPartK_1"
		"']);\n        add_block('built-in/Inport', [gcb, '/f32IntegPartK_1'], 'Position', pos, 'Orientation', orient, 'OutDa"
		"taTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32InK_1'], 'Position');\n        orient = get_param( ["
		"gcb, '/f32InK_1'], 'Orientation');\n        delete_block(       [gcb, '/f32InK_1']);\n        add_block('built-in/In"
		"port', [gcb, '/f32InK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n        pos = ge"
		"t_param(    [gcb '/f32IntegPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/f32IntegPartK_1_Out'], 'O"
		"rientation');\n        delete_block(       [gcb '/f32IntegPartK_1_Out']);\n        add_block('built-in/Outport', [gc"
		"b '/f32IntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InK_1_O"
		"ut'], 'Position');\n        orient = get_param( [gcb '/f32InK_1_Out'], 'Orientation');\n        delete_block(       "
		"[gcb '/f32InK_1_Out']);\n        add_block('built-in/Outport', [gcb '/f32InK_1_Out'], 'Position', pos, 'Orientation'"
		", orient);\n\n\n        set_param([gcb '/f32InErr'], 'Port', '1');\n        set_param([gcb '/f32ControllerPIpOut_pre"
		"set'], 'Port', '2');\n        set_param([gcb '/f32PropGain'], 'Port', '3');\n        set_param([gcb '/f32IntegGain']"
		", 'Port', '4');\n        set_param([gcb '/s16PropGainShift'], 'Port', '5');\n        set_param([gcb '/s16IntegGainSh"
		"ift'], 'Port', '6');\n        set_param([gcb '/f32IntegPartK_1'], 'Port', '7');\n        set_param([gcb '/f32InK_1']"
		", 'Port', '8');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n        set_param([gcb '/f32IntegPartK_1_Out'],"
		" 'Port', '2');\n        set_param([gcb '/f32InK_1_Out'], 'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on',"
		"'on','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 225\n          height = 225;\n          set_"
		"param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIp_F32', 'horizontalAlignment', 'center"
		"');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performan"
		"ce)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  6
		  Object {
		    $ObjectID		    575
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off',"
		    "'off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    576
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    577
		    Type		    "edit"
		    Name		    "f32PropGain"
		    Prompt		    "f32PropGain (Proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    578
		    Type		    "edit"
		    Name		    "f32IntegGain"
		    Prompt		    "f32IntegGain (Integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    579
		    Type		    "edit"
		    Name		    "s16PropGainShift"
		    Prompt		    "s16PropGainShift (Proportional gain shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    580
		    Type		    "edit"
		    Name		    "s16IntegGainShift"
		    Prompt		    "s16IntegGainShift (Integral gain shift)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIp_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"30"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32InErr"
		  SID			  "206:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32ControllerPIpOut_preset"
		  SID			  "206:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "206:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIp_SF"
		  SID			  "206:5"
		  Ports			  [8, 3]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIp_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,f32PropGain,f32IntegGain,s16PropGainShift,s16IntegGainShift"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "206:17"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  19
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    581
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "206:20"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  20
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    582
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIp_BAM_F32.mdl');text(10,75,'Parallel form of a standard PI controlle"
		    "r without anti-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InK_1"
		  SID			  "206:28"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InK_1_Out"
		  SID			  "206:30"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegGain"
		  SID			  "206:24"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32IntegPartK_1"
		  SID			  "206:27"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32IntegPartK_1_Out"
		  SID			  "206:29"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32PropGain"
		  SID			  "206:23"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16IntegGainShift"
		  SID			  "206:26"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16PropGainShift"
		  SID			  "206:25"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "206:14"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  16
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIp_SF"
		  SrcPort		  3
		  DstBlock		  "f32InK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIp_SF"
		  SrcPort		  2
		  DstBlock		  "f32IntegPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIp_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32InK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32IntegPartK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "s16IntegGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "s16PropGainShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32IntegGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f32PropGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f32ControllerPIpOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f32InErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIrAW_F32"
	      SID		      "207"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 810, 275, 885]
	      ZOrder		      11
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		583
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIrAW_F32"
		Description		"Recurrent form PI controller with anti-windup in 32-bit fixed-point fractional implementation. This bl"
		"ock supports re-initialization of the internal state during simulation. If the block is reset, the controller's outp"
		"ut will be aligned with the input f32ControllerPIrAWOut_preset. Refer to the AMMCLIB User's Guide for further detail"
		"s."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32UpperLimit'], 'BlockType'), 'Inport')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32UpperLimit'], 'Position');\n        orient = get_"
		"param( [gcb, '/f32UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32UpperLimit']);\n        add_"
		"block('built-in/Ground', [gcb, '/f32UpperLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_para"
		"m(    [gcb, '/f32LowerLimit'], 'Position');\n        orient = get_param( [gcb, '/f32LowerLimit'], 'Orientation');\n "
		"       delete_block(       [gcb, '/f32LowerLimit']);\n        add_block('built-in/Ground', [gcb, '/f32LowerLimit'], "
		"'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        orie"
		"nt = get_param( [gcb, '/f32Acc'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc']);\n        add_block"
		"('built-in/Ground', [gcb, '/f32Acc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, "
		"'/f32InErrK1'], 'Position');\n        orient = get_param( [gcb, '/f32InErrK1'], 'Orientation');\n        delete_bloc"
		"k(       [gcb, '/f32InErrK1']);\n        add_block('built-in/Ground', [gcb, '/f32InErrK1'], 'Position', pos, 'Orient"
		"ation', orient);\n\n        pos = get_param(    [gcb, '/f32CC1sc'], 'Position');\n        orient = get_param( [gcb, "
		"'/f32CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc']);\n        add_block('built-in/Ground'"
		", [gcb, '/f32CC1sc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32CC2sc'], 'P"
		"osition');\n        orient = get_param( [gcb, '/f32CC2sc'], 'Orientation');\n        delete_block(       [gcb, '/f32"
		"CC2sc']);\n        add_block('built-in/Ground', [gcb, '/f32CC2sc'], 'Position', pos, 'Orientation', orient);\n\n    "
		"    pos = get_param(    [gcb, '/u16NShift'], 'Position');\n        orient = get_param( [gcb, '/u16NShift'], 'Orienta"
		"tion');\n        delete_block(       [gcb, '/u16NShift']);\n        add_block('built-in/Ground', [gcb, '/u16NShift']"
		", 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n     "
		"   orient = get_param( [gcb '/f32Acc_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n    "
		"    add_block('built-in/Terminator', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = "
		"get_param(    [gcb '/f32InErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/f32InErrK1_Out'], 'Orientati"
		"on');\n        delete_block(       [gcb '/f32InErrK1_Out']);\n        add_block('built-in/Terminator', [gcb '/f32InE"
		"rrK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32InErr'], 'Port', '1');\n      "
		"  set_param([gcb '/f32ControllerPIrAWOut_preset'], 'Port', '2');\n\n        set_param([gcb '/f32Out'], 'Port', '1');"
		"\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2))"
		" > 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height"
		"])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f32UpperLimit'], 'BlockT"
		"ype'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32UpperLimit'"
		"], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimit'], 'Orientation');\n        delete_block(       ["
		"gcb, '/f32UpperLimit']);\n        add_block('built-in/Inport', [gcb, '/f32UpperLimit'], 'Position', pos, 'Orientatio"
		"n', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32LowerLimit'], 'Position');\n      "
		"  orient = get_param( [gcb, '/f32LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimit'])"
		";\n        add_block('built-in/Inport', [gcb, '/f32LowerLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTyp"
		"eStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/"
		"f32Acc'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc']);\n        add_block('built-in/Inport', [gcb"
		", '/f32Acc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gc"
		"b, '/f32InErrK1'], 'Position');\n        orient = get_param( [gcb, '/f32InErrK1'], 'Orientation');\n        delete_b"
		"lock(       [gcb, '/f32InErrK1']);\n        add_block('built-in/Inport', [gcb, '/f32InErrK1'], 'Position', pos, 'Ori"
		"entation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32CC1sc'], 'Position');\n    "
		"    orient = get_param( [gcb, '/f32CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc']);\n     "
		"   add_block('built-in/Inport', [gcb, '/f32CC1sc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32"
		"');\n\n        pos = get_param(    [gcb, '/f32CC2sc'], 'Position');\n        orient = get_param( [gcb, '/f32CC2sc'],"
		" 'Orientation');\n        delete_block(       [gcb, '/f32CC2sc']);\n        add_block('built-in/Inport', [gcb, '/f32"
		"CC2sc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/"
		"u16NShift'], 'Position');\n        orient = get_param( [gcb, '/u16NShift'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/u16NShift']);\n        add_block('built-in/Inport', [gcb, '/u16NShift'], 'Position', pos, 'Orientation'"
		", orient, 'OutDataTypeStr', 'uint16');\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n        o"
		"rient = get_param( [gcb '/f32Acc_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n        "
		"add_block('built-in/Outport', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_par"
		"am(    [gcb '/f32InErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/f32InErrK1_Out'], 'Orientation');\n"
		"        delete_block(       [gcb '/f32InErrK1_Out']);\n        add_block('built-in/Outport', [gcb '/f32InErrK1_Out']"
		", 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32InErr'], 'Port', '1');\n        set_para"
		"m([gcb '/f32ControllerPIrAWOut_preset'], 'Port', '2');\n        set_param([gcb '/f32UpperLimit'], 'Port', '3');\n   "
		"     set_param([gcb '/f32LowerLimit'], 'Port', '4');\n        set_param([gcb '/f32Acc'], 'Port', '5');\n        set_"
		"param([gcb '/f32InErrK1'], 'Port', '6');\n        set_param([gcb '/f32CC1sc'], 'Port', '7');\n        set_param([gcb"
		" '/f32CC2sc'], 'Port', '8');\n        set_param([gcb '/u16NShift'], 'Port', '9');\n\n        set_param([gcb '/f32Out"
		"'], 'Port', '1');\n        set_param([gcb '/f32Acc_Out'], 'Port', '2');\n        set_param([gcb '/f32InErrK1_Out'], "
		"'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off','off'});\n\n        if (posb"
		"lk(4) - posblk(2)) < 250\n          height = 250;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk("
		"3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIrAW_F32', 'horizontalAlignment', 'cent"
		"er');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited perform"
		"ance)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  7
		  Object {
		    $ObjectID		    584
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','"
		    "off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    585
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    586
		    Type		    "edit"
		    Name		    "f32UpperLimit"
		    Prompt		    "f32UpperLimit (Upper Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    587
		    Type		    "edit"
		    Name		    "f32LowerLimit"
		    Prompt		    "f32LowerLimit (Lower Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    588
		    Type		    "edit"
		    Name		    "f32CC1sc"
		    Prompt		    "f32CC1sc (CC1 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    589
		    Type		    "edit"
		    Name		    "f32CC2sc"
		    Prompt		    "f32CC2sc (CC2 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    590
		    Type		    "edit"
		    Name		    "u16NShift"
		    Prompt		    "u16NShift (Scaling bitwise shift applied to the controller coefficients)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIrAW_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"32"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32InErr"
		  SID			  "207:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32ControllerPIrAWOut_preset"
		  SID			  "207:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "207:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIrAW_SF"
		  SID			  "207:5"
		  Ports			  [9, 3]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIrAW_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,f32UpperLimit,f32LowerLimit,f32CC1sc,f32CC2sc,u16NShift"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "207:18"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  20
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    591
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "207:21"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  21
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    592
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIrAW_BAM_F32.mdl');text(10,75,'Recurrent form PI controller with anti"
		    "-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc"
		  SID			  "207:26"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Out"
		  SID			  "207:31"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC1sc"
		  SID			  "207:28"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC2sc"
		  SID			  "207:29"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InErrK1"
		  SID			  "207:27"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InErrK1_Out"
		  SID			  "207:32"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimit"
		  SID			  "207:25"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimit"
		  SID			  "207:24"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShift"
		  SID			  "207:30"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "207:15"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  17
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIrAW_SF"
		  SrcPort		  3
		  DstBlock		  "f32InErrK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIrAW_SF"
		  SrcPort		  2
		  DstBlock		  "f32Acc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIrAW_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "u16NShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32CC2sc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32CC1sc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f32InErrK1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32Acc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f32LowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f32UpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "f32ControllerPIrAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "f32InErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIr_F32"
	      SID		      "208"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 905, 265, 980]
	      ZOrder		      12
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		593
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIr_F32"
		Description		"Reccurent form PI controller without anti-windup in 32-bit fixed-point fractional implementation. This"
		" block supports re-initialization of the internal state during simulation. If the block is reset, the controller's o"
		"utput will be aligned with the input f32ControllerPIrOut_preset. Refer to the AMMCLIB User's Guide for further detai"
		"ls."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32CC1sc'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32CC1sc'], 'Position');\n        orient = get_param( [gc"
		"b, '/f32CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/f32CC1sc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32CC2sc'],"
		" 'Position');\n        orient = get_param( [gcb, '/f32CC2sc'], 'Orientation');\n        delete_block(       [gcb, '/"
		"f32CC2sc']);\n        add_block('built-in/Ground', [gcb, '/f32CC2sc'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/f32Acc'], 'Position');\n        orient = get_param( [gcb, '/f32Acc'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/f32Acc']);\n        add_block('built-in/Ground', [gcb, '/f32Acc'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32InErrK1'], 'Position');\n        orient "
		"= get_param( [gcb, '/f32InErrK1'], 'Orientation');\n        delete_block(       [gcb, '/f32InErrK1']);\n        add_"
		"block('built-in/Ground', [gcb, '/f32InErrK1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param( "
		"   [gcb, '/u16NShift'], 'Position');\n        orient = get_param( [gcb, '/u16NShift'], 'Orientation');\n        dele"
		"te_block(       [gcb, '/u16NShift']);\n        add_block('built-in/Ground', [gcb, '/u16NShift'], 'Position', pos, 'O"
		"rientation', orient);\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n        orient = get_param"
		"( [gcb '/f32Acc_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n        add_block('built-"
		"in/Terminator', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/"
		"f32InErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/f32InErrK1_Out'], 'Orientation');\n        delete"
		"_block(       [gcb '/f32InErrK1_Out']);\n        add_block('built-in/Terminator', [gcb '/f32InErrK1_Out'], 'Position"
		"', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32InErr'], 'Port', '1');\n        set_param([gcb '/f3"
		"2ControllerPIrOut_preset'], 'Port', '2');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n\n        set_param(g"
		"cb,'MaskEnables',{'on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n  "
		"        set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n "
		"   % shown state variables\n    if strcmp(get_param([gcb '/f32CC1sc'], 'BlockType'), 'Ground')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32CC1sc'], 'Position');\n        orient = get_param"
		"( [gcb, '/f32CC1sc'], 'Orientation');\n        delete_block(       [gcb, '/f32CC1sc']);\n        add_block('built-in"
		"/Inport', [gcb, '/f32CC1sc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = g"
		"et_param(    [gcb, '/f32CC2sc'], 'Position');\n        orient = get_param( [gcb, '/f32CC2sc'], 'Orientation');\n    "
		"    delete_block(       [gcb, '/f32CC2sc']);\n        add_block('built-in/Inport', [gcb, '/f32CC2sc'], 'Position', p"
		"os, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32Acc'], 'Position');"
		"\n        orient = get_param( [gcb, '/f32Acc'], 'Orientation');\n        delete_block(       [gcb, '/f32Acc']);\n   "
		"     add_block('built-in/Inport', [gcb, '/f32Acc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32"
		"');\n\n        pos = get_param(    [gcb, '/f32InErrK1'], 'Position');\n        orient = get_param( [gcb, '/f32InErrK"
		"1'], 'Orientation');\n        delete_block(       [gcb, '/f32InErrK1']);\n        add_block('built-in/Inport', [gcb,"
		" '/f32InErrK1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    "
		"[gcb, '/u16NShift'], 'Position');\n        orient = get_param( [gcb, '/u16NShift'], 'Orientation');\n        delete_"
		"block(       [gcb, '/u16NShift']);\n        add_block('built-in/Inport', [gcb, '/u16NShift'], 'Position', pos, 'Orie"
		"ntation', orient, 'OutDataTypeStr', 'uint16');\n\n\n        pos = get_param(    [gcb '/f32Acc_Out'], 'Position');\n "
		"       orient = get_param( [gcb '/f32Acc_Out'], 'Orientation');\n        delete_block(       [gcb '/f32Acc_Out']);\n"
		"        add_block('built-in/Outport', [gcb '/f32Acc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos ="
		" get_param(    [gcb '/f32InErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/f32InErrK1_Out'], 'Orientat"
		"ion');\n        delete_block(       [gcb '/f32InErrK1_Out']);\n        add_block('built-in/Outport', [gcb '/f32InErr"
		"K1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32InErr'], 'Port', '1');\n        "
		"set_param([gcb '/f32ControllerPIrOut_preset'], 'Port', '2');\n        set_param([gcb '/f32CC1sc'], 'Port', '3');\n  "
		"      set_param([gcb '/f32CC2sc'], 'Port', '4');\n        set_param([gcb '/f32Acc'], 'Port', '5');\n        set_para"
		"m([gcb '/f32InErrK1'], 'Port', '6');\n        set_param([gcb '/u16NShift'], 'Port', '7');\n\n        set_param([gcb "
		"'/f32Out'], 'Port', '1');\n        set_param([gcb '/f32Acc_Out'], 'Port', '2');\n        set_param([gcb '/f32InErrK1"
		"_Out'], 'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off'});\n\n        if (posblk(4"
		") - posblk(2)) < 200\n          height = 200;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), "
		"posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIr_F32', 'horizontalAlignment', 'center"
		"');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performan"
		"ce)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  5
		  Object {
		    $ObjectID		    594
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off','off'"
		    ",'off'});\nend"
		  }
		  Object {
		    $ObjectID		    595
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    596
		    Type		    "edit"
		    Name		    "f32CC1"
		    Prompt		    "f32CC1 (CC1 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    597
		    Type		    "edit"
		    Name		    "f32CC2"
		    Prompt		    "f32CC2 (CC2 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    598
		    Type		    "edit"
		    Name		    "u16NShift"
		    Prompt		    "u16NShift (Scaling bitwise shift applied to the controller coefficients)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIr_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"28"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32InErr"
		  SID			  "208:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32ControllerPIrOut_preset"
		  SID			  "208:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "208:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIr_SF"
		  SID			  "208:5"
		  Ports			  [7, 3]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIr_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,f32CC1,f32CC2,u16NShift"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "208:16"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  18
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    599
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "208:19"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  19
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    600
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIr_BAM_F32.mdl');text(10,75,'Recurrent form PI controller without ant"
		    "i-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Acc"
		  SID			  "208:24"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32Acc_Out"
		  SID			  "208:27"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC1sc"
		  SID			  "208:22"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  20
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32CC2sc"
		  SID			  "208:23"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InErrK1"
		  SID			  "208:25"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InErrK1_Out"
		  SID			  "208:28"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShift"
		  SID			  "208:26"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "208:13"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  15
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIr_SF"
		  SrcPort		  3
		  DstBlock		  "f32InErrK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIr_SF"
		  SrcPort		  2
		  DstBlock		  "f32Acc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIr_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "u16NShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32InErrK1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32Acc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f32CC2sc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32CC1sc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f32ControllerPIrOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "f32InErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Cos_F32"
	      SID		      "209"
	      Ports		      [1, 1]
	      Position		      [20, 1000, 215, 1050]
	      ZOrder		      13
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		601
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Cos_F32"
		Description		"Cosine function in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide for"
		" further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Cos_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Cos_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "210"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Cos_SF"
		  SID			  "211"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Cos_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "212"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    602
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "213"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    603
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Cos_BAM_F32.mdl');text(10,75,'Cosine function');text(10,60,'NXP 2020');text(10,4"
		    "5,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "214"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Cos_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Cos_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Hyst_F32"
	      SID		      "215"
	      Ports		      [1, 1]
	      Position		      [20, 1069, 220, 1121]
	      ZOrder		      14
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		604
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Hyst_F32"
		Description		"Hysteresis function in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide"
		" for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32HystOn'], 'BlockType'), 'Inport')\n        posblk = get_par"
		"am(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32HystOn'], 'Position');\n        orient = get_param( ["
		"gcb, '/f32HystOn'], 'Orientation');\n        delete_block(       [gcb, '/f32HystOn']);\n        add_block('built-in/"
		"Ground', [gcb, '/f32HystOn'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32Hys"
		"tOff'], 'Position');\n        orient = get_param( [gcb, '/f32HystOff'], 'Orientation');\n        delete_block(      "
		" [gcb, '/f32HystOff']);\n        add_block('built-in/Ground', [gcb, '/f32HystOff'], 'Position', pos, 'Orientation', "
		"orient);\n\n        pos = get_param(    [gcb, '/f32OutValOn'], 'Position');\n        orient = get_param( [gcb, '/f32"
		"OutValOn'], 'Orientation');\n        delete_block(       [gcb, '/f32OutValOn']);\n        add_block('built-in/Ground"
		"', [gcb, '/f32OutValOn'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32OutValO"
		"ff'], 'Position');\n        orient = get_param( [gcb, '/f32OutValOff'], 'Orientation');\n        delete_block(      "
		" [gcb, '/f32OutValOff']);\n        add_block('built-in/Ground', [gcb, '/f32OutValOff'], 'Position', pos, 'Orientatio"
		"n', orient);\n\n        pos = get_param(    [gcb, '/f32OutState'], 'Position');\n        orient = get_param( [gcb, '"
		"/f32OutState'], 'Orientation');\n        delete_block(       [gcb, '/f32OutState']);\n        add_block('built-in/Gr"
		"ound', [gcb, '/f32OutState'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f32Ou"
		"tState_Out'], 'Position');\n        orient = get_param( [gcb '/f32OutState_Out'], 'Orientation');\n        delete_bl"
		"ock(       [gcb '/f32OutState_Out']);\n        add_block('built-in/Terminator', [gcb '/f32OutState_Out'], 'Position'"
		", pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32In'], 'Port', '1');\n\n        set_param([gcb '/f32O"
		"ut'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on'});\n\n        if (posblk(4) - p"
		"osblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk("
		"2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f32HystOn'], 'B"
		"lockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32HystOn"
		"'], 'Position');\n        orient = get_param( [gcb, '/f32HystOn'], 'Orientation');\n        delete_block(       [gcb"
		", '/f32HystOn']);\n        add_block('built-in/Inport', [gcb, '/f32HystOn'], 'Position', pos, 'Orientation', orient,"
		" 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32HystOff'], 'Position');\n        orient = get"
		"_param( [gcb, '/f32HystOff'], 'Orientation');\n        delete_block(       [gcb, '/f32HystOff']);\n        add_block"
		"('built-in/Inport', [gcb, '/f32HystOff'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n   "
		"     pos = get_param(    [gcb, '/f32OutValOn'], 'Position');\n        orient = get_param( [gcb, '/f32OutValOn'], 'Or"
		"ientation');\n        delete_block(       [gcb, '/f32OutValOn']);\n        add_block('built-in/Inport', [gcb, '/f32O"
		"utValOn'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, "
		"'/f32OutValOff'], 'Position');\n        orient = get_param( [gcb, '/f32OutValOff'], 'Orientation');\n        delete_"
		"block(       [gcb, '/f32OutValOff']);\n        add_block('built-in/Inport', [gcb, '/f32OutValOff'], 'Position', pos,"
		" 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32OutState'], 'Position'"
		");\n        orient = get_param( [gcb, '/f32OutState'], 'Orientation');\n        delete_block(       [gcb, '/f32OutSt"
		"ate']);\n        add_block('built-in/Inport', [gcb, '/f32OutState'], 'Position', pos, 'Orientation', orient, 'OutDat"
		"aTypeStr', 'int32');\n\n\n        pos = get_param(    [gcb '/f32OutState_Out'], 'Position');\n        orient = get_p"
		"aram( [gcb '/f32OutState_Out'], 'Orientation');\n        delete_block(       [gcb '/f32OutState_Out']);\n        add"
		"_block('built-in/Outport', [gcb '/f32OutState_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param"
		"([gcb '/f32In'], 'Port', '1');\n        set_param([gcb '/f32HystOn'], 'Port', '2');\n        set_param([gcb '/f32Hys"
		"tOff'], 'Port', '3');\n        set_param([gcb '/f32OutValOn'], 'Port', '4');\n        set_param([gcb '/f32OutValOff'"
		"], 'Port', '5');\n        set_param([gcb '/f32OutState'], 'Port', '6');\n\n        set_param([gcb '/f32Out'], 'Port'"
		", '1');\n        set_param([gcb '/f32OutState_Out'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','off"
		"','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 175\n          height = 175;\n          set_param(gcb"
		",'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_Hyst_F32', 'horizontalAlignment', 'center');\nif sh"
		"owStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)'], 'ho"
		"rizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  5
		  Object {
		    $ObjectID		    605
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off','off"
		    "','off'});\nend"
		  }
		  Object {
		    $ObjectID		    606
		    Type		    "edit"
		    Name		    "f32HystOn"
		    Prompt		    "f32HystOn (Value determining the upper threshold)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    607
		    Type		    "edit"
		    Name		    "f32HystOff"
		    Prompt		    "f32HystOff (Value determining the lower threshold)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    608
		    Type		    "edit"
		    Name		    "f32OutValOn"
		    Prompt		    "f32OutValOn (Value of the output when input is higher than the upper threshold)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    609
		    Type		    "edit"
		    Name		    "f32OutValOff"
		    Prompt		    "f32OutValOff (Value of the output when input is lower than the lower threshold)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Hyst_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"24"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "215:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Hyst_SF"
		  SID			  "215:4"
		  Ports			  [6, 2]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Hyst_SF_F32"
		  Parameters		  "showStates,f32HystOn,f32HystOff,f32OutValOn,f32OutValOff"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "215:13"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  10
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    610
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "215:16"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  11
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    611
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Hyst_BAM_F32.mdl');text(10,75,'Hysteresis function.');text(10,60,'NXP 2020');tex"
		    "t(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32HystOff"
		  SID			  "215:20"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  13
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32HystOn"
		  SID			  "215:19"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  12
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32OutState"
		  SID			  "215:23"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  16
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32OutState_Out"
		  SID			  "215:24"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  17
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32OutValOff"
		  SID			  "215:22"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  15
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32OutValOn"
		  SID			  "215:21"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  14
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "215:11"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Hyst_SF"
		  SrcPort		  2
		  DstBlock		  "f32OutState_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_Hyst_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32OutState"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32OutValOff"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32OutValOn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32HystOff"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f32HystOn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_IntegratorTR_F32"
	      SID		      "216"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 1140, 260, 1215]
	      ZOrder		      15
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		612
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_IntegratorTR_F32"
		Description		"Discrete integrator transformed from a linear model using Billinear (trapezoidal) transformation in 32"
		"-bit fixed-point fractional implementation. This block supports re-initialization of the internal state during simul"
		"ation. If the block is reset, the integrator's output will be aligned with the input f32IntegratorTROut_preset. Refe"
		"r to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32C1'], 'BlockType'), 'Inport')\n        posblk = get_param(g"
		"cb, 'Position');\n\n        pos = get_param(    [gcb, '/f32C1'], 'Position');\n        orient = get_param( [gcb, '/f"
		"32C1'], 'Orientation');\n        delete_block(       [gcb, '/f32C1']);\n        add_block('built-in/Ground', [gcb, '"
		"/f32C1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/u16NShift'], 'Position');\n"
		"        orient = get_param( [gcb, '/u16NShift'], 'Orientation');\n        delete_block(       [gcb, '/u16NShift']);\n"
		"        add_block('built-in/Ground', [gcb, '/u16NShift'], 'Position', pos, 'Orientation', orient);\n\n        pos = "
		"get_param(    [gcb, '/f32State'], 'Position');\n        orient = get_param( [gcb, '/f32State'], 'Orientation');\n   "
		"     delete_block(       [gcb, '/f32State']);\n        add_block('built-in/Ground', [gcb, '/f32State'], 'Position', "
		"pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32InK1'], 'Position');\n        orient = get_pa"
		"ram( [gcb, '/f32InK1'], 'Orientation');\n        delete_block(       [gcb, '/f32InK1']);\n        add_block('built-i"
		"n/Ground', [gcb, '/f32InK1'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f32St"
		"ate_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n        delete_block(  "
		"     [gcb '/f32State_Out']);\n        add_block('built-in/Terminator', [gcb '/f32State_Out'], 'Position', pos, 'Orie"
		"ntation', orient);\n\n        pos = get_param(    [gcb '/f32InK1_Out'], 'Position');\n        orient = get_param( [g"
		"cb '/f32InK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InK1_Out']);\n        add_block('built-in"
		"/Terminator', [gcb '/f32InK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/f32In'], "
		"'Port', '1');\n        set_param([gcb '/f32IntegratorTROut_preset'], 'Port', '2');\n\n        set_param([gcb '/f32Ou"
		"t'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on'});\n\n        if (posblk(4) - posblk("
		"2)) > 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+hei"
		"ght])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f32C1'], 'BlockType')"
		", 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32C1'], 'Position'"
		");\n        orient = get_param( [gcb, '/f32C1'], 'Orientation');\n        delete_block(       [gcb, '/f32C1']);\n   "
		"     add_block('built-in/Inport', [gcb, '/f32C1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32'"
		");\n\n        pos = get_param(    [gcb, '/u16NShift'], 'Position');\n        orient = get_param( [gcb, '/u16NShift']"
		", 'Orientation');\n        delete_block(       [gcb, '/u16NShift']);\n        add_block('built-in/Inport', [gcb, '/u"
		"16NShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'uint16');\n\n        pos = get_param(    [gcb"
		", '/f32State'], 'Position');\n        orient = get_param( [gcb, '/f32State'], 'Orientation');\n        delete_block("
		"       [gcb, '/f32State']);\n        add_block('built-in/Inport', [gcb, '/f32State'], 'Position', pos, 'Orientation'"
		", orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32InK1'], 'Position');\n        orient"
		" = get_param( [gcb, '/f32InK1'], 'Orientation');\n        delete_block(       [gcb, '/f32InK1']);\n        add_block"
		"('built-in/Inport', [gcb, '/f32InK1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n    "
		"    pos = get_param(    [gcb '/f32State_Out'], 'Position');\n        orient = get_param( [gcb '/f32State_Out'], 'Ori"
		"entation');\n        delete_block(       [gcb '/f32State_Out']);\n        add_block('built-in/Outport', [gcb '/f32St"
		"ate_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/f32InK1_Out'], 'Position')"
		";\n        orient = get_param( [gcb '/f32InK1_Out'], 'Orientation');\n        delete_block(       [gcb '/f32InK1_Out"
		"']);\n        add_block('built-in/Outport', [gcb '/f32InK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n    "
		"    set_param([gcb '/f32In'], 'Port', '1');\n        set_param([gcb '/f32IntegratorTROut_preset'], 'Port', '2');\n  "
		"      set_param([gcb '/f32C1'], 'Port', '3');\n        set_param([gcb '/u16NShift'], 'Port', '4');\n        set_para"
		"m([gcb '/f32State'], 'Port', '5');\n        set_param([gcb '/f32InK1'], 'Port', '6');\n\n        set_param([gcb '/f3"
		"2Out'], 'Port', '1');\n        set_param([gcb '/f32State_Out'], 'Port', '2');\n        set_param([gcb '/f32InK1_Out'"
		"], 'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off'});\n\n        if (posblk(4) - posblk("
		"2)) < 175\n          height = 175;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+h"
		"eight])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_IntegratorTR_F32', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  4
		  Object {
		    $ObjectID		    613
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off','off'});\n"
		    "end"
		  }
		  Object {
		    $ObjectID		    614
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    615
		    Type		    "edit"
		    Name		    "f32C1"
		    Prompt		    "f32C1 (Integrator coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    616
		    Type		    "edit"
		    Name		    "u16NShift"
		    Prompt		    "u16NShift (Scaling bitwise shift applied to the integrator coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_IntegratorTR_F32"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"26"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "216:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32IntegratorTROut_preset"
		  SID			  "216:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "216:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_IntegratorTR_SF"
		  SID			  "216:5"
		  Ports			  [6, 3]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GFLIB_IntegratorTR_SF_F32"
		  Parameters		  "showStates,resetStatesEnable,f32C1,u16NShift"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "216:15"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  17
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    617
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "216:18"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  18
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    618
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_IntegratorTR_BAM_F32.mdl');text(10,75,'Discrete integrator transformed from a li"
		    "near model using Billinear (trapezoidal) transformation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'"
		    "28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32C1"
		  SID			  "216:21"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  19
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32InK1"
		  SID			  "216:24"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32InK1_Out"
		  SID			  "216:26"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32State"
		  SID			  "216:23"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32State_Out"
		  SID			  "216:25"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Ground
		  Name			  "u16NShift"
		  SID			  "216:22"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  20
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "216:12"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  14
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_IntegratorTR_SF"
		  SrcPort		  3
		  DstBlock		  "f32InK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_IntegratorTR_SF"
		  SrcPort		  2
		  DstBlock		  "f32State_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_IntegratorTR_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32InK1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32State"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "u16NShift"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "f32C1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "f32IntegratorTROut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Limit_F32"
	      SID		      "217"
	      Ports		      [1, 1]
	      Position		      [20, 1239, 225, 1291]
	      ZOrder		      16
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		619
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Limit_F32"
		Description		"Bit accurate model of GFLIB_Limit function in 32-bit fixed-point fractional implementation. Refer to t"
		"he AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32LowerLimit'], 'BlockType'), 'Inport')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32LowerLimit'], 'Position');\n        orient = get_"
		"param( [gcb, '/f32LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimit']);\n        add_"
		"block('built-in/Ground', [gcb, '/f32LowerLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_para"
		"m(    [gcb, '/f32UpperLimit'], 'Position');\n        orient = get_param( [gcb, '/f32UpperLimit'], 'Orientation');\n "
		"       delete_block(       [gcb, '/f32UpperLimit']);\n        add_block('built-in/Ground', [gcb, '/f32UpperLimit'], "
		"'Position', pos, 'Orientation', orient);\n\n\n\n        set_param([gcb '/f32In'], 'Port', '1');\n\n        set_param"
		"([gcb '/f32Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on'});\n\n        if (posblk(4) -"
		" posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posbl"
		"k(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f32LowerLimit"
		"'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32"
		"LowerLimit'], 'Position');\n        orient = get_param( [gcb, '/f32LowerLimit'], 'Orientation');\n        delete_blo"
		"ck(       [gcb, '/f32LowerLimit']);\n        add_block('built-in/Inport', [gcb, '/f32LowerLimit'], 'Position', pos, "
		"'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32UpperLimit'], 'Position"
		"');\n        orient = get_param( [gcb, '/f32UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32Up"
		"perLimit']);\n        add_block('built-in/Inport', [gcb, '/f32UpperLimit'], 'Position', pos, 'Orientation', orient, "
		"'OutDataTypeStr', 'int32');\n\n\n\n        set_param([gcb '/f32In'], 'Port', '1');\n        set_param([gcb '/f32Lowe"
		"rLimit'], 'Port', '2');\n        set_param([gcb '/f32UpperLimit'], 'Port', '3');\n\n        set_param([gcb '/f32Out'"
		"], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','off','off'});\n\n        if (posblk(4) - posblk(2)) <"
		" 100\n          height = 100;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height"
		"])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_Limit_F32', 'horizontalAlignment', 'center');\nif s"
		"howStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)'], 'h"
		"orizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  3
		  Object {
		    $ObjectID		    620
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    621
		    Type		    "edit"
		    Name		    "f32LowerLimit"
		    Prompt		    "f32LowerLimit (Lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    622
		    Type		    "edit"
		    Name		    "f32UpperLimit"
		    Prompt		    "f32UpperLimit (Upper limit)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Limit_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"16"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "217:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Limit_SF"
		  SID			  "217:4"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Limit_SF_F32"
		  Parameters		  "showStates,f32LowerLimit,f32UpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "217:9"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    623
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "217:12"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    624
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Limit_BAM_F32.mdl');text(10,75,'Limit function.');text(10,60,'NXP 2020');text(10"
		    ",45,'1.0');text(10,30,'23-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimit"
		  SID			  "217:15"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  8
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimit"
		  SID			  "217:16"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  9
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "217:8"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Limit_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32UpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Limit_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32LowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Limit_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Limit_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_LowerLimit_F32"
	      SID		      "218"
	      Ports		      [1, 1]
	      Position		      [20, 1310, 250, 1360]
	      ZOrder		      17
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		625
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_LowerLimit_F32"
		Description		"Lower limit function in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guid"
		"e for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32LowerLimit'], 'BlockType'), 'Inport')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32LowerLimit'], 'Position');\n        orient = get_"
		"param( [gcb, '/f32LowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimit']);\n        add_"
		"block('built-in/Ground', [gcb, '/f32LowerLimit'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param("
		"[gcb '/f32In'], 'Port', '1');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnab"
		"les',{'on','on'});\n\n        if (posblk(4) - posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Posi"
		"tion',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n"
		"    if strcmp(get_param([gcb '/f32LowerLimit'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position')"
		";\n\n        pos = get_param(    [gcb, '/f32LowerLimit'], 'Position');\n        orient = get_param( [gcb, '/f32Lower"
		"Limit'], 'Orientation');\n        delete_block(       [gcb, '/f32LowerLimit']);\n        add_block('built-in/Inport'"
		", [gcb, '/f32LowerLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n\n        set_pa"
		"ram([gcb '/f32In'], 'Port', '1');\n        set_param([gcb '/f32LowerLimit'], 'Port', '2');\n\n        set_param([gcb"
		" '/f32Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','off'});\n\n        if (posblk(4) - posblk(2"
		")) < 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+heig"
		"ht])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_LowerLimit_F32', 'horizontalAlignment', 'center');\n"
		"if showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)']"
		", 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    626
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    627
		    Type		    "edit"
		    Name		    "f32LowerLimit"
		    Prompt		    "f32LowerLimit (Value determining the lower limit threshold)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_LowerLimit_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"14"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "218:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_LowerLimit_SF"
		  SID			  "218:4"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_LowerLimit_SF_F32"
		  Parameters		  "showStates,f32LowerLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "218:8"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    628
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "218:11"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    629
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_LowerLimit_BAM_F32.mdl');text(10,75,'Lower limit function.');text(10,60,'NXP 202"
		    "0');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32LowerLimit"
		  SID			  "218:14"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  7
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "218:7"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_LowerLimit_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32LowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_LowerLimit_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_LowerLimit_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Lut1D_F32"
	      SID		      "219"
	      Ports		      [2, 1]
	      Position		      [20, 1380, 225, 1455]
	      ZOrder		      18
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		630
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Lut1D_F32"
		Description		"One dimensional lookup table function in 32-bit fixed-point fractional implementation. Refer to the AM"
		"MCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Lut1D_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    631
		    Type		    "edit"
		    Name		    "pf32Table"
		    Prompt		    "pf32Table (Vector holding the ordinate values of interpolating intervals)"
		    Value		    "2^31*[-0.75 -0.25 0.0 0.25 0.75]"
		  }
		  Object {
		    $ObjectID		    632
		    Type		    "edit"
		    Name		    "s32MidIdx"
		    Prompt		    "Middle index in the table pf32Table (zero-based indexing)"
		    Value		    "2"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Lut1D_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "220"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u32ShamOffset"
		  SID			  "221"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Lut1D_SF"
		  SID			  "222"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Lut1D_SF_F32"
		  Parameters		  "pf32Table,s32MidIdx"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "223"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    633
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "224"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    634
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Lut1D_BAM_F32.mdl');text(10,75,'One dimensional lookup table function');text(10,"
		    "60,'NXP 2020');text(10,45,'1.0');text(10,30,'23-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "225"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Lut1D_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u32ShamOffset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut1D_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut1D_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Lut2D_F32"
	      SID		      "226"
	      Ports		      [4, 1]
	      Position		      [20, 1472, 225, 1598]
	      ZOrder		      19
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		635
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Lut2D_F32"
		Description		"Two dimensional lookup table function in 32-bit fixed-point fractional implementation. Refer to the AM"
		"MCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Lut2D_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    636
		    Type		    "edit"
		    Name		    "pf32Table"
		    Prompt		    "pf32Table (Matrix of z-coordinate values at vertices)"
		    Value		    "2^31*[-0.75 0.0 0.75; -0.5 0.0 0.5; -0.25 0.0 0.25]"
		  }
		  Object {
		    $ObjectID		    637
		    Type		    "edit"
		    Name		    "s32MidIdx"
		    Prompt		    "Middle index in the table pf32Table (zero-based indexing over all elements)"
		    Value		    "4"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Lut2D_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "227"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "228"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u32ShamOffset1"
		  SID			  "229"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u32ShamOffset2"
		  SID			  "230"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  5
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Lut2D_SF"
		  SID			  "231"
		  Ports			  [4, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Lut2D_SF_F32"
		  Parameters		  "pf32Table,s32MidIdx"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "232"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    638
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "233"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  8
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    639
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Lut2D_BAM_F32.mdl');text(10,75,'Two dimensional lookup table function');text(10,"
		    "60,'NXP 2020');text(10,45,'1.0');text(10,30,'23-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "234"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  6
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Lut2D_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u32ShamOffset2"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut2D_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "u32ShamOffset1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut2D_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut2D_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut2D_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Ramp_F32"
	      SID		      "235"
	      Ports		      [1, 1]
	      Position		      [20, 1619, 220, 1671]
	      ZOrder		      20
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		640
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Ramp_F32"
		Description		"Rate of change limiter - ramp function in 32-bit fixed-point fractional implementation. Refer to the A"
		"MMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32State'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32State'], 'Position');\n        orient = get_param( [gc"
		"b, '/f32State'], 'Orientation');\n        delete_block(       [gcb, '/f32State']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/f32State'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/f32RampUp']"
		", 'Position');\n        orient = get_param( [gcb, '/f32RampUp'], 'Orientation');\n        delete_block(       [gcb, "
		"'/f32RampUp']);\n        add_block('built-in/Ground', [gcb, '/f32RampUp'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb, '/f32RampDown'], 'Position');\n        orient = get_param( [gcb, '/f32RampDown']"
		", 'Orientation');\n        delete_block(       [gcb, '/f32RampDown']);\n        add_block('built-in/Ground', [gcb, '"
		"/f32RampDown'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/f32State_Out'], 'Po"
		"sition');\n        orient = get_param( [gcb '/f32State_Out'], 'Orientation');\n        delete_block(       [gcb '/f3"
		"2State_Out']);\n        add_block('built-in/Terminator', [gcb '/f32State_Out'], 'Position', pos, 'Orientation', orie"
		"nt);\n\n\n        set_param([gcb '/f32In'], 'Port', '1');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n\n   "
		"     set_param(gcb,'MaskEnables',{'on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 50\n          height = 5"
		"0;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\ne"
		"lse\n    % shown state variables\n    if strcmp(get_param([gcb '/f32State'], 'BlockType'), 'Ground')\n        posblk"
		" = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32State'], 'Position');\n        orient = get"
		"_param( [gcb, '/f32State'], 'Orientation');\n        delete_block(       [gcb, '/f32State']);\n        add_block('bu"
		"ilt-in/Inport', [gcb, '/f32State'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        p"
		"os = get_param(    [gcb, '/f32RampUp'], 'Position');\n        orient = get_param( [gcb, '/f32RampUp'], 'Orientation'"
		");\n        delete_block(       [gcb, '/f32RampUp']);\n        add_block('built-in/Inport', [gcb, '/f32RampUp'], 'Po"
		"sition', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/f32RampDown'"
		"], 'Position');\n        orient = get_param( [gcb, '/f32RampDown'], 'Orientation');\n        delete_block(       [gc"
		"b, '/f32RampDown']);\n        add_block('built-in/Inport', [gcb, '/f32RampDown'], 'Position', pos, 'Orientation', or"
		"ient, 'OutDataTypeStr', 'int32');\n\n\n        pos = get_param(    [gcb '/f32State_Out'], 'Position');\n        orie"
		"nt = get_param( [gcb '/f32State_Out'], 'Orientation');\n        delete_block(       [gcb '/f32State_Out']);\n       "
		" add_block('built-in/Outport', [gcb '/f32State_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_para"
		"m([gcb '/f32In'], 'Port', '1');\n        set_param([gcb '/f32State'], 'Port', '2');\n        set_param([gcb '/f32Ram"
		"pUp'], 'Port', '3');\n        set_param([gcb '/f32RampDown'], 'Port', '4');\n\n        set_param([gcb '/f32Out'], 'P"
		"ort', '1');\n        set_param([gcb '/f32State_Out'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','of"
		"f','off'});\n\n        if (posblk(4) - posblk(2)) < 125\n          height = 125;\n          set_param(gcb,'Position'"
		",[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_Ramp_F32', 'horizontalAlignment', 'center');\nif sh"
		"owStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)'], 'ho"
		"rizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  3
		  Object {
		    $ObjectID		    641
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    642
		    Type		    "edit"
		    Name		    "f32RampUp"
		    Prompt		    "f32RampUp (Ramp up increment coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    643
		    Type		    "edit"
		    Name		    "f32RampDown"
		    Prompt		    "f32RampDown (Ramp decrement coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Ramp_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"20"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "235:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Ramp_SF"
		  SID			  "235:4"
		  Ports			  [4, 2]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Ramp_SF_F32"
		  Parameters		  "showStates,f32RampUp,f32RampDown"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "235:11"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  8
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    644
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "235:14"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  9
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    645
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Ramp_BAM_F32.mdl');text(10,75,'Rate of change limiter - ramp function.');text(10"
		    ",60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32RampDown"
		  SID			  "235:19"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  12
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32RampUp"
		  SID			  "235:18"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  11
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32State"
		  SID			  "235:17"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  10
		}
		Block {
		  BlockType		  Terminator
		  Name			  "f32State_Out"
		  SID			  "235:20"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  13
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "235:9"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  6
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Ramp_SF"
		  SrcPort		  2
		  DstBlock		  "f32State_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_Ramp_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32RampDown"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Ramp_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32RampUp"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Ramp_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32State"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Ramp_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Ramp_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Sign_F32"
	      SID		      "236"
	      Ports		      [1, 1]
	      Position		      [20, 1690, 220, 1740]
	      ZOrder		      21
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		646
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Sign_F32"
		Description		"Bit accurate model of GFLIB_Sign function in 32-bit fixed-point fractional implementation. Refer to th"
		"e AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Sign_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Sign_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "237"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Sign_SF"
		  SID			  "238"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Sign_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "239"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    647
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "240"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    648
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Sign_BAM_F32.mdl');text(10,75,'Sign function.');text(10,60,'NXP 2020');text(10,4"
		    "5,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "241"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Sign_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Sign_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_SinCos_F32"
	      SID		      "242"
	      Ports		      [1, 1]
	      Position		      [20, 1760, 230, 1810]
	      ZOrder		      22
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		649
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_SinCos_F32"
		Description		"Calculation of sine and cosine of the same argument in 32-bit fixed-point fractional implementation. R"
		"efer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_SinCos_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_SinCos_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "243"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_SinCos_SF"
		  SID			  "244"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_SinCos_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "245"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    650
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "246"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    651
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_SinCos_BAM_F32.mdl');text(10,75,'Sine and cosine of the same argument');text(10,"
		    "60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "247"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_SinCos_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_SinCos_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Sin_F32"
	      SID		      "248"
	      Ports		      [1, 1]
	      Position		      [20, 1830, 215, 1880]
	      ZOrder		      23
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		652
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Sin_F32"
		Description		"Sine function in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide for f"
		"urther details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Sin_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Sin_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "249"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Sin_SF"
		  SID			  "250"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Sin_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "251"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    653
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "252"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    654
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Sin_BAM_F32.mdl');text(10,75,'Sine function');text(10,60,'NXP 2020');text(10,45,"
		    "'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "253"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Sin_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Sin_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Sqrt_F32"
	      SID		      "254"
	      Ports		      [1, 1]
	      Position		      [20, 1900, 220, 1950]
	      ZOrder		      24
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		655
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Sqrt_F32"
		Description		"Square root approximation in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's"
		" Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Sqrt_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Sqrt_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "255"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Sqrt_SF"
		  SID			  "256"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Sqrt_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "257"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    656
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "258"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    657
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Sqrt_BAM_F32.mdl');text(10,75,'Square root approximation.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "259"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Sqrt_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Sqrt_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Tan_F32"
	      SID		      "260"
	      Ports		      [1, 1]
	      Position		      [20, 1970, 215, 2020]
	      ZOrder		      25
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		658
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Tan_F32"
		Description		"Tangent function in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide fo"
		"r further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Tan_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Tan_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "261"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Tan_SF"
		  SID			  "262"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Tan_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "263"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    659
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "264"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    660
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Tan_BAM_F32.mdl');text(10,75,'Trigonometric tangent function');text(10,60,'NXP 2"
		    "020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "265"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Tan_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Tan_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_UpperLimit_F32"
	      SID		      "266"
	      Ports		      [1, 1]
	      Position		      [20, 2040, 250, 2090]
	      ZOrder		      26
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		661
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_UpperLimit_F32"
		Description		"Upper limit function in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guid"
		"e for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32UpperLimit'], 'BlockType'), 'Inport')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32UpperLimit'], 'Position');\n        orient = get_"
		"param( [gcb, '/f32UpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/f32UpperLimit']);\n        add_"
		"block('built-in/Ground', [gcb, '/f32UpperLimit'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param("
		"[gcb '/f32In'], 'Port', '1');\n\n        set_param([gcb '/f32Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnab"
		"les',{'on','on'});\n\n        if (posblk(4) - posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Posi"
		"tion',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n"
		"    if strcmp(get_param([gcb '/f32UpperLimit'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position')"
		";\n\n        pos = get_param(    [gcb, '/f32UpperLimit'], 'Position');\n        orient = get_param( [gcb, '/f32Upper"
		"Limit'], 'Orientation');\n        delete_block(       [gcb, '/f32UpperLimit']);\n        add_block('built-in/Inport'"
		", [gcb, '/f32UpperLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n\n        set_pa"
		"ram([gcb '/f32In'], 'Port', '1');\n        set_param([gcb '/f32UpperLimit'], 'Port', '2');\n\n        set_param([gcb"
		" '/f32Out'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','off'});\n\n        if (posblk(4) - posblk(2"
		")) < 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+heig"
		"ht])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_UpperLimit_F32', 'horizontalAlignment', 'center');\n"
		"if showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)']"
		", 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    662
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    663
		    Type		    "edit"
		    Name		    "f32UpperLimit"
		    Prompt		    "f32UpperLimit (Value determining the upper limit threshold)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_UpperLimit_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"14"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "266:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_UpperLimit_SF"
		  SID			  "266:4"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_UpperLimit_SF_F32"
		  Parameters		  "showStates,f32UpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "266:8"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    664
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "266:11"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    665
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_UpperLimit_BAM_F32.mdl');text(10,75,'Upper limit function.');text(10,60,'NXP 202"
		    "0');text(10,45,'1.0');text(10,30,'23-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32UpperLimit"
		  SID			  "266:14"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  7
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "266:7"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_UpperLimit_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32UpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_UpperLimit_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "GFLIB_UpperLimit_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_VMin_F32"
	      SID		      "267"
	      Ports		      [1, 1]
	      Position		      [20, 2110, 220, 2160]
	      ZOrder		      27
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		666
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_VMin_F32"
		Description		"32-bit fixed-point implementation of the GFLIB_VMin function, which finds the index of a vector minimu"
		"m. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_VMin_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_VMin_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "268"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_VMin_SF"
		  SID			  "269"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_VMin_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "270"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    667
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "271"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    668
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_VMin_BAM_F32.mdl');text(10,75,'Vector minimum');text(10,60,'NXP 2020');text(10,4"
		    "5,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "IndexOfMinimum"
		  SID			  "272"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_VMin_SF"
		  SrcPort		  1
		  DstBlock		  "IndexOfMinimum"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_VMin_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_VectorLimit_F32"
	      SID		      "273"
	      Ports		      [1, 2]
	      Position		      [20, 2180, 255, 2255]
	      ZOrder		      28
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		669
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_VectorLimit_F32"
		Description		"32-bit fixed-point fractional implementation of the GFLIB_VectorLimit function which limits the magnit"
		"ude of the input 2-element vector, keeping its direction unchanged. Refer to the AMMCLIB User's Guide for further de"
		"tails."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32Limit'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32Limit'], 'Position');\n        orient = get_param( [gc"
		"b, '/f32Limit'], 'Orientation');\n        delete_block(       [gcb, '/f32Limit']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/f32Limit'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param([gcb '/pIn'], 'Port', '1'"
		");\n\n        set_param([gcb '/bFlag'], 'Port', '1');\n        set_param([gcb '/pOut'], 'Port', '2');\n\n        set"
		"_param(gcb,'MaskEnables',{'on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n         "
		" set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % sh"
		"own state variables\n    if strcmp(get_param([gcb '/f32Limit'], 'BlockType'), 'Ground')\n        posblk = get_param("
		"gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32Limit'], 'Position');\n        orient = get_param( [gcb,"
		" '/f32Limit'], 'Orientation');\n        delete_block(       [gcb, '/f32Limit']);\n        add_block('built-in/Inport"
		"', [gcb, '/f32Limit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n\n\n        set_param("
		"[gcb '/pIn'], 'Port', '1');\n        set_param([gcb '/f32Limit'], 'Port', '2');\n\n        set_param([gcb '/bFlag'],"
		" 'Port', '1');\n        set_param([gcb '/pOut'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','off'});"
		"\n\n        if (posblk(4) - posblk(2)) < 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), "
		"posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_VectorLimit_F32', 'horizontalAlignment', 'center');"
		"\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)"
		"'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    670
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    671
		    Type		    "edit"
		    Name		    "f32Limit"
		    Prompt		    "f32Limit (The maximum magnitude of the input 2-element vector)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_VectorLimit_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"15"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "273:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_VectorLimit_SF"
		  SID			  "273:4"
		  Ports			  [2, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_VectorLimit_SF_F32"
		  Parameters		  "showStates,f32Limit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "273:9"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    672
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "273:12"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    673
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_VectorLimit_BAM_F32.mdl');text(10,75,'Vector Limit function.');text(10,60,'NXP 2"
		    "020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Limit"
		  SID			  "273:15"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  8
		}
		Block {
		  BlockType		  Outport
		  Name			  "bFlag"
		  SID			  "273:7"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "273:8"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_VectorLimit_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_VectorLimit_SF"
		  SrcPort		  1
		  DstBlock		  "bFlag"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32Limit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_VectorLimit_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_VectorLimit_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "FLT"
	  SID			  "274"
	  Ports			  []
	  Position		  [240, 0, 340, 100]
	  ZOrder		  3
	  RequestExecContextInheritance	off
	  System {
	    Name		    "FLT"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Acos_FLT"
	      SID		      "275"
	      Ports		      [1, 1]
	      Position		      [20, 0, 220, 50]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		674
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Acos_FLT"
		Description		"Inverse cosine function in single precision floating-point implementation. Refer to the AMMCLIB User's"
		" Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Acos_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Acos_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "276"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Acos_SF"
		  SID			  "277"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Acos_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "278"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    675
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "279"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    676
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Acos_BAM_FLT.mdl');text(10,75,'Inverse cosine function');text(10,60,'NXP 2020');"
		    "text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "280"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Acos_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Acos_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Asin_FLT"
	      SID		      "281"
	      Ports		      [1, 1]
	      Position		      [20, 70, 220, 120]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		677
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Asin_FLT"
		Description		"Inverse sine function in single precision floating-point implementation. Refer to the AMMCLIB User's G"
		"uide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Asin_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Asin_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "282"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Asin_SF"
		  SID			  "283"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Asin_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "284"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    678
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "285"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    679
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Asin_BAM_FLT.mdl');text(10,75,'Inverse sine function');text(10,60,'NXP 2020');te"
		    "xt(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "286"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Asin_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Asin_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_AtanYXShifted_FLT"
	      SID		      "287"
	      Ports		      [5, 1]
	      Position		      [20, 140, 265, 290]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		680
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_AtanYXShifted_FLT"
		Description		"Shifted arctangent of two arguments Y/X in single precision floating-point implementation. Refer to th"
		"e AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_AtanYXShifted_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_AtanYXShifted_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltInY"
		  SID			  "288"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltInX"
		  SID			  "289"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "Ky"
		  SID			  "290"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "Kx"
		  SID			  "291"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  5
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "ThetaAdj"
		  SID			  "292"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  6
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_AtanYXShifted_SF"
		  SID			  "293"
		  Ports			  [5, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_AtanYXShifted_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "294"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  8
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    681
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "295"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  9
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    682
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_AtanYXShifted_BAM_FLT.mdl');text(10,75,'Shifted arctangent of two arguments Y/X."
		    "');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "296"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  7
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_AtanYXShifted_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "ThetaAdj"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "Kx"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "Ky"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "fltInX"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltInY"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYXShifted_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_AtanYX_FLT"
	      SID		      "297"
	      Ports		      [2, 1]
	      Position		      [20, 310, 230, 385]
	      ZOrder		      5
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		683
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_AtanYX_FLT"
		Description		"Arctangent of two arguments Y/X in single precision floating-point implementation. Refer to the AMMCLI"
		"B User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_AtanYX_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_AtanYX_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltInY"
		  SID			  "298"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltInX"
		  SID			  "299"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_AtanYX_SF"
		  SID			  "300"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_AtanYX_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "301"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    684
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "302"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    685
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_AtanYX_BAM_FLT.mdl');text(10,75,'Arctangent of two arguments Y/X.');text(10,60,'"
		    "NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "303"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_AtanYX_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltInX"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYX_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltInY"
		  SrcPort		  1
		  DstBlock		  "GFLIB_AtanYX_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Atan_FLT"
	      SID		      "304"
	      Ports		      [1, 1]
	      Position		      [20, 405, 220, 455]
	      ZOrder		      6
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		686
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Atan_FLT"
		Description		"Inverse tangent function in single precision floating-point implementation. Refer to the AMMCLIB User'"
		"s Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Atan_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Atan_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "305"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Atan_SF"
		  SID			  "306"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Atan_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "307"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    687
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "308"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    688
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Atan_BAM_FLT.mdl');text(10,75,'Inverse tangent function');text(10,60,'NXP 2020')"
		    ";text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "309"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Atan_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Atan_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIDpAW_FLT"
	      SID		      "310"
	      Ports		      [2, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 475, 280, 550]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		689
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIDpAW_FLT"
		Description		"Parallel form PID controller with anti-windup in single precision floating-point implementation. This "
		"block supports re-initialization of the internal state during simulation. If the block is reset, the controller's ou"
		"tput will be aligned with the input fltControllerPIDpAWOut_preset. Refer to the AMMCLIB User's Guide for further det"
		"ails."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltPropGain'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltPropGain'], 'Position');\n        orient = get_para"
		"m( [gcb, '/fltPropGain'], 'Orientation');\n        delete_block(       [gcb, '/fltPropGain']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/fltPropGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/fltIntegGain'], 'Position');\n        orient = get_param( [gcb, '/fltIntegGain'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/fltIntegGain']);\n        add_block('built-in/Ground', [gcb, '/fltIntegGain'], 'Position', po"
		"s, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltDerivGain'], 'Position');\n        orient = get"
		"_param( [gcb, '/fltDerivGain'], 'Orientation');\n        delete_block(       [gcb, '/fltDerivGain']);\n        add_b"
		"lock('built-in/Ground', [gcb, '/fltDerivGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param("
		"    [gcb, '/fltFiltCoef'], 'Position');\n        orient = get_param( [gcb, '/fltFiltCoef'], 'Orientation');\n       "
		" delete_block(       [gcb, '/fltFiltCoef']);\n        add_block('built-in/Ground', [gcb, '/fltFiltCoef'], 'Position'"
		", pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltLowerLimit'], 'Position');\n        orient "
		"= get_param( [gcb, '/fltLowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLimit']);\n      "
		"  add_block('built-in/Ground', [gcb, '/fltLowerLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = ge"
		"t_param(    [gcb, '/fltUpperLimit'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimit'], 'Orientation"
		"');\n        delete_block(       [gcb, '/fltUpperLimit']);\n        add_block('built-in/Ground', [gcb, '/fltUpperLim"
		"it'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltIntegPartK_1'], 'Position')"
		";\n        orient = get_param( [gcb, '/fltIntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltIn"
		"tegPartK_1']);\n        add_block('built-in/Ground', [gcb, '/fltIntegPartK_1'], 'Position', pos, 'Orientation', orie"
		"nt);\n\n        pos = get_param(    [gcb, '/fltDerivPartK_1'], 'Position');\n        orient = get_param( [gcb, '/flt"
		"DerivPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltDerivPartK_1']);\n        add_block('built-i"
		"n/Ground', [gcb, '/fltDerivPartK_1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, "
		"'/fltInK_1'], 'Position');\n        orient = get_param( [gcb, '/fltInK_1'], 'Orientation');\n        delete_block(  "
		"     [gcb, '/fltInK_1']);\n        add_block('built-in/Ground', [gcb, '/fltInK_1'], 'Position', pos, 'Orientation', "
		"orient);\n\n\n        pos = get_param(    [gcb '/fltIntegPartK_1_Out'], 'Position');\n        orient = get_param( [g"
		"cb '/fltIntegPartK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltIntegPartK_1_Out']);\n        add"
		"_block('built-in/Terminator', [gcb '/fltIntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos "
		"= get_param(    [gcb '/fltDerivPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/fltDerivPartK_1_Out']"
		", 'Orientation');\n        delete_block(       [gcb '/fltDerivPartK_1_Out']);\n        add_block('built-in/Terminato"
		"r', [gcb '/fltDerivPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/flt"
		"InK_1_Out'], 'Position');\n        orient = get_param( [gcb '/fltInK_1_Out'], 'Orientation');\n        delete_block("
		"       [gcb '/fltInK_1_Out']);\n        add_block('built-in/Terminator', [gcb '/fltInK_1_Out'], 'Position', pos, 'Or"
		"ientation', orient);\n\n\n        set_param([gcb '/fltInErr'], 'Port', '1');\n        set_param([gcb '/fltController"
		"PIDpAWOut_preset'], 'Port', '2');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n        set_param([gcb '/u16L"
		"imitFlag'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on'});\n\n    "
		"    if (posblk(4) - posblk(2)) > 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2"
		"), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param(["
		"gcb '/fltPropGain'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_para"
		"m(    [gcb, '/fltPropGain'], 'Position');\n        orient = get_param( [gcb, '/fltPropGain'], 'Orientation');\n     "
		"   delete_block(       [gcb, '/fltPropGain']);\n        add_block('built-in/Inport', [gcb, '/fltPropGain'], 'Positio"
		"n', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltIntegGain'], "
		"'Position');\n        orient = get_param( [gcb, '/fltIntegGain'], 'Orientation');\n        delete_block(       [gcb,"
		" '/fltIntegGain']);\n        add_block('built-in/Inport', [gcb, '/fltIntegGain'], 'Position', pos, 'Orientation', or"
		"ient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltDerivGain'], 'Position');\n        orie"
		"nt = get_param( [gcb, '/fltDerivGain'], 'Orientation');\n        delete_block(       [gcb, '/fltDerivGain']);\n     "
		"   add_block('built-in/Inport', [gcb, '/fltDerivGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 's"
		"ingle');\n\n        pos = get_param(    [gcb, '/fltFiltCoef'], 'Position');\n        orient = get_param( [gcb, '/flt"
		"FiltCoef'], 'Orientation');\n        delete_block(       [gcb, '/fltFiltCoef']);\n        add_block('built-in/Inport"
		"', [gcb, '/fltFiltCoef'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_"
		"param(    [gcb, '/fltLowerLimit'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLimit'], 'Orientation')"
		";\n        delete_block(       [gcb, '/fltLowerLimit']);\n        add_block('built-in/Inport', [gcb, '/fltLowerLimit"
		"'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltU"
		"pperLimit'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimit'], 'Orientation');\n        delete_bloc"
		"k(       [gcb, '/fltUpperLimit']);\n        add_block('built-in/Inport', [gcb, '/fltUpperLimit'], 'Position', pos, '"
		"Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltIntegPartK_1'], 'Positi"
		"on');\n        orient = get_param( [gcb, '/fltIntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/f"
		"ltIntegPartK_1']);\n        add_block('built-in/Inport', [gcb, '/fltIntegPartK_1'], 'Position', pos, 'Orientation', "
		"orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltDerivPartK_1'], 'Position');\n       "
		" orient = get_param( [gcb, '/fltDerivPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltDerivPartK_1"
		"']);\n        add_block('built-in/Inport', [gcb, '/fltDerivPartK_1'], 'Position', pos, 'Orientation', orient, 'OutDa"
		"taTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltInK_1'], 'Position');\n        orient = get_param( "
		"[gcb, '/fltInK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltInK_1']);\n        add_block('built-in/I"
		"nport', [gcb, '/fltInK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n        pos = "
		"get_param(    [gcb '/fltIntegPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/fltIntegPartK_1_Out'], "
		"'Orientation');\n        delete_block(       [gcb '/fltIntegPartK_1_Out']);\n        add_block('built-in/Outport', ["
		"gcb '/fltIntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltDeriv"
		"PartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/fltDerivPartK_1_Out'], 'Orientation');\n        dele"
		"te_block(       [gcb '/fltDerivPartK_1_Out']);\n        add_block('built-in/Outport', [gcb '/fltDerivPartK_1_Out'], "
		"'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInK_1_Out'], 'Position');\n       "
		" orient = get_param( [gcb '/fltInK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInK_1_Out']);\n  "
		"      add_block('built-in/Outport', [gcb '/fltInK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set"
		"_param([gcb '/fltInErr'], 'Port', '1');\n        set_param([gcb '/fltControllerPIDpAWOut_preset'], 'Port', '2');\n  "
		"      set_param([gcb '/fltPropGain'], 'Port', '3');\n        set_param([gcb '/fltIntegGain'], 'Port', '4');\n       "
		" set_param([gcb '/fltDerivGain'], 'Port', '5');\n        set_param([gcb '/fltFiltCoef'], 'Port', '6');\n        set_"
		"param([gcb '/fltLowerLimit'], 'Port', '7');\n        set_param([gcb '/fltUpperLimit'], 'Port', '8');\n        set_pa"
		"ram([gcb '/fltIntegPartK_1'], 'Port', '9');\n        set_param([gcb '/fltDerivPartK_1'], 'Port', '10');\n        set"
		"_param([gcb '/fltInK_1'], 'Port', '11');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n        set_param([gcb"
		" '/u16LimitFlag'], 'Port', '2');\n        set_param([gcb '/fltIntegPartK_1_Out'], 'Port', '3');\n        set_param(["
		"gcb '/fltDerivPartK_1_Out'], 'Port', '4');\n        set_param([gcb '/fltInK_1_Out'], 'Port', '5');\n\n        set_pa"
		"ram(gcb,'MaskEnables',{'on','on','off','off','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 300\n"
		"          height = 300;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n  "
		"      end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIDpAW_FLT', 'horizontalAlignment', 'cen"
		"ter');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited perfor"
		"mance)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  8
		  Object {
		    $ObjectID		    690
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','"
		    "on','off','off','off','off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    691
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    692
		    Type		    "edit"
		    Name		    "fltPropGain"
		    Prompt		    "fltPropGain (Proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    693
		    Type		    "edit"
		    Name		    "fltIntegGain"
		    Prompt		    "fltIntegGain (Integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    694
		    Type		    "edit"
		    Name		    "fltDerivGain"
		    Prompt		    "fltDerivGain (Derivative Gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    695
		    Type		    "edit"
		    Name		    "fltFiltCoef"
		    Prompt		    "fltFiltCoef (Derivative term filter coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    696
		    Type		    "edit"
		    Name		    "fltLowerLimit"
		    Prompt		    "fltLowerLimit (Lower Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    697
		    Type		    "edit"
		    Name		    "fltUpperLimit"
		    Prompt		    "fltUpperLimit (Upper Limit of the controller)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIDpAW_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"39"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltInErr"
		  SID			  "310:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltControllerPIDpAWOut_preset"
		  SID			  "310:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "310:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIDpAW_SF"
		  SID			  "310:5"
		  Ports			  [11, 5]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIDpAW_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,fltPropGain,fltIntegGain,fltDerivGain,fltFiltCoef,fltLowerLimit,fltUpp"
		  "erLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "310:22"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  24
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    698
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "310:25"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  25
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    699
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIDpAW_BAM_FLT.mdl');text(10,75,'Parallel form of a standard PID contr"
		    "oller with anti-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltDerivGain"
		  SID			  "310:30"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltDerivPartK_1"
		  SID			  "310:35"
		  Position		  [40, 558, 70, 572]
		  ZOrder		  33
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltDerivPartK_1_Out"
		  SID			  "310:38"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  36
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltFiltCoef"
		  SID			  "310:31"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInK_1"
		  SID			  "310:36"
		  Position		  [40, 598, 70, 612]
		  ZOrder		  34
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInK_1_Out"
		  SID			  "310:39"
		  Position		  [340, 358, 370, 372]
		  ZOrder		  37
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegGain"
		  SID			  "310:29"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegPartK_1"
		  SID			  "310:34"
		  Position		  [40, 518, 70, 532]
		  ZOrder		  32
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIntegPartK_1_Out"
		  SID			  "310:37"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  35
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimit"
		  SID			  "310:32"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  30
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltPropGain"
		  SID			  "310:28"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimit"
		  SID			  "310:33"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  31
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "310:17"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  19
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlag"
		  SID			  "310:18"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  20
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  5
		  DstBlock		  "fltInK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  4
		  DstBlock		  "fltDerivPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  3
		  DstBlock		  "fltIntegPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlag"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "GFLIB_ControllerPIDpAW_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltInK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  11
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "fltDerivPartK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  10
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "fltIntegPartK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  9
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "fltUpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "fltLowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "fltFiltCoef"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "fltDerivGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  13
		  SrcBlock		  "fltIntegGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  14
		  SrcBlock		  "fltPropGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  15
		  SrcBlock		  "fltControllerPIDpAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  16
		  SrcBlock		  "fltInErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIDpAW_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIpAW_FLT"
	      SID		      "311"
	      Ports		      [2, 2, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 570, 275, 645]
	      ZOrder		      9
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		700
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIpAW_FLT"
		Description		"Parallel form PI controller with anti-windup in single precision floating-point implementation. This b"
		"lock supports re-initialization of the internal state during simulation. If the block is reset, the controller's out"
		"put will be aligned with the input fltControllerPIpAWOut_preset. Refer to the AMMCLIB User's Guide for further detai"
		"ls."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltPropGain'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltPropGain'], 'Position');\n        orient = get_para"
		"m( [gcb, '/fltPropGain'], 'Orientation');\n        delete_block(       [gcb, '/fltPropGain']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/fltPropGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/fltIntegGain'], 'Position');\n        orient = get_param( [gcb, '/fltIntegGain'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/fltIntegGain']);\n        add_block('built-in/Ground', [gcb, '/fltIntegGain'], 'Position', po"
		"s, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltLowerLimit'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/fltLowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLimit']);\n        ad"
		"d_block('built-in/Ground', [gcb, '/fltLowerLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_pa"
		"ram(    [gcb, '/fltUpperLimit'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimit'], 'Orientation');\n"
		"        delete_block(       [gcb, '/fltUpperLimit']);\n        add_block('built-in/Ground', [gcb, '/fltUpperLimit'],"
		" 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltIntegPartK_1'], 'Position');\n  "
		"      orient = get_param( [gcb, '/fltIntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltIntegPa"
		"rtK_1']);\n        add_block('built-in/Ground', [gcb, '/fltIntegPartK_1'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb, '/fltInK_1'], 'Position');\n        orient = get_param( [gcb, '/fltInK_1'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/fltInK_1']);\n        add_block('built-in/Ground', [gcb, '/fltInK_1"
		"'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/fltIntegPartK_1_Out'], 'Positio"
		"n');\n        orient = get_param( [gcb '/fltIntegPartK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/"
		"fltIntegPartK_1_Out']);\n        add_block('built-in/Terminator', [gcb '/fltIntegPartK_1_Out'], 'Position', pos, 'Or"
		"ientation', orient);\n\n        pos = get_param(    [gcb '/fltInK_1_Out'], 'Position');\n        orient = get_param("
		" [gcb '/fltInK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInK_1_Out']);\n        add_block('bui"
		"lt-in/Terminator', [gcb '/fltInK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/flt"
		"InErr'], 'Port', '1');\n        set_param([gcb '/fltControllerPIpAWOut_preset'], 'Port', '2');\n\n        set_param("
		"[gcb '/fltOut'], 'Port', '1');\n        set_param([gcb '/u16LimitFlag'], 'Port', '2');\n\n        set_param(gcb,'Mas"
		"kEnables',{'on','on','on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n    "
		"      set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n   "
		" % shown state variables\n    if strcmp(get_param([gcb '/fltPropGain'], 'BlockType'), 'Ground')\n        posblk = ge"
		"t_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltPropGain'], 'Position');\n        orient = get_p"
		"aram( [gcb, '/fltPropGain'], 'Orientation');\n        delete_block(       [gcb, '/fltPropGain']);\n        add_block"
		"('built-in/Inport', [gcb, '/fltPropGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n "
		"       pos = get_param(    [gcb, '/fltIntegGain'], 'Position');\n        orient = get_param( [gcb, '/fltIntegGain'],"
		" 'Orientation');\n        delete_block(       [gcb, '/fltIntegGain']);\n        add_block('built-in/Inport', [gcb, '"
		"/fltIntegGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(   "
		" [gcb, '/fltLowerLimit'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLimit'], 'Orientation');\n      "
		"  delete_block(       [gcb, '/fltLowerLimit']);\n        add_block('built-in/Inport', [gcb, '/fltLowerLimit'], 'Posi"
		"tion', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltUpperLimit"
		"'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimit'], 'Orientation');\n        delete_block(       "
		"[gcb, '/fltUpperLimit']);\n        add_block('built-in/Inport', [gcb, '/fltUpperLimit'], 'Position', pos, 'Orientati"
		"on', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltIntegPartK_1'], 'Position');\n  "
		"      orient = get_param( [gcb, '/fltIntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltIntegPa"
		"rtK_1']);\n        add_block('built-in/Inport', [gcb, '/fltIntegPartK_1'], 'Position', pos, 'Orientation', orient, '"
		"OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltInK_1'], 'Position');\n        orient = get_pa"
		"ram( [gcb, '/fltInK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltInK_1']);\n        add_block('built"
		"-in/Inport', [gcb, '/fltInK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n        p"
		"os = get_param(    [gcb '/fltIntegPartK_1_Out'], 'Position');\n        orient = get_param( [gcb '/fltIntegPartK_1_Ou"
		"t'], 'Orientation');\n        delete_block(       [gcb '/fltIntegPartK_1_Out']);\n        add_block('built-in/Outpor"
		"t', [gcb '/fltIntegPartK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/flt"
		"InK_1_Out'], 'Position');\n        orient = get_param( [gcb '/fltInK_1_Out'], 'Orientation');\n        delete_block("
		"       [gcb '/fltInK_1_Out']);\n        add_block('built-in/Outport', [gcb '/fltInK_1_Out'], 'Position', pos, 'Orien"
		"tation', orient);\n\n\n        set_param([gcb '/fltInErr'], 'Port', '1');\n        set_param([gcb '/fltControllerPIp"
		"AWOut_preset'], 'Port', '2');\n        set_param([gcb '/fltPropGain'], 'Port', '3');\n        set_param([gcb '/fltIn"
		"tegGain'], 'Port', '4');\n        set_param([gcb '/fltLowerLimit'], 'Port', '5');\n        set_param([gcb '/fltUpper"
		"Limit'], 'Port', '6');\n        set_param([gcb '/fltIntegPartK_1'], 'Port', '7');\n        set_param([gcb '/fltInK_1"
		"'], 'Port', '8');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n        set_param([gcb '/u16LimitFlag'], 'Por"
		"t', '2');\n        set_param([gcb '/fltIntegPartK_1_Out'], 'Port', '3');\n        set_param([gcb '/fltInK_1_Out'], '"
		"Port', '4');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off','off','off'});\n\n        if (posblk(4) -"
		" posblk(2)) < 225\n          height = 225;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), pos"
		"blk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIpAW_FLT', 'horizontalAlignment', 'cent"
		"er');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited perform"
		"ance)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  6
		  Object {
		    $ObjectID		    701
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off',"
		    "'off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    702
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    703
		    Type		    "edit"
		    Name		    "fltPropGain"
		    Prompt		    "fltPropGain (Proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    704
		    Type		    "edit"
		    Name		    "fltIntegGain"
		    Prompt		    "fltIntegGain (Integral gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    705
		    Type		    "edit"
		    Name		    "fltLowerLimit"
		    Prompt		    "fltLowerLimit (Lower Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    706
		    Type		    "edit"
		    Name		    "fltUpperLimit"
		    Prompt		    "fltUpperLimit (Upper Limit of the controller)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIpAW_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"31"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltInErr"
		  SID			  "311:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltControllerPIpAWOut_preset"
		  SID			  "311:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "311:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIpAW_SF"
		  SID			  "311:5"
		  Ports			  [8, 4]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIpAW_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,fltPropGain,fltIntegGain,fltLowerLimit,fltUpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "311:18"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  20
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    707
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "311:21"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  21
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    708
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIpAW_BAM_FLT.mdl');text(10,75,'Parallel form of a standard PI control"
		    "ler with anti-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInK_1"
		  SID			  "311:29"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInK_1_Out"
		  SID			  "311:31"
		  Position		  [340, 318, 370, 332]
		  ZOrder		  29
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegGain"
		  SID			  "311:25"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegPartK_1"
		  SID			  "311:28"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIntegPartK_1_Out"
		  SID			  "311:30"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimit"
		  SID			  "311:26"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltPropGain"
		  SID			  "311:24"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimit"
		  SID			  "311:27"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "311:14"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  16
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16LimitFlag"
		  SID			  "311:15"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  17
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIpAW_SF"
		  SrcPort		  4
		  DstBlock		  "fltInK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIpAW_SF"
		  SrcPort		  3
		  DstBlock		  "fltIntegPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIpAW_SF"
		  SrcPort		  2
		  DstBlock		  "u16LimitFlag"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "GFLIB_ControllerPIpAW_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "fltInK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltIntegPartK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "fltUpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "fltLowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "fltIntegGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "fltPropGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "fltControllerPIpAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  12
		  SrcBlock		  "fltInErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIpAW_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIp_FLT"
	      SID		      "312"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 665, 265, 740]
	      ZOrder		      10
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		709
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIp_FLT"
		Description		"Parallel form PI controller without anti-windup in single precision floating-point implementation. Thi"
		"s block supports re-initialization of the internal state during simulation. If the block is reset, the controller's "
		"output will be aligned with the input fltControllerPIpOut_preset. Refer to the AMMCLIB User's Guide for further deta"
		"ils."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltPropGain'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltPropGain'], 'Position');\n        orient = get_para"
		"m( [gcb, '/fltPropGain'], 'Orientation');\n        delete_block(       [gcb, '/fltPropGain']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/fltPropGain'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		", '/fltIntegGain'], 'Position');\n        orient = get_param( [gcb, '/fltIntegGain'], 'Orientation');\n        delet"
		"e_block(       [gcb, '/fltIntegGain']);\n        add_block('built-in/Ground', [gcb, '/fltIntegGain'], 'Position', po"
		"s, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltIntegPartK_1'], 'Position');\n        orient = "
		"get_param( [gcb, '/fltIntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltIntegPartK_1']);\n    "
		"    add_block('built-in/Ground', [gcb, '/fltIntegPartK_1'], 'Position', pos, 'Orientation', orient);\n\n        pos "
		"= get_param(    [gcb, '/fltInK_1'], 'Position');\n        orient = get_param( [gcb, '/fltInK_1'], 'Orientation');\n "
		"       delete_block(       [gcb, '/fltInK_1']);\n        add_block('built-in/Ground', [gcb, '/fltInK_1'], 'Position'"
		", pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/fltIntegPartK_1_Out'], 'Position');\n        "
		"orient = get_param( [gcb '/fltIntegPartK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltIntegPartK_"
		"1_Out']);\n        add_block('built-in/Terminator', [gcb '/fltIntegPartK_1_Out'], 'Position', pos, 'Orientation', or"
		"ient);\n\n        pos = get_param(    [gcb '/fltInK_1_Out'], 'Position');\n        orient = get_param( [gcb '/fltInK"
		"_1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInK_1_Out']);\n        add_block('built-in/Terminat"
		"or', [gcb '/fltInK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/fltInErr'], 'Port"
		"', '1');\n        set_param([gcb '/fltControllerPIpOut_preset'], 'Port', '2');\n\n        set_param([gcb '/fltOut'],"
		" 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) "
		"> 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height]"
		")\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/fltPropGain'], 'BlockType"
		"'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltPropGain'], 'P"
		"osition');\n        orient = get_param( [gcb, '/fltPropGain'], 'Orientation');\n        delete_block(       [gcb, '/"
		"fltPropGain']);\n        add_block('built-in/Inport', [gcb, '/fltPropGain'], 'Position', pos, 'Orientation', orient,"
		" 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltIntegGain'], 'Position');\n        orient = "
		"get_param( [gcb, '/fltIntegGain'], 'Orientation');\n        delete_block(       [gcb, '/fltIntegGain']);\n        ad"
		"d_block('built-in/Inport', [gcb, '/fltIntegGain'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single"
		"');\n\n        pos = get_param(    [gcb, '/fltIntegPartK_1'], 'Position');\n        orient = get_param( [gcb, '/fltI"
		"ntegPartK_1'], 'Orientation');\n        delete_block(       [gcb, '/fltIntegPartK_1']);\n        add_block('built-in"
		"/Inport', [gcb, '/fltIntegPartK_1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n       "
		" pos = get_param(    [gcb, '/fltInK_1'], 'Position');\n        orient = get_param( [gcb, '/fltInK_1'], 'Orientation'"
		");\n        delete_block(       [gcb, '/fltInK_1']);\n        add_block('built-in/Inport', [gcb, '/fltInK_1'], 'Posi"
		"tion', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n        pos = get_param(    [gcb '/fltIntegPart"
		"K_1_Out'], 'Position');\n        orient = get_param( [gcb '/fltIntegPartK_1_Out'], 'Orientation');\n        delete_b"
		"lock(       [gcb '/fltIntegPartK_1_Out']);\n        add_block('built-in/Outport', [gcb '/fltIntegPartK_1_Out'], 'Pos"
		"ition', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInK_1_Out'], 'Position');\n        ori"
		"ent = get_param( [gcb '/fltInK_1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInK_1_Out']);\n      "
		"  add_block('built-in/Outport', [gcb '/fltInK_1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_par"
		"am([gcb '/fltInErr'], 'Port', '1');\n        set_param([gcb '/fltControllerPIpOut_preset'], 'Port', '2');\n        s"
		"et_param([gcb '/fltPropGain'], 'Port', '3');\n        set_param([gcb '/fltIntegGain'], 'Port', '4');\n        set_pa"
		"ram([gcb '/fltIntegPartK_1'], 'Port', '5');\n        set_param([gcb '/fltInK_1'], 'Port', '6');\n\n        set_param"
		"([gcb '/fltOut'], 'Port', '1');\n        set_param([gcb '/fltIntegPartK_1_Out'], 'Port', '2');\n        set_param([g"
		"cb '/fltInK_1_Out'], 'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on','on','off','off'});\n\n        if (p"
		"osblk(4) - posblk(2)) < 175\n          height = 175;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posb"
		"lk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIp_FLT', 'horizontalAlignment', 'center"
		"');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performan"
		"ce)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  4
		  Object {
		    $ObjectID		    710
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off','off'});\n"
		    "end"
		  }
		  Object {
		    $ObjectID		    711
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    712
		    Type		    "edit"
		    Name		    "fltPropGain"
		    Prompt		    "fltPropGain (Proportional gain)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    713
		    Type		    "edit"
		    Name		    "fltIntegGain"
		    Prompt		    "fltIntegGain (Integral gain)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIp_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"26"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltInErr"
		  SID			  "312:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltControllerPIpOut_preset"
		  SID			  "312:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "312:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIp_SF"
		  SID			  "312:5"
		  Ports			  [6, 3]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIp_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,fltPropGain,fltIntegGain"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "312:15"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  17
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    714
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "312:18"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  18
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    715
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIp_BAM_FLT.mdl');text(10,75,'Parallel form of a standard PI controlle"
		    "r without anti-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInK_1"
		  SID			  "312:24"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInK_1_Out"
		  SID			  "312:26"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegGain"
		  SID			  "312:22"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  20
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltIntegPartK_1"
		  SID			  "312:23"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltIntegPartK_1_Out"
		  SID			  "312:25"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltPropGain"
		  SID			  "312:21"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  19
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "312:12"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  14
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIp_SF"
		  SrcPort		  3
		  DstBlock		  "fltInK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIp_SF"
		  SrcPort		  2
		  DstBlock		  "fltIntegPartK_1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIp_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltInK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "fltIntegPartK_1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltIntegGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "fltPropGain"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "fltControllerPIpOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "fltInErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIp_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIrAW_FLT"
	      SID		      "313"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 760, 275, 835]
	      ZOrder		      11
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		716
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIrAW_FLT"
		Description		"Recurrent form PI controller with anti-windup in single precision floating-point implementation. This "
		"block supports re-initialization of the internal state during simulation. If the block is reset, the controller's ou"
		"tput will be aligned with the input fltControllerPIrAWOut_preset. Refer to the AMMCLIB User's Guide for further deta"
		"ils."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltUpperLimit'], 'BlockType'), 'Inport')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltUpperLimit'], 'Position');\n        orient = get_"
		"param( [gcb, '/fltUpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltUpperLimit']);\n        add_"
		"block('built-in/Ground', [gcb, '/fltUpperLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_para"
		"m(    [gcb, '/fltLowerLimit'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLimit'], 'Orientation');\n "
		"       delete_block(       [gcb, '/fltLowerLimit']);\n        add_block('built-in/Ground', [gcb, '/fltLowerLimit'], "
		"'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltAcc'], 'Position');\n        orie"
		"nt = get_param( [gcb, '/fltAcc'], 'Orientation');\n        delete_block(       [gcb, '/fltAcc']);\n        add_block"
		"('built-in/Ground', [gcb, '/fltAcc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, "
		"'/fltInErrK1'], 'Position');\n        orient = get_param( [gcb, '/fltInErrK1'], 'Orientation');\n        delete_bloc"
		"k(       [gcb, '/fltInErrK1']);\n        add_block('built-in/Ground', [gcb, '/fltInErrK1'], 'Position', pos, 'Orient"
		"ation', orient);\n\n        pos = get_param(    [gcb, '/fltCC1sc'], 'Position');\n        orient = get_param( [gcb, "
		"'/fltCC1sc'], 'Orientation');\n        delete_block(       [gcb, '/fltCC1sc']);\n        add_block('built-in/Ground'"
		", [gcb, '/fltCC1sc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltCC2sc'], 'P"
		"osition');\n        orient = get_param( [gcb, '/fltCC2sc'], 'Orientation');\n        delete_block(       [gcb, '/flt"
		"CC2sc']);\n        add_block('built-in/Ground', [gcb, '/fltCC2sc'], 'Position', pos, 'Orientation', orient);\n\n\n  "
		"      pos = get_param(    [gcb '/fltAcc_Out'], 'Position');\n        orient = get_param( [gcb '/fltAcc_Out'], 'Orien"
		"tation');\n        delete_block(       [gcb '/fltAcc_Out']);\n        add_block('built-in/Terminator', [gcb '/fltAcc"
		"_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInErrK1_Out'], 'Position')"
		";\n        orient = get_param( [gcb '/fltInErrK1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInErr"
		"K1_Out']);\n        add_block('built-in/Terminator', [gcb '/fltInErrK1_Out'], 'Position', pos, 'Orientation', orient"
		");\n\n\n        set_param([gcb '/fltInErr'], 'Port', '1');\n        set_param([gcb '/fltControllerPIrAWOut_preset'],"
		" 'Port', '2');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on'"
		",'on','on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n          set_param(gcb,"
		"'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state varia"
		"bles\n    if strcmp(get_param([gcb '/fltUpperLimit'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Posi"
		"tion');\n\n        pos = get_param(    [gcb, '/fltUpperLimit'], 'Position');\n        orient = get_param( [gcb, '/fl"
		"tUpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltUpperLimit']);\n        add_block('built-in/I"
		"nport', [gcb, '/fltUpperLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos"
		" = get_param(    [gcb, '/fltLowerLimit'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLimit'], 'Orient"
		"ation');\n        delete_block(       [gcb, '/fltLowerLimit']);\n        add_block('built-in/Inport', [gcb, '/fltLow"
		"erLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb,"
		" '/fltAcc'], 'Position');\n        orient = get_param( [gcb, '/fltAcc'], 'Orientation');\n        delete_block(     "
		"  [gcb, '/fltAcc']);\n        add_block('built-in/Inport', [gcb, '/fltAcc'], 'Position', pos, 'Orientation', orient,"
		" 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltInErrK1'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/fltInErrK1'], 'Orientation');\n        delete_block(       [gcb, '/fltInErrK1']);\n        add_bloc"
		"k('built-in/Inport', [gcb, '/fltInErrK1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n "
		"       pos = get_param(    [gcb, '/fltCC1sc'], 'Position');\n        orient = get_param( [gcb, '/fltCC1sc'], 'Orient"
		"ation');\n        delete_block(       [gcb, '/fltCC1sc']);\n        add_block('built-in/Inport', [gcb, '/fltCC1sc'],"
		" 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltCC2s"
		"c'], 'Position');\n        orient = get_param( [gcb, '/fltCC2sc'], 'Orientation');\n        delete_block(       [gcb"
		", '/fltCC2sc']);\n        add_block('built-in/Inport', [gcb, '/fltCC2sc'], 'Position', pos, 'Orientation', orient, '"
		"OutDataTypeStr', 'single');\n\n\n        pos = get_param(    [gcb '/fltAcc_Out'], 'Position');\n        orient = get"
		"_param( [gcb '/fltAcc_Out'], 'Orientation');\n        delete_block(       [gcb '/fltAcc_Out']);\n        add_block('"
		"built-in/Outport', [gcb '/fltAcc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb"
		" '/fltInErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/fltInErrK1_Out'], 'Orientation');\n        del"
		"ete_block(       [gcb '/fltInErrK1_Out']);\n        add_block('built-in/Outport', [gcb '/fltInErrK1_Out'], 'Position"
		"', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/fltInErr'], 'Port', '1');\n        set_param([gcb '/fl"
		"tControllerPIrAWOut_preset'], 'Port', '2');\n        set_param([gcb '/fltUpperLimit'], 'Port', '3');\n        set_pa"
		"ram([gcb '/fltLowerLimit'], 'Port', '4');\n        set_param([gcb '/fltAcc'], 'Port', '5');\n        set_param([gcb "
		"'/fltInErrK1'], 'Port', '6');\n        set_param([gcb '/fltCC1sc'], 'Port', '7');\n        set_param([gcb '/fltCC2sc"
		"'], 'Port', '8');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n        set_param([gcb '/fltAcc_Out'], 'Port'"
		", '2');\n        set_param([gcb '/fltInErrK1_Out'], 'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on','on',"
		"'off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 225\n          height = 225;\n          set_param"
		"(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIrAW_FLT', 'horizontalAlignment', 'cent"
		"er');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited perform"
		"ance)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  6
		  Object {
		    $ObjectID		    717
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off',"
		    "'off','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    718
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    719
		    Type		    "edit"
		    Name		    "fltUpperLimit"
		    Prompt		    "fltUpperLimit (Upper Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    720
		    Type		    "edit"
		    Name		    "fltLowerLimit"
		    Prompt		    "fltLowerLimit (Lower Limit of the controller)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    721
		    Type		    "edit"
		    Name		    "fltCC1sc"
		    Prompt		    "fltCC1sc (CC1 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    722
		    Type		    "edit"
		    Name		    "fltCC2sc"
		    Prompt		    "fltCC2sc (CC2 coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIrAW_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"30"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltInErr"
		  SID			  "313:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltControllerPIrAWOut_preset"
		  SID			  "313:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "313:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIrAW_SF"
		  SID			  "313:5"
		  Ports			  [8, 3]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIrAW_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,fltUpperLimit,fltLowerLimit,fltCC1sc,fltCC2sc"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "313:17"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  19
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    723
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "313:20"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  20
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    724
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIrAW_BAM_FLT.mdl');text(10,75,'Recurrent form PI controller with anti"
		    "-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAcc"
		  SID			  "313:25"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAcc_Out"
		  SID			  "313:29"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  27
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC1sc"
		  SID			  "313:27"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  25
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC2sc"
		  SID			  "313:28"
		  Position		  [40, 478, 70, 492]
		  ZOrder		  26
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInErrK1"
		  SID			  "313:26"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInErrK1_Out"
		  SID			  "313:30"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  28
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimit"
		  SID			  "313:24"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimit"
		  SID			  "313:23"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "313:14"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  16
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIrAW_SF"
		  SrcPort		  3
		  DstBlock		  "fltInErrK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIrAW_SF"
		  SrcPort		  2
		  DstBlock		  "fltAcc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIrAW_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltCC2sc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  8
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "fltCC1sc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltInErrK1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "fltAcc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "fltLowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "fltUpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  10
		  SrcBlock		  "fltControllerPIrAWOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  11
		  SrcBlock		  "fltInErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIrAW_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_ControllerPIr_FLT"
	      SID		      "314"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 855, 265, 930]
	      ZOrder		      12
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		725
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_ControllerPIr_FLT"
		Description		"Reccurent form PI controller without anti-windup in single precision floating-point implementation. Th"
		"is block supports re-initialization of the internal state during simulation. If the block is reset, the controller's"
		" output will be aligned with the input fltControllerPIrOut_preset. Refer to the AMMCLIB User's Guide for further det"
		"ails."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltCC1sc'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltCC1sc'], 'Position');\n        orient = get_param( [gc"
		"b, '/fltCC1sc'], 'Orientation');\n        delete_block(       [gcb, '/fltCC1sc']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/fltCC1sc'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltCC2sc'],"
		" 'Position');\n        orient = get_param( [gcb, '/fltCC2sc'], 'Orientation');\n        delete_block(       [gcb, '/"
		"fltCC2sc']);\n        add_block('built-in/Ground', [gcb, '/fltCC2sc'], 'Position', pos, 'Orientation', orient);\n\n "
		"       pos = get_param(    [gcb, '/fltAcc'], 'Position');\n        orient = get_param( [gcb, '/fltAcc'], 'Orientatio"
		"n');\n        delete_block(       [gcb, '/fltAcc']);\n        add_block('built-in/Ground', [gcb, '/fltAcc'], 'Positi"
		"on', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltInErrK1'], 'Position');\n        orient "
		"= get_param( [gcb, '/fltInErrK1'], 'Orientation');\n        delete_block(       [gcb, '/fltInErrK1']);\n        add_"
		"block('built-in/Ground', [gcb, '/fltInErrK1'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param"
		"(    [gcb '/fltAcc_Out'], 'Position');\n        orient = get_param( [gcb '/fltAcc_Out'], 'Orientation');\n        de"
		"lete_block(       [gcb '/fltAcc_Out']);\n        add_block('built-in/Terminator', [gcb '/fltAcc_Out'], 'Position', p"
		"os, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInErrK1_Out'], 'Position');\n        orient = g"
		"et_param( [gcb '/fltInErrK1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInErrK1_Out']);\n        a"
		"dd_block('built-in/Terminator', [gcb '/fltInErrK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_p"
		"aram([gcb '/fltInErr'], 'Port', '1');\n        set_param([gcb '/fltControllerPIrOut_preset'], 'Port', '2');\n\n     "
		"   set_param([gcb '/fltOut'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on'});\n\n      "
		"  if (posblk(4) - posblk(2)) > 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2),"
		" posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gc"
		"b '/fltCC1sc'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(   "
		" [gcb, '/fltCC1sc'], 'Position');\n        orient = get_param( [gcb, '/fltCC1sc'], 'Orientation');\n        delete_b"
		"lock(       [gcb, '/fltCC1sc']);\n        add_block('built-in/Inport', [gcb, '/fltCC1sc'], 'Position', pos, 'Orienta"
		"tion', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltCC2sc'], 'Position');\n       "
		" orient = get_param( [gcb, '/fltCC2sc'], 'Orientation');\n        delete_block(       [gcb, '/fltCC2sc']);\n        "
		"add_block('built-in/Inport', [gcb, '/fltCC2sc'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single')"
		";\n\n        pos = get_param(    [gcb, '/fltAcc'], 'Position');\n        orient = get_param( [gcb, '/fltAcc'], 'Orie"
		"ntation');\n        delete_block(       [gcb, '/fltAcc']);\n        add_block('built-in/Inport', [gcb, '/fltAcc'], '"
		"Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltInErrK"
		"1'], 'Position');\n        orient = get_param( [gcb, '/fltInErrK1'], 'Orientation');\n        delete_block(       [g"
		"cb, '/fltInErrK1']);\n        add_block('built-in/Inport', [gcb, '/fltInErrK1'], 'Position', pos, 'Orientation', ori"
		"ent, 'OutDataTypeStr', 'single');\n\n\n        pos = get_param(    [gcb '/fltAcc_Out'], 'Position');\n        orient"
		" = get_param( [gcb '/fltAcc_Out'], 'Orientation');\n        delete_block(       [gcb '/fltAcc_Out']);\n        add_b"
		"lock('built-in/Outport', [gcb '/fltAcc_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(  "
		"  [gcb '/fltInErrK1_Out'], 'Position');\n        orient = get_param( [gcb '/fltInErrK1_Out'], 'Orientation');\n     "
		"   delete_block(       [gcb '/fltInErrK1_Out']);\n        add_block('built-in/Outport', [gcb '/fltInErrK1_Out'], 'Po"
		"sition', pos, 'Orientation', orient);\n\n\n        set_param([gcb '/fltInErr'], 'Port', '1');\n        set_param([gc"
		"b '/fltControllerPIrOut_preset'], 'Port', '2');\n        set_param([gcb '/fltCC1sc'], 'Port', '3');\n        set_par"
		"am([gcb '/fltCC2sc'], 'Port', '4');\n        set_param([gcb '/fltAcc'], 'Port', '5');\n        set_param([gcb '/fltI"
		"nErrK1'], 'Port', '6');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n        set_param([gcb '/fltAcc_Out'], "
		"'Port', '2');\n        set_param([gcb '/fltInErrK1_Out'], 'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on'"
		",'on','off','off'});\n\n        if (posblk(4) - posblk(2)) < 175\n          height = 175;\n          set_param(gcb,'"
		"Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_ControllerPIr_FLT', 'horizontalAlignment', 'center"
		"');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performan"
		"ce)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  4
		  Object {
		    $ObjectID		    726
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off','off'});\n"
		    "end"
		  }
		  Object {
		    $ObjectID		    727
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    728
		    Type		    "edit"
		    Name		    "fltCC1"
		    Prompt		    "fltCC1 (CC1 coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    729
		    Type		    "edit"
		    Name		    "fltCC2"
		    Prompt		    "fltCC2 (CC2 coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_ControllerPIr_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"26"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltInErr"
		  SID			  "314:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltControllerPIrOut_preset"
		  SID			  "314:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "314:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_ControllerPIr_SF"
		  SID			  "314:5"
		  Ports			  [6, 3]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GFLIB_ControllerPIr_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,fltCC1,fltCC2"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "314:15"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  17
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    730
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "314:18"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  18
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    731
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_ControllerPIr_BAM_FLT.mdl');text(10,75,'Recurrent form PI controller without ant"
		    "i-windup.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltAcc"
		  SID			  "314:23"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltAcc_Out"
		  SID			  "314:25"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  23
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC1sc"
		  SID			  "314:21"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  19
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltCC2sc"
		  SID			  "314:22"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  20
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInErrK1"
		  SID			  "314:24"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInErrK1_Out"
		  SID			  "314:26"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  24
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "314:12"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  14
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_ControllerPIr_SF"
		  SrcPort		  3
		  DstBlock		  "fltInErrK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_ControllerPIr_SF"
		  SrcPort		  2
		  DstBlock		  "fltAcc_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_ControllerPIr_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltInErrK1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "fltAcc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltCC2sc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "fltCC1sc"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "fltControllerPIrOut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  9
		  SrcBlock		  "fltInErr"
		  SrcPort		  1
		  DstBlock		  "GFLIB_ControllerPIr_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Cos_FLT"
	      SID		      "315"
	      Ports		      [1, 1]
	      Position		      [20, 950, 215, 1000]
	      ZOrder		      13
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		732
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Cos_FLT"
		Description		"Cosine function in single precision floating-point implementation. Refer to the AMMCLIB User's Guide f"
		"or further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Cos_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Cos_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "316"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Cos_SF"
		  SID			  "317"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Cos_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "318"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    733
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "319"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    734
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Cos_BAM_FLT.mdl');text(10,75,'Cosine function');text(10,60,'NXP 2020');text(10,4"
		    "5,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "320"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Cos_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Cos_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Hyst_FLT"
	      SID		      "321"
	      Ports		      [1, 1]
	      Position		      [20, 1019, 220, 1071]
	      ZOrder		      14
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		735
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Hyst_FLT"
		Description		"Hysteresis function in single precision floating-point implementation. Refer to the AMMCLIB User's Gui"
		"de for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltHystOn'], 'BlockType'), 'Inport')\n        posblk = get_par"
		"am(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltHystOn'], 'Position');\n        orient = get_param( ["
		"gcb, '/fltHystOn'], 'Orientation');\n        delete_block(       [gcb, '/fltHystOn']);\n        add_block('built-in/"
		"Ground', [gcb, '/fltHystOn'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltHys"
		"tOff'], 'Position');\n        orient = get_param( [gcb, '/fltHystOff'], 'Orientation');\n        delete_block(      "
		" [gcb, '/fltHystOff']);\n        add_block('built-in/Ground', [gcb, '/fltHystOff'], 'Position', pos, 'Orientation', "
		"orient);\n\n        pos = get_param(    [gcb, '/fltOutValOn'], 'Position');\n        orient = get_param( [gcb, '/flt"
		"OutValOn'], 'Orientation');\n        delete_block(       [gcb, '/fltOutValOn']);\n        add_block('built-in/Ground"
		"', [gcb, '/fltOutValOn'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltOutValO"
		"ff'], 'Position');\n        orient = get_param( [gcb, '/fltOutValOff'], 'Orientation');\n        delete_block(      "
		" [gcb, '/fltOutValOff']);\n        add_block('built-in/Ground', [gcb, '/fltOutValOff'], 'Position', pos, 'Orientatio"
		"n', orient);\n\n        pos = get_param(    [gcb, '/fltOutState'], 'Position');\n        orient = get_param( [gcb, '"
		"/fltOutState'], 'Orientation');\n        delete_block(       [gcb, '/fltOutState']);\n        add_block('built-in/Gr"
		"ound', [gcb, '/fltOutState'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/fltOu"
		"tState_Out'], 'Position');\n        orient = get_param( [gcb '/fltOutState_Out'], 'Orientation');\n        delete_bl"
		"ock(       [gcb '/fltOutState_Out']);\n        add_block('built-in/Terminator', [gcb '/fltOutState_Out'], 'Position'"
		", pos, 'Orientation', orient);\n\n\n        set_param([gcb '/fltIn'], 'Port', '1');\n\n        set_param([gcb '/fltO"
		"ut'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on','on'});\n\n        if (posblk(4) - p"
		"osblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk("
		"2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/fltHystOn'], 'B"
		"lockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltHystOn"
		"'], 'Position');\n        orient = get_param( [gcb, '/fltHystOn'], 'Orientation');\n        delete_block(       [gcb"
		", '/fltHystOn']);\n        add_block('built-in/Inport', [gcb, '/fltHystOn'], 'Position', pos, 'Orientation', orient,"
		" 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltHystOff'], 'Position');\n        orient = ge"
		"t_param( [gcb, '/fltHystOff'], 'Orientation');\n        delete_block(       [gcb, '/fltHystOff']);\n        add_bloc"
		"k('built-in/Inport', [gcb, '/fltHystOff'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n "
		"       pos = get_param(    [gcb, '/fltOutValOn'], 'Position');\n        orient = get_param( [gcb, '/fltOutValOn'], '"
		"Orientation');\n        delete_block(       [gcb, '/fltOutValOn']);\n        add_block('built-in/Inport', [gcb, '/fl"
		"tOutValOn'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gc"
		"b, '/fltOutValOff'], 'Position');\n        orient = get_param( [gcb, '/fltOutValOff'], 'Orientation');\n        dele"
		"te_block(       [gcb, '/fltOutValOff']);\n        add_block('built-in/Inport', [gcb, '/fltOutValOff'], 'Position', p"
		"os, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltOutState'], 'Posit"
		"ion');\n        orient = get_param( [gcb, '/fltOutState'], 'Orientation');\n        delete_block(       [gcb, '/fltO"
		"utState']);\n        add_block('built-in/Inport', [gcb, '/fltOutState'], 'Position', pos, 'Orientation', orient, 'Ou"
		"tDataTypeStr', 'single');\n\n\n        pos = get_param(    [gcb '/fltOutState_Out'], 'Position');\n        orient = "
		"get_param( [gcb '/fltOutState_Out'], 'Orientation');\n        delete_block(       [gcb '/fltOutState_Out']);\n      "
		"  add_block('built-in/Outport', [gcb '/fltOutState_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_"
		"param([gcb '/fltIn'], 'Port', '1');\n        set_param([gcb '/fltHystOn'], 'Port', '2');\n        set_param([gcb '/f"
		"ltHystOff'], 'Port', '3');\n        set_param([gcb '/fltOutValOn'], 'Port', '4');\n        set_param([gcb '/fltOutVa"
		"lOff'], 'Port', '5');\n        set_param([gcb '/fltOutState'], 'Port', '6');\n\n        set_param([gcb '/fltOut'], '"
		"Port', '1');\n        set_param([gcb '/fltOutState_Out'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on'"
		",'off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 175\n          height = 175;\n          set_para"
		"m(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_Hyst_FLT', 'horizontalAlignment', 'center');\nif sh"
		"owStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)'], 'ho"
		"rizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  5
		  Object {
		    $ObjectID		    736
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off','off"
		    "','off'});\nend"
		  }
		  Object {
		    $ObjectID		    737
		    Type		    "edit"
		    Name		    "fltHystOn"
		    Prompt		    "fltHystOn (Value determining the upper threshold)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    738
		    Type		    "edit"
		    Name		    "fltHystOff"
		    Prompt		    "fltHystOff (Value determining the lower threshold)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    739
		    Type		    "edit"
		    Name		    "fltOutValOn"
		    Prompt		    "fltOutValOn (Value of the output when input is higher than the upper threshold)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    740
		    Type		    "edit"
		    Name		    "fltOutValOff"
		    Prompt		    "fltOutValOff (Value of the output when input is lower than the lower threshold)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Hyst_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"24"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "321:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Hyst_SF"
		  SID			  "321:4"
		  Ports			  [6, 2]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Hyst_SF_FLT"
		  Parameters		  "showStates,fltHystOn,fltHystOff,fltOutValOn,fltOutValOff"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "321:13"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  10
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    741
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "321:16"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  11
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    742
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Hyst_BAM_FLT.mdl');text(10,75,'Hysteresis function.');text(10,60,'NXP 2020');tex"
		    "t(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltHystOff"
		  SID			  "321:20"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  13
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltHystOn"
		  SID			  "321:19"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  12
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltOutState"
		  SID			  "321:23"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  16
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltOutState_Out"
		  SID			  "321:24"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  17
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltOutValOff"
		  SID			  "321:22"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  15
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltOutValOn"
		  SID			  "321:21"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  14
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "321:11"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Hyst_SF"
		  SrcPort		  2
		  DstBlock		  "fltOutState_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_Hyst_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltOutState"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltOutValOff"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "fltOutValOn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltHystOff"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "fltHystOn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Hyst_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_IntegratorTR_FLT"
	      SID		      "322"
	      Ports		      [2, 1, 0, 0, 0, 0, 0, 0, 1]
	      Position		      [20, 1090, 260, 1165]
	      ZOrder		      15
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		743
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_IntegratorTR_FLT"
		Description		"Discrete integrator transformed from a linear model using Billinear (trapezoidal) transformation in si"
		"ngle precision floating-point implementation. This block supports re-initialization of the internal state during sim"
		"ulation. If the block is reset, the integrator's output will be aligned with the input fltIntegratorTROut_preset. Re"
		"fer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltC1'], 'BlockType'), 'Inport')\n        posblk = get_param(g"
		"cb, 'Position');\n\n        pos = get_param(    [gcb, '/fltC1'], 'Position');\n        orient = get_param( [gcb, '/f"
		"ltC1'], 'Orientation');\n        delete_block(       [gcb, '/fltC1']);\n        add_block('built-in/Ground', [gcb, '"
		"/fltC1'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltState'], 'Position');\n"
		"        orient = get_param( [gcb, '/fltState'], 'Orientation');\n        delete_block(       [gcb, '/fltState']);\n "
		"       add_block('built-in/Ground', [gcb, '/fltState'], 'Position', pos, 'Orientation', orient);\n\n        pos = ge"
		"t_param(    [gcb, '/fltInK1'], 'Position');\n        orient = get_param( [gcb, '/fltInK1'], 'Orientation');\n       "
		" delete_block(       [gcb, '/fltInK1']);\n        add_block('built-in/Ground', [gcb, '/fltInK1'], 'Position', pos, '"
		"Orientation', orient);\n\n\n        pos = get_param(    [gcb '/fltState_Out'], 'Position');\n        orient = get_pa"
		"ram( [gcb '/fltState_Out'], 'Orientation');\n        delete_block(       [gcb '/fltState_Out']);\n        add_block("
		"'built-in/Terminator', [gcb '/fltState_Out'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(  "
		"  [gcb '/fltInK1_Out'], 'Position');\n        orient = get_param( [gcb '/fltInK1_Out'], 'Orientation');\n        del"
		"ete_block(       [gcb '/fltInK1_Out']);\n        add_block('built-in/Terminator', [gcb '/fltInK1_Out'], 'Position', "
		"pos, 'Orientation', orient);\n\n\n        set_param([gcb '/fltIn'], 'Port', '1');\n        set_param([gcb '/fltInteg"
		"ratorTROut_preset'], 'Port', '2');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n\n        set_param(gcb,'Mas"
		"kEnables',{'on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n          set_param"
		"(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state "
		"variables\n    if strcmp(get_param([gcb '/fltC1'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Positio"
		"n');\n\n        pos = get_param(    [gcb, '/fltC1'], 'Position');\n        orient = get_param( [gcb, '/fltC1'], 'Ori"
		"entation');\n        delete_block(       [gcb, '/fltC1']);\n        add_block('built-in/Inport', [gcb, '/fltC1'], 'P"
		"osition', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltState']"
		", 'Position');\n        orient = get_param( [gcb, '/fltState'], 'Orientation');\n        delete_block(       [gcb, '"
		"/fltState']);\n        add_block('built-in/Inport', [gcb, '/fltState'], 'Position', pos, 'Orientation', orient, 'Out"
		"DataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltInK1'], 'Position');\n        orient = get_param("
		" [gcb, '/fltInK1'], 'Orientation');\n        delete_block(       [gcb, '/fltInK1']);\n        add_block('built-in/In"
		"port', [gcb, '/fltInK1'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n        pos = ge"
		"t_param(    [gcb '/fltState_Out'], 'Position');\n        orient = get_param( [gcb '/fltState_Out'], 'Orientation');\n"
		"        delete_block(       [gcb '/fltState_Out']);\n        add_block('built-in/Outport', [gcb '/fltState_Out'], 'P"
		"osition', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb '/fltInK1_Out'], 'Position');\n        or"
		"ient = get_param( [gcb '/fltInK1_Out'], 'Orientation');\n        delete_block(       [gcb '/fltInK1_Out']);\n       "
		" add_block('built-in/Outport', [gcb '/fltInK1_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_param"
		"([gcb '/fltIn'], 'Port', '1');\n        set_param([gcb '/fltIntegratorTROut_preset'], 'Port', '2');\n        set_par"
		"am([gcb '/fltC1'], 'Port', '3');\n        set_param([gcb '/fltState'], 'Port', '4');\n        set_param([gcb '/fltIn"
		"K1'], 'Port', '5');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n        set_param([gcb '/fltState_Out'], 'P"
		"ort', '2');\n        set_param([gcb '/fltInK1_Out'], 'Port', '3');\n\n        set_param(gcb,'MaskEnables',{'on','on'"
		",'off'});\n\n        if (posblk(4) - posblk(2)) < 150\n          height = 150;\n          set_param(gcb,'Position',["
		"posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 25;\ncolor('black');\ntext(tX,tY, 'GFLIB_IntegratorTR_FLT', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  3
		  Object {
		    $ObjectID		    744
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    745
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Pre-set according to the first set of inputs after reset"
		    Cell		    "Clear to zero"
		    PropName		    "TypeOptions"
		    }
		    Name		    "resetStatesEnable"
		    Prompt		    "Internal state after reset"
		    Value		    "Pre-set according to the first set of inputs after reset"
		  }
		  Object {
		    $ObjectID		    746
		    Type		    "edit"
		    Name		    "fltC1"
		    Prompt		    "fltC1 (Integrator coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_IntegratorTR_FLT"
		Location		[15, 654, 115, 696]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"24"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "322:6"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  8
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIntegratorTROut_preset"
		  SID			  "322:7"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  9
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  ResetPort
		  Name			  "Reset"
		  SID			  "322:3"
		  Position		  [195, 110, 215, 130]
		  ZOrder		  4
		  DisableCoverage	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_IntegratorTR_SF"
		  SID			  "322:5"
		  Ports			  [5, 3]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  7
		  FunctionName		  "GFLIB_IntegratorTR_SF_FLT"
		  Parameters		  "showStates,resetStatesEnable,fltC1"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "322:14"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  16
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    747
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "322:17"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  17
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    748
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_IntegratorTR_BAM_FLT.mdl');text(10,75,'Discrete integrator transformed from a li"
		    "near model using Billinear (trapezoidal) transformation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'"
		    "28-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltC1"
		  SID			  "322:20"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  18
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltInK1"
		  SID			  "322:22"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  20
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltInK1_Out"
		  SID			  "322:24"
		  Position		  [340, 278, 370, 292]
		  ZOrder		  22
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltState"
		  SID			  "322:21"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  19
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltState_Out"
		  SID			  "322:23"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  21
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "322:11"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  13
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_IntegratorTR_SF"
		  SrcPort		  3
		  DstBlock		  "fltInK1_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_IntegratorTR_SF"
		  SrcPort		  2
		  DstBlock		  "fltState_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "GFLIB_IntegratorTR_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltInK1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "fltState"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltC1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "fltIntegratorTROut_preset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_IntegratorTR_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Limit_FLT"
	      SID		      "323"
	      Ports		      [1, 1]
	      Position		      [20, 1189, 225, 1241]
	      ZOrder		      16
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		749
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Limit_FLT"
		Description		"Limit function in single precision floating-point implementation. Refer to the AMMCLIB User's Guide fo"
		"r further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltLowerLimit'], 'BlockType'), 'Inport')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltLowerLimit'], 'Position');\n        orient = get_"
		"param( [gcb, '/fltLowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLimit']);\n        add_"
		"block('built-in/Ground', [gcb, '/fltLowerLimit'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_para"
		"m(    [gcb, '/fltUpperLimit'], 'Position');\n        orient = get_param( [gcb, '/fltUpperLimit'], 'Orientation');\n "
		"       delete_block(       [gcb, '/fltUpperLimit']);\n        add_block('built-in/Ground', [gcb, '/fltUpperLimit'], "
		"'Position', pos, 'Orientation', orient);\n\n\n\n        set_param([gcb '/fltIn'], 'Port', '1');\n\n        set_param"
		"([gcb '/fltOut'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on'});\n\n        if (posblk(4) -"
		" posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posbl"
		"k(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/fltLowerLimit"
		"'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/flt"
		"LowerLimit'], 'Position');\n        orient = get_param( [gcb, '/fltLowerLimit'], 'Orientation');\n        delete_blo"
		"ck(       [gcb, '/fltLowerLimit']);\n        add_block('built-in/Inport', [gcb, '/fltLowerLimit'], 'Position', pos, "
		"'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltUpperLimit'], 'Positio"
		"n');\n        orient = get_param( [gcb, '/fltUpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltU"
		"pperLimit']);\n        add_block('built-in/Inport', [gcb, '/fltUpperLimit'], 'Position', pos, 'Orientation', orient,"
		" 'OutDataTypeStr', 'single');\n\n\n\n        set_param([gcb '/fltIn'], 'Port', '1');\n        set_param([gcb '/fltLo"
		"werLimit'], 'Port', '2');\n        set_param([gcb '/fltUpperLimit'], 'Port', '3');\n\n        set_param([gcb '/fltOu"
		"t'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','off','off'});\n\n        if (posblk(4) - posblk(2))"
		" < 100\n          height = 100;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+heig"
		"ht])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_Limit_FLT', 'horizontalAlignment', 'center');\nif s"
		"howStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)'], 'h"
		"orizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  3
		  Object {
		    $ObjectID		    750
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    751
		    Type		    "edit"
		    Name		    "fltLowerLimit"
		    Prompt		    "fltLowerLimit (Lower limit)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    752
		    Type		    "edit"
		    Name		    "fltUpperLimit"
		    Prompt		    "fltUpperLimit (Upper limit)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Limit_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"16"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "323:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Limit_SF"
		  SID			  "323:4"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Limit_SF_FLT"
		  Parameters		  "showStates,fltLowerLimit,fltUpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "323:9"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    753
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "323:12"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    754
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Limit_BAM_FLT.mdl');text(10,75,'Limit function.');text(10,60,'NXP 2020');text(10"
		    ",45,'1.0');text(10,30,'23-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimit"
		  SID			  "323:15"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  8
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimit"
		  SID			  "323:16"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  9
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "323:8"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Limit_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltUpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Limit_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltLowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Limit_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Limit_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Log10_FLT"
	      SID		      "324"
	      Ports		      [1, 1]
	      Position		      [20, 1260, 225, 1310]
	      ZOrder		      17
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		755
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Log10_FLT"
		Description		"Fast base-10 logarithm function in single precision floating-point implementation. Refer to the AMMCLI"
		"B User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Log10_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Log10_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "325"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Log10_SF"
		  SID			  "326"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Log10_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "327"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    756
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "328"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    757
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Log10_BAM_FLT.mdl');text(10,75,'Fast base-10 logarithm');text(10,60,'NXP 2020');"
		    "text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "329"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Log10_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Log10_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_LowerLimit_FLT"
	      SID		      "330"
	      Ports		      [1, 1]
	      Position		      [20, 1330, 250, 1380]
	      ZOrder		      18
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		758
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_LowerLimit_FLT"
		Description		"Lower limit function in single precision floating-point implementation. Refer to the AMMCLIB User's Gu"
		"ide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltLowerLimit'], 'BlockType'), 'Inport')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltLowerLimit'], 'Position');\n        orient = get_"
		"param( [gcb, '/fltLowerLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLimit']);\n        add_"
		"block('built-in/Ground', [gcb, '/fltLowerLimit'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param("
		"[gcb '/fltIn'], 'Port', '1');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n\n        set_param(gcb,'MaskEnab"
		"les',{'on','on'});\n\n        if (posblk(4) - posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Posi"
		"tion',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n"
		"    if strcmp(get_param([gcb '/fltLowerLimit'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position')"
		";\n\n        pos = get_param(    [gcb, '/fltLowerLimit'], 'Position');\n        orient = get_param( [gcb, '/fltLower"
		"Limit'], 'Orientation');\n        delete_block(       [gcb, '/fltLowerLimit']);\n        add_block('built-in/Inport'"
		", [gcb, '/fltLowerLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n\n        set_p"
		"aram([gcb '/fltIn'], 'Port', '1');\n        set_param([gcb '/fltLowerLimit'], 'Port', '2');\n\n        set_param([gc"
		"b '/fltOut'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','off'});\n\n        if (posblk(4) - posblk("
		"2)) < 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+hei"
		"ght])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_LowerLimit_FLT', 'horizontalAlignment', 'center');\n"
		"if showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)']"
		", 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    759
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    760
		    Type		    "edit"
		    Name		    "fltLowerLimit"
		    Prompt		    "fltLowerLimit (Value determining the lower limit threshold)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_LowerLimit_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"14"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "330:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_LowerLimit_SF"
		  SID			  "330:4"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_LowerLimit_SF_FLT"
		  Parameters		  "showStates,fltLowerLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "330:8"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    761
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "330:11"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    762
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_LowerLimit_BAM_FLT.mdl');text(10,75,'Lower limit function.');text(10,60,'NXP 202"
		    "0');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLowerLimit"
		  SID			  "330:14"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  7
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "330:7"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_LowerLimit_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltLowerLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_LowerLimit_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_LowerLimit_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Lut1D_FLT"
	      SID		      "331"
	      Ports		      [2, 1]
	      Position		      [20, 1400, 225, 1475]
	      ZOrder		      19
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		763
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Lut1D_FLT"
		Description		"One dimensional lookup table function in single precision floating-point implementation. Refer to the "
		"AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Lut1D_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    764
		    Type		    "edit"
		    Name		    "pfltTable"
		    Prompt		    "pfltTable (Vector holding the ordinate values of interpolating intervals)"
		    Value		    "[-0.75 -0.25 0.0 0.25 0.75]"
		  }
		  Object {
		    $ObjectID		    765
		    Type		    "edit"
		    Name		    "s32MidIdx"
		    Prompt		    "Middle index in the table pfltTable (zero-based indexing)"
		    Value		    "2"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Lut1D_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "332"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u32ShamOffset"
		  SID			  "333"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Lut1D_SF"
		  SID			  "334"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Lut1D_SF_FLT"
		  Parameters		  "pfltTable,s32MidIdx"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "335"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    766
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "336"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    767
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Lut1D_BAM_FLT.mdl');text(10,75,'One dimensional lookup table function');text(10,"
		    "60,'NXP 2020');text(10,45,'1.0');text(10,30,'23-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "337"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Lut1D_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u32ShamOffset"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut1D_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut1D_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Lut2D_FLT"
	      SID		      "338"
	      Ports		      [4, 1]
	      Position		      [20, 1492, 225, 1618]
	      ZOrder		      20
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		768
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Lut2D_FLT"
		Description		"Two dimensional lookup table function in single precision floating-point implementation. Refer to the "
		"AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Lut2D_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    769
		    Type		    "edit"
		    Name		    "pfltTable"
		    Prompt		    "pfltTable (Matrix of z-coordinate values at vertices)"
		    Value		    "[-0.75 0.0 0.75; -0.5 0.0 0.5; -0.25 0.0 0.25]"
		  }
		  Object {
		    $ObjectID		    770
		    Type		    "edit"
		    Name		    "s32MidIdx"
		    Prompt		    "Middle index in the table pfltTable (zero-based indexing over all elements)"
		    Value		    "4"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Lut2D_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn1"
		  SID			  "339"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn2"
		  SID			  "340"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u32ShamOffset1"
		  SID			  "341"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u32ShamOffset2"
		  SID			  "342"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  5
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Lut2D_SF"
		  SID			  "343"
		  Ports			  [4, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Lut2D_SF_FLT"
		  Parameters		  "pfltTable,s32MidIdx"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "344"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    771
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "345"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  8
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    772
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Lut2D_BAM_FLT.mdl');text(10,75,'Two dimensional lookup table function');text(10,"
		    "60,'NXP 2020');text(10,45,'1.0');text(10,30,'23-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "346"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  6
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Lut2D_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u32ShamOffset2"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut2D_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "u32ShamOffset1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut2D_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltIn2"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut2D_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "fltIn1"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Lut2D_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Ramp_FLT"
	      SID		      "347"
	      Ports		      [1, 1]
	      Position		      [20, 1639, 220, 1691]
	      ZOrder		      21
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		773
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Ramp_FLT"
		Description		"Rate of change limiter - ramp function in single precision floating-point implementation. Refer to the"
		" AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltState'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltState'], 'Position');\n        orient = get_param( [gc"
		"b, '/fltState'], 'Orientation');\n        delete_block(       [gcb, '/fltState']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/fltState'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltRampUp']"
		", 'Position');\n        orient = get_param( [gcb, '/fltRampUp'], 'Orientation');\n        delete_block(       [gcb, "
		"'/fltRampUp']);\n        add_block('built-in/Ground', [gcb, '/fltRampUp'], 'Position', pos, 'Orientation', orient);\n"
		"\n        pos = get_param(    [gcb, '/fltRampDown'], 'Position');\n        orient = get_param( [gcb, '/fltRampDown']"
		", 'Orientation');\n        delete_block(       [gcb, '/fltRampDown']);\n        add_block('built-in/Ground', [gcb, '"
		"/fltRampDown'], 'Position', pos, 'Orientation', orient);\n\n\n        pos = get_param(    [gcb '/fltState_Out'], 'Po"
		"sition');\n        orient = get_param( [gcb '/fltState_Out'], 'Orientation');\n        delete_block(       [gcb '/fl"
		"tState_Out']);\n        add_block('built-in/Terminator', [gcb '/fltState_Out'], 'Position', pos, 'Orientation', orie"
		"nt);\n\n\n        set_param([gcb '/fltIn'], 'Port', '1');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n\n   "
		"     set_param(gcb,'MaskEnables',{'on','on','on'});\n\n        if (posblk(4) - posblk(2)) > 50\n          height = 5"
		"0;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\ne"
		"lse\n    % shown state variables\n    if strcmp(get_param([gcb '/fltState'], 'BlockType'), 'Ground')\n        posblk"
		" = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltState'], 'Position');\n        orient = get"
		"_param( [gcb, '/fltState'], 'Orientation');\n        delete_block(       [gcb, '/fltState']);\n        add_block('bu"
		"ilt-in/Inport', [gcb, '/fltState'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        "
		"pos = get_param(    [gcb, '/fltRampUp'], 'Position');\n        orient = get_param( [gcb, '/fltRampUp'], 'Orientation"
		"');\n        delete_block(       [gcb, '/fltRampUp']);\n        add_block('built-in/Inport', [gcb, '/fltRampUp'], 'P"
		"osition', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltRampDow"
		"n'], 'Position');\n        orient = get_param( [gcb, '/fltRampDown'], 'Orientation');\n        delete_block(       ["
		"gcb, '/fltRampDown']);\n        add_block('built-in/Inport', [gcb, '/fltRampDown'], 'Position', pos, 'Orientation', "
		"orient, 'OutDataTypeStr', 'single');\n\n\n        pos = get_param(    [gcb '/fltState_Out'], 'Position');\n        o"
		"rient = get_param( [gcb '/fltState_Out'], 'Orientation');\n        delete_block(       [gcb '/fltState_Out']);\n    "
		"    add_block('built-in/Outport', [gcb '/fltState_Out'], 'Position', pos, 'Orientation', orient);\n\n\n        set_p"
		"aram([gcb '/fltIn'], 'Port', '1');\n        set_param([gcb '/fltState'], 'Port', '2');\n        set_param([gcb '/flt"
		"RampUp'], 'Port', '3');\n        set_param([gcb '/fltRampDown'], 'Port', '4');\n\n        set_param([gcb '/fltOut'],"
		" 'Port', '1');\n        set_param([gcb '/fltState_Out'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on',"
		"'off','off'});\n\n        if (posblk(4) - posblk(2)) < 125\n          height = 125;\n          set_param(gcb,'Positi"
		"on',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_Ramp_FLT', 'horizontalAlignment', 'center');\nif sh"
		"owStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)'], 'ho"
		"rizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  3
		  Object {
		    $ObjectID		    774
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    775
		    Type		    "edit"
		    Name		    "fltRampUp"
		    Prompt		    "fltRampUp (Ramp up increment coefficient)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    776
		    Type		    "edit"
		    Name		    "fltRampDown"
		    Prompt		    "fltRampDown (Ramp decrement coefficient)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_Ramp_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"20"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "347:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Ramp_SF"
		  SID			  "347:4"
		  Ports			  [4, 2]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Ramp_SF_FLT"
		  Parameters		  "showStates,fltRampUp,fltRampDown"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "347:11"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  8
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    777
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "347:14"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  9
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    778
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Ramp_BAM_FLT.mdl');text(10,75,'Rate of change limiter - ramp function.');text(10"
		    ",60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltRampDown"
		  SID			  "347:19"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  12
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltRampUp"
		  SID			  "347:18"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  11
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltState"
		  SID			  "347:17"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  10
		}
		Block {
		  BlockType		  Terminator
		  Name			  "fltState_Out"
		  SID			  "347:20"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  13
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "347:9"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  6
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Ramp_SF"
		  SrcPort		  2
		  DstBlock		  "fltState_Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_Ramp_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltRampDown"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Ramp_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltRampUp"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Ramp_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "fltState"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Ramp_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Ramp_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Sign_FLT"
	      SID		      "348"
	      Ports		      [1, 1]
	      Position		      [20, 1710, 220, 1760]
	      ZOrder		      22
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		779
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Sign_FLT"
		Description		"Sign function in single precision floating-point implementation. Refer to the AMMCLIB User's Guide for"
		" further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Sign_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Sign_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "349"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Sign_SF"
		  SID			  "350"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Sign_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "351"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    780
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "352"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    781
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Sign_BAM_FLT.mdl');text(10,75,'Sign function.');text(10,60,'NXP 2020');text(10,4"
		    "5,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "353"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Sign_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Sign_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_SinCos_FLT"
	      SID		      "354"
	      Ports		      [1, 1]
	      Position		      [20, 1780, 230, 1830]
	      ZOrder		      23
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		782
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_SinCos_FLT"
		Description		"Calculation of sine and cosine of the same argument in single precision floating-point implementation."
		" Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_SinCos_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_SinCos_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "355"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_SinCos_SF"
		  SID			  "356"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_SinCos_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "357"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    783
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "358"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    784
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_SinCos_BAM_FLT.mdl');text(10,75,'Sine and cosine of the same argument');text(10,"
		    "60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "359"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_SinCos_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_SinCos_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Sin_FLT"
	      SID		      "360"
	      Ports		      [1, 1]
	      Position		      [20, 1850, 215, 1900]
	      ZOrder		      24
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		785
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Sin_FLT"
		Description		"Sine function in single precision floating-point implementation. Refer to the AMMCLIB User's Guide for"
		" further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Sin_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Sin_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "361"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Sin_SF"
		  SID			  "362"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Sin_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "363"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    786
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "364"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    787
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Sin_BAM_FLT.mdl');text(10,75,'Sine function');text(10,60,'NXP 2020');text(10,45,"
		    "'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "365"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Sin_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Sin_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Sqrt_FLT"
	      SID		      "366"
	      Ports		      [1, 1]
	      Position		      [20, 1920, 220, 1970]
	      ZOrder		      25
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		788
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Sqrt_FLT"
		Description		"Square root approximation in single precision floating-point implementation. Refer to the AMMCLIB User"
		"'s Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Sqrt_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Sqrt_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "367"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Sqrt_SF"
		  SID			  "368"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Sqrt_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "369"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    789
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "370"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    790
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Sqrt_BAM_FLT.mdl');text(10,75,'Square root approximation.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "371"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Sqrt_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Sqrt_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_Tan_FLT"
	      SID		      "372"
	      Ports		      [1, 1]
	      Position		      [20, 1990, 215, 2040]
	      ZOrder		      26
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		791
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_Tan_FLT"
		Description		"Tangent function in single precision floating-point implementation. Refer to the AMMCLIB User's Guide "
		"for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_Tan_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_Tan_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "373"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_Tan_SF"
		  SID			  "374"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_Tan_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "375"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    792
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "376"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    793
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_Tan_BAM_FLT.mdl');text(10,75,'Trigonometric tangent function');text(10,60,'NXP 2"
		    "020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "377"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_Tan_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_Tan_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_UpperLimit_FLT"
	      SID		      "378"
	      Ports		      [1, 1]
	      Position		      [20, 2060, 250, 2110]
	      ZOrder		      27
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		794
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_UpperLimit_FLT"
		Description		"Upper limit function in single precision floating-point implementation. Refer to the AMMCLIB User's Gu"
		"ide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltUpperLimit'], 'BlockType'), 'Inport')\n        posblk = get"
		"_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltUpperLimit'], 'Position');\n        orient = get_"
		"param( [gcb, '/fltUpperLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltUpperLimit']);\n        add_"
		"block('built-in/Ground', [gcb, '/fltUpperLimit'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param("
		"[gcb '/fltIn'], 'Port', '1');\n\n        set_param([gcb '/fltOut'], 'Port', '1');\n\n        set_param(gcb,'MaskEnab"
		"les',{'on','on'});\n\n        if (posblk(4) - posblk(2)) > 50\n          height = 50;\n          set_param(gcb,'Posi"
		"tion',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n"
		"    if strcmp(get_param([gcb '/fltUpperLimit'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position')"
		";\n\n        pos = get_param(    [gcb, '/fltUpperLimit'], 'Position');\n        orient = get_param( [gcb, '/fltUpper"
		"Limit'], 'Orientation');\n        delete_block(       [gcb, '/fltUpperLimit']);\n        add_block('built-in/Inport'"
		", [gcb, '/fltUpperLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n\n        set_p"
		"aram([gcb '/fltIn'], 'Port', '1');\n        set_param([gcb '/fltUpperLimit'], 'Port', '2');\n\n        set_param([gc"
		"b '/fltOut'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','off'});\n\n        if (posblk(4) - posblk("
		"2)) < 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+hei"
		"ght])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_UpperLimit_FLT', 'horizontalAlignment', 'center');\n"
		"if showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)']"
		", 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    795
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    796
		    Type		    "edit"
		    Name		    "fltUpperLimit"
		    Prompt		    "fltUpperLimit (Value determining the upper limit threshold)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_UpperLimit_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"14"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "378:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_UpperLimit_SF"
		  SID			  "378:4"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_UpperLimit_SF_FLT"
		  Parameters		  "showStates,fltUpperLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "378:8"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    797
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "378:11"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    798
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_UpperLimit_BAM_FLT.mdl');text(10,75,'Upper limit function.');text(10,60,'NXP 202"
		    "0');text(10,45,'1.0');text(10,30,'23-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltUpperLimit"
		  SID			  "378:14"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  7
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "378:7"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_UpperLimit_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltUpperLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_UpperLimit_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_UpperLimit_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_VLog10_FLT"
	      SID		      "379"
	      Ports		      [1, 1]
	      Position		      [20, 2130, 230, 2180]
	      ZOrder		      28
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		799
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_VLog10_FLT"
		Description		"Single precision floating-point implementation of the GFLIB_VLog10 function, which computes base-10 lo"
		"garithm of all elements of a vector. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_VLog10_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_VLog10_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "380"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_VLog10_SF"
		  SID			  "381"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_VLog10_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "382"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    800
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "383"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    801
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_VLog10_BAM_FLT.mdl');text(10,75,'Vector base-10 logarithm');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "384"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_VLog10_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_VLog10_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_VMin_FLT"
	      SID		      "385"
	      Ports		      [1, 1]
	      Position		      [20, 2200, 220, 2250]
	      ZOrder		      29
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		802
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_VMin_FLT"
		Description		"Single precision floating-point implementation of the GFLIB_VMin function, which finds the index of a "
		"vector minimum. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GFLIB_VMin_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GFLIB_VMin_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "386"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_VMin_SF"
		  SID			  "387"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GFLIB_VMin_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "388"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    803
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "389"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    804
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_VMin_BAM_FLT.mdl');text(10,75,'Vector minimum');text(10,60,'NXP 2020');text(10,4"
		    "5,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "IndexOfMinimum"
		  SID			  "390"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_VMin_SF"
		  SrcPort		  1
		  DstBlock		  "IndexOfMinimum"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_VMin_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GFLIB_VectorLimit_FLT"
	      SID		      "391"
	      Ports		      [1, 2]
	      Position		      [20, 2270, 255, 2345]
	      ZOrder		      30
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		805
		$ClassName		"Simulink.Mask"
		Type			"GFLIB_VectorLimit_FLT"
		Description		"Single precision floating-point implementation of the GFLIB_VectorLimit function which limits the magn"
		"itude of the input 2-element vector, keeping its direction unchanged. Refer to the AMMCLIB User's Guide for further "
		"details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltLimit'], 'BlockType'), 'Inport')\n        posblk = get_para"
		"m(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltLimit'], 'Position');\n        orient = get_param( [gc"
		"b, '/fltLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltLimit']);\n        add_block('built-in/Grou"
		"nd', [gcb, '/fltLimit'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param([gcb '/pIn'], 'Port', '1'"
		");\n\n        set_param([gcb '/bFlag'], 'Port', '1');\n        set_param([gcb '/pOut'], 'Port', '2');\n\n        set"
		"_param(gcb,'MaskEnables',{'on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n          height = 75;\n         "
		" set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % sh"
		"own state variables\n    if strcmp(get_param([gcb '/fltLimit'], 'BlockType'), 'Ground')\n        posblk = get_param("
		"gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltLimit'], 'Position');\n        orient = get_param( [gcb,"
		" '/fltLimit'], 'Orientation');\n        delete_block(       [gcb, '/fltLimit']);\n        add_block('built-in/Inport"
		"', [gcb, '/fltLimit'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n\n        set_param"
		"([gcb '/pIn'], 'Port', '1');\n        set_param([gcb '/fltLimit'], 'Port', '2');\n\n        set_param([gcb '/bFlag']"
		", 'Port', '1');\n        set_param([gcb '/pOut'], 'Port', '2');\n\n        set_param(gcb,'MaskEnables',{'on','off'})"
		";\n\n        if (posblk(4) - posblk(2)) < 75\n          height = 75;\n          set_param(gcb,'Position',[posblk(1),"
		" posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GFLIB_VectorLimit_FLT', 'horizontalAlignment', 'center');"
		"\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performance)"
		"'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    806
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    807
		    Type		    "edit"
		    Name		    "fltLimit"
		    Prompt		    "fltLimit (The maximum magnitude of the input 2-element vector)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GFLIB_VectorLimit_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"15"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "391:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GFLIB_VectorLimit_SF"
		  SID			  "391:4"
		  Ports			  [2, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GFLIB_VectorLimit_SF_FLT"
		  Parameters		  "showStates,fltLimit"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "391:9"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    808
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "391:12"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    809
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GFLIB_VectorLimit_BAM_FLT.mdl');text(10,75,'Vector Limit function.');text(10,60,'NXP 2"
		    "020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLimit"
		  SID			  "391:15"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  8
		}
		Block {
		  BlockType		  Outport
		  Name			  "bFlag"
		  SID			  "391:7"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "391:8"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GFLIB_VectorLimit_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GFLIB_VectorLimit_SF"
		  SrcPort		  1
		  DstBlock		  "bFlag"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltLimit"
		  SrcPort		  1
		  DstBlock		  "GFLIB_VectorLimit_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GFLIB_VectorLimit_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "GMCLIB"
      SID		      "392"
      Ports		      []
      Position		      [360, 0, 460, 100]
      ZOrder		      4
      RequestExecContextInheritance off
      System {
	Name			"GMCLIB"
	Location		[100, 100, 900, 600]
	Open			off
	PortBlocksUseCompactNotation off
	SetExecutionDomain	off
	ExecutionDomainType	"Deduce"
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	SimulinkSubDomain	"Simulink"
	Block {
	  BlockType		  SubSystem
	  Name			  "F16"
	  SID			  "393"
	  Ports			  []
	  Position		  [0, 0, 100, 100]
	  ZOrder		  1
	  RequestExecContextInheritance	off
	  System {
	    Name		    "F16"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_BetaProjection3Ph_F16"
	      SID		      "394"
	      Ports		      [1, 1]
	      Position		      [20, 0, 290, 50]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		810
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_BetaProjection3Ph_F16"
		Description		"3-phase Beta-projection transformation in 16-bit fixed-point fractional implementation. Refer to the A"
		"MMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_BetaProjection3Ph_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_BetaProjection3Ph_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "395"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_3Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_BetaProjection3Ph_SF"
		  SID			  "396"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_BetaProjection3Ph_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "397"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    811
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "398"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    812
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_BetaProjection3Ph_BAM_F16.mdl');text(10,75,'3-phase Beta-projection transformat"
		    "ion.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "399"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_BetaProjection3Ph_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_BetaProjection3Ph_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_BetaProjection_F16"
	      SID		      "400"
	      Ports		      [1, 1]
	      Position		      [20, 70, 275, 120]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		813
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_BetaProjection_F16"
		Description		"Beta Projection transformation 3ph -> 2ph in 16-bit fixed-point fractional implementation. Refer to th"
		"e AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_BetaProjection_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_BetaProjection_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "401"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_3Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_BetaProjection_SF"
		  SID			  "402"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_BetaProjection_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "403"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    814
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "404"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    815
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_BetaProjection_BAM_F16.mdl');text(10,75,'Beta Projection transformation.');text"
		    "(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "405"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_BetaProjection_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_BetaProjection_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_ClarkInv_F16"
	      SID		      "406"
	      Ports		      [1, 1]
	      Position		      [20, 140, 245, 190]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		816
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_ClarkInv_F16"
		Description		"Inverse Clarke transformation 2ph -> 3ph in 16-bit fixed-point fractional implementation. Refer to the"
		" AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_ClarkInv_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_ClarkInv_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "407"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_ClarkInv_SF"
		  SID			  "408"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_ClarkInv_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "409"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    817
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "410"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    818
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_ClarkInv_BAM_F16.mdl');text(10,75,'Inverse Clarke transformation');text(10,60,'"
		    "NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "411"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_ClarkInv_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ClarkInv_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_Clark_F16"
	      SID		      "412"
	      Ports		      [1, 1]
	      Position		      [20, 210, 230, 260]
	      ZOrder		      5
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		819
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_Clark_F16"
		Description		"Clarke transformation 3ph -> 2ph in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB"
		" User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_Clark_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_Clark_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "413"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_3Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_Clark_SF"
		  SID			  "414"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_Clark_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "415"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    820
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "416"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    821
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_Clark_BAM_F16.mdl');text(10,75,'Clarke transformation.');text(10,60,'NXP 2020')"
		    ";text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "417"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_Clark_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_Clark_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_DecouplingPMSM_F16"
	      SID		      "418"
	      Ports		      [3, 1]
	      Position		      [20, 278, 275, 382]
	      ZOrder		      6
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		822
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_DecouplingPMSM_F16"
		Description		"Decoupling of d and q axis of PMSM model in 16-bit fixed-point fractional implementation. Refer to the"
		" AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16Kd'], 'BlockType'), 'Inport')\n        posblk = get_param(g"
		"cb, 'Position');\n\n        pos = get_param(    [gcb, '/f16Kd'], 'Position');\n        orient = get_param( [gcb, '/f"
		"16Kd'], 'Orientation');\n        delete_block(       [gcb, '/f16Kd']);\n        add_block('built-in/Ground', [gcb, '"
		"/f16Kd'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16KdShift'], 'Position');"
		"\n        orient = get_param( [gcb, '/s16KdShift'], 'Orientation');\n        delete_block(       [gcb, '/s16KdShift'"
		"]);\n        add_block('built-in/Ground', [gcb, '/s16KdShift'], 'Position', pos, 'Orientation', orient);\n\n        "
		"pos = get_param(    [gcb, '/f16Kq'], 'Position');\n        orient = get_param( [gcb, '/f16Kq'], 'Orientation');\n   "
		"     delete_block(       [gcb, '/f16Kq']);\n        add_block('built-in/Ground', [gcb, '/f16Kq'], 'Position', pos, '"
		"Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16KqShift'], 'Position');\n        orient = get_param"
		"( [gcb, '/s16KqShift'], 'Orientation');\n        delete_block(       [gcb, '/s16KqShift']);\n        add_block('buil"
		"t-in/Ground', [gcb, '/s16KqShift'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param([gcb '/pUdq'],"
		" 'Port', '1');\n        set_param([gcb '/pIdq'], 'Port', '2');\n        set_param([gcb '/f16AngularVel'], 'Port', '3"
		"');\n\n        set_param([gcb '/pUdqDec'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on'"
		",'on'});\n\n        if (posblk(4) - posblk(2)) > 100\n          height = 100;\n          set_param(gcb,'Position',[p"
		"osblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if "
		"strcmp(get_param([gcb '/f16Kd'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        po"
		"s = get_param(    [gcb, '/f16Kd'], 'Position');\n        orient = get_param( [gcb, '/f16Kd'], 'Orientation');\n     "
		"   delete_block(       [gcb, '/f16Kd']);\n        add_block('built-in/Inport', [gcb, '/f16Kd'], 'Position', pos, 'Or"
		"ientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/s16KdShift'], 'Position');\n "
		"       orient = get_param( [gcb, '/s16KdShift'], 'Orientation');\n        delete_block(       [gcb, '/s16KdShift']);"
		"\n        add_block('built-in/Inport', [gcb, '/s16KdShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr"
		"', 'int16');\n\n        pos = get_param(    [gcb, '/f16Kq'], 'Position');\n        orient = get_param( [gcb, '/f16Kq"
		"'], 'Orientation');\n        delete_block(       [gcb, '/f16Kq']);\n        add_block('built-in/Inport', [gcb, '/f16"
		"Kq'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int16');\n\n        pos = get_param(    [gcb, '/s16"
		"KqShift'], 'Position');\n        orient = get_param( [gcb, '/s16KqShift'], 'Orientation');\n        delete_block(   "
		"    [gcb, '/s16KqShift']);\n        add_block('built-in/Inport', [gcb, '/s16KqShift'], 'Position', pos, 'Orientation"
		"', orient, 'OutDataTypeStr', 'int16');\n\n\n\n        set_param([gcb '/pUdq'], 'Port', '1');\n        set_param([gcb"
		" '/pIdq'], 'Port', '2');\n        set_param([gcb '/f16AngularVel'], 'Port', '3');\n        set_param([gcb '/f16Kd'],"
		" 'Port', '4');\n        set_param([gcb '/s16KdShift'], 'Port', '5');\n        set_param([gcb '/f16Kq'], 'Port', '6')"
		";\n        set_param([gcb '/s16KqShift'], 'Port', '7');\n\n        set_param([gcb '/pUdqDec'], 'Port', '1');\n\n    "
		"    set_param(gcb,'MaskEnables',{'on','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 200\n      "
		"    height = 200;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        "
		"end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GMCLIB_DecouplingPMSM_F16', 'horizontalAlignment', 'cente"
		"r');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performa"
		"nce)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  5
		  Object {
		    $ObjectID		    823
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off','off"
		    "','off'});\nend"
		  }
		  Object {
		    $ObjectID		    824
		    Type		    "edit"
		    Name		    "f16Kd"
		    Prompt		    "f16Kd (Coefficient k_d)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    825
		    Type		    "edit"
		    Name		    "s16KdShift"
		    Prompt		    "s16KdShift (Scaling coefficient k_d_shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    826
		    Type		    "edit"
		    Name		    "f16Kq"
		    Prompt		    "f16Kq (Coefficient k_q)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    827
		    Type		    "edit"
		    Name		    "s16KqShift"
		    Prompt		    "s16KqShift (Scaling coefficient k_q_shift)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GMCLIB_DecouplingPMSM_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"22"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pUdq"
		  SID			  "418:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIdq"
		  SID			  "418:6"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16AngularVel"
		  SID			  "418:7"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_DecouplingPMSM_SF"
		  SID			  "418:4"
		  Ports			  [7, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_DecouplingPMSM_SF_F16"
		  Parameters		  "showStates,f16Kd,s16KdShift,f16Kq,s16KqShift"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "418:13"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  10
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    828
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "418:16"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  11
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    829
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_DecouplingPMSM_BAM_F16.mdl');text(10,75,'Decoupling of d and q axis of PMSM mod"
		    "el.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'24-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16Kd"
		  SID			  "418:19"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  12
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16Kq"
		  SID			  "418:21"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  14
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16KdShift"
		  SID			  "418:20"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  13
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16KqShift"
		  SID			  "418:22"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  15
		}
		Block {
		  BlockType		  Outport
		  Name			  "pUdqDec"
		  SID			  "418:12"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  9
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_DecouplingPMSM_SF"
		  SrcPort		  1
		  DstBlock		  "pUdqDec"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "s16KqShift"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16Kq"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "s16KdShift"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f16Kd"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f16AngularVel"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "pIdq"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "pUdq"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_ElimDcBusRip_F16"
	      SID		      "419"
	      Ports		      [2, 1]
	      Position		      [20, 405, 265, 480]
	      ZOrder		      7
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		830
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_ElimDcBusRip_F16"
		Description		"DC Bus voltage ripple elimination function in 16-bit fixed-point fractional implementation. Refer to t"
		"he AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f16ModIndex'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16ModIndex'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f16ModIndex'], 'Orientation');\n        delete_block(       [gcb, '/f16ModIndex']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/f16ModIndex'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param([gcb '/pIn"
		"'], 'Port', '1');\n        set_param([gcb '/f16ArgDcBusMsr'], 'Port', '2');\n\n        set_param([gcb '/pOut'], 'Por"
		"t', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n         "
		" height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n"
		"    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f16ModIndex'], 'BlockType'), 'Ground')\n "
		"       posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f16ModIndex'], 'Position');\n    "
		"    orient = get_param( [gcb, '/f16ModIndex'], 'Orientation');\n        delete_block(       [gcb, '/f16ModIndex']);\n"
		"        add_block('built-in/Inport', [gcb, '/f16ModIndex'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr'"
		", 'int16');\n\n\n\n        set_param([gcb '/pIn'], 'Port', '1');\n        set_param([gcb '/f16ArgDcBusMsr'], 'Port',"
		" '2');\n        set_param([gcb '/f16ModIndex'], 'Port', '3');\n\n        set_param([gcb '/pOut'], 'Port', '1');\n\n "
		"       set_param(gcb,'MaskEnables',{'on','off'});\n\n        if (posblk(4) - posblk(2)) < 100\n          height = 10"
		"0;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\ne"
		"nd\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GMCLIB_ElimDcBusRip_F16', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    831
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    832
		    Type		    "edit"
		    Name		    "f16ModIndex"
		    Prompt		    "f16ModIndex (Inverse Modulation Index)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GMCLIB_ElimDcBusRip_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"15"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "419:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16ArgDcBusMsr"
		  SID			  "419:6"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_ElimDcBusRip_SF"
		  SID			  "419:4"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_ElimDcBusRip_SF_F16"
		  Parameters		  "showStates,f16ModIndex"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "419:9"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    833
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "419:12"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    834
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_ElimDcBusRip_BAM_F16.mdl');text(10,75,'DC Bus voltage ripple elimination functi"
		    "on.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f16ModIndex"
		  SID			  "419:15"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  8
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "419:8"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_ElimDcBusRip_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16ModIndex"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ElimDcBusRip_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16ArgDcBusMsr"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ElimDcBusRip_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ElimDcBusRip_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_ParkInv_F16"
	      SID		      "420"
	      Ports		      [2, 1]
	      Position		      [20, 500, 240, 575]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		835
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_ParkInv_F16"
		Description		"Inverse Park transformation 2ph rotational -> 2ph stationary in 16-bit fixed-point fractional implemen"
		"tation. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_ParkInv_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_ParkInv_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pInAngle"
		  SID			  "421"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "422"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_ParkInv_SF"
		  SID			  "423"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_ParkInv_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "424"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    836
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "425"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    837
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_ParkInv_BAM_F16.mdl');text(10,75,'Inverse Park transformation.');text(10,60,'NX"
		    "P 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "426"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_ParkInv_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ParkInv_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pInAngle"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ParkInv_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_Park_F16"
	      SID		      "427"
	      Ports		      [2, 1]
	      Position		      [20, 595, 225, 670]
	      ZOrder		      9
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		838
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_Park_F16"
		Description		"Park transformation 2ph stationary -> 2ph rotational in 16-bit fixed-point fractional implementation. "
		"Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_Park_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_Park_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pInAngle"
		  SID			  "428"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "429"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_Park_SF"
		  SID			  "430"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_Park_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "431"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    839
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "432"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    840
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_Park_BAM_F16.mdl');text(10,75,'Park transformation.');text(10,60,'NXP 2020');te"
		    "xt(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "433"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_Park_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_Park_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pInAngle"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_Park_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_PwmIct_F16"
	      SID		      "434"
	      Ports		      [1, 2]
	      Position		      [20, 690, 235, 765]
	      ZOrder		      10
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		841
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_PwmIct_F16"
		Description		"General Sinusoidal PWM in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Gu"
		"ide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_PwmIct_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_PwmIct_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "435"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_PwmIct_SF"
		  SID			  "436"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_PwmIct_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "437"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    842
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "438"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    843
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_PwmIct_BAM_F16.mdl');text(10,75,'General Sinusoidal PWM.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16Sector"
		  SID			  "439"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "440"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_PwmIct_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_PwmIct_SF"
		  SrcPort		  1
		  DstBlock		  "u16Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_PwmIct_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_SvmSci_F16"
	      SID		      "441"
	      Ports		      [1, 2]
	      Position		      [20, 785, 235, 860]
	      ZOrder		      11
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		844
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_SvmSci_F16"
		Description		"General Sinusoidal Modulation with Injection of Third Harmonic in 16-bit fixed-point fractional implem"
		"entation. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_SvmSci_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_SvmSci_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "442"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_SvmSci_SF"
		  SID			  "443"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_SvmSci_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "444"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    845
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "445"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    846
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_SvmSci_BAM_F16.mdl');text(10,75,'General Sinusoidal Modulation with Injection o"
		    "f Third Harmonic.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16Sector"
		  SID			  "446"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "447"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_SvmSci_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_SvmSci_SF"
		  SrcPort		  1
		  DstBlock		  "u16Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_SvmSci_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_SvmStd_F16"
	      SID		      "448"
	      Ports		      [1, 2]
	      Position		      [20, 880, 235, 955]
	      ZOrder		      12
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		847
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_SvmStd_F16"
		Description		"Standard Space Vector Modulation in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB"
		" User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_SvmStd_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_SvmStd_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "449"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_SvmStd_SF"
		  SID			  "450"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_SvmStd_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "451"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    848
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "452"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    849
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_SvmStd_BAM_F16.mdl');text(10,75,'Standard Space Vector Modulation.');text(10,60"
		    ",'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16Sector"
		  SID			  "453"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "454"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_SvmStd_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_SvmStd_SF"
		  SrcPort		  1
		  DstBlock		  "u16Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_SvmStd_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_SvmU0n_F16"
	      SID		      "455"
	      Ports		      [1, 2]
	      Position		      [20, 975, 235, 1050]
	      ZOrder		      13
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		850
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_SvmU0n_F16"
		Description		"Special Space Vector Modulation with O_000 Nulls in 16-bit fixed-point fractional implementation. Refe"
		"r to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_SvmU0n_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_SvmU0n_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "456"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_SvmU0n_SF"
		  SID			  "457"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_SvmU0n_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "458"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    851
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "459"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    852
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_SvmU0n_BAM_F16.mdl');text(10,75,'Special Space Vector Modulation with O_000 Nul"
		    "ls.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16Sector"
		  SID			  "460"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "461"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_SvmU0n_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_SvmU0n_SF"
		  SrcPort		  1
		  DstBlock		  "u16Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_SvmU0n_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_SvmU7n_F16"
	      SID		      "462"
	      Ports		      [1, 2]
	      Position		      [20, 1070, 235, 1145]
	      ZOrder		      14
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		853
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_SvmU7n_F16"
		Description		"Special Space Vector Modulation with O_111 Ones in 16-bit fixed-point fractional implementation. Refer"
		" to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_SvmU7n_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_SvmU7n_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "463"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F16"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_SvmU7n_SF"
		  SID			  "464"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_SvmU7n_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "465"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    854
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "466"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    855
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_SvmU7n_BAM_F16.mdl');text(10,75,'Special Space Vector Modulation with O_111 One"
		    "s.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16Sector"
		  SID			  "467"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "468"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_SvmU7n_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_SvmU7n_SF"
		  SrcPort		  1
		  DstBlock		  "u16Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_SvmU7n_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "F32"
	  SID			  "469"
	  Ports			  []
	  Position		  [120, 0, 220, 100]
	  ZOrder		  2
	  RequestExecContextInheritance	off
	  System {
	    Name		    "F32"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_BetaProjection3Ph_F32"
	      SID		      "470"
	      Ports		      [1, 1]
	      Position		      [20, 0, 290, 50]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		856
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_BetaProjection3Ph_F32"
		Description		"3-phase Beta-projection transformation in 32-bit fixed-point fractional implementation. Refer to the A"
		"MMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_BetaProjection3Ph_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_BetaProjection3Ph_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "471"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_3Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_BetaProjection3Ph_SF"
		  SID			  "472"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_BetaProjection3Ph_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "473"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    857
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "474"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    858
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_BetaProjection3Ph_BAM_F32.mdl');text(10,75,'3-phase Beta-projection transformat"
		    "ion.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "475"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_BetaProjection3Ph_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_BetaProjection3Ph_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_BetaProjection_F32"
	      SID		      "476"
	      Ports		      [1, 1]
	      Position		      [20, 70, 275, 120]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		859
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_BetaProjection_F32"
		Description		"Beta Projection transformation 3ph -> 2ph in 32-bit fixed-point fractional implementation. Refer to th"
		"e AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_BetaProjection_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_BetaProjection_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "477"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_3Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_BetaProjection_SF"
		  SID			  "478"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_BetaProjection_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "479"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    860
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "480"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    861
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_BetaProjection_BAM_F32.mdl');text(10,75,'Beta Projection transformation.');text"
		    "(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "481"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_BetaProjection_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_BetaProjection_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_ClarkInv_F32"
	      SID		      "482"
	      Ports		      [1, 1]
	      Position		      [20, 140, 245, 190]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		862
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_ClarkInv_F32"
		Description		"Inverse Clarke transformation 2ph -> 3ph in 32-bit fixed-point fractional implementation. Refer to the"
		" AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_ClarkInv_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_ClarkInv_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "483"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_ClarkInv_SF"
		  SID			  "484"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_ClarkInv_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "485"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    863
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "486"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    864
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_ClarkInv_BAM_F32.mdl');text(10,75,'Inverse Clarke transformation');text(10,60,'"
		    "NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "487"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_ClarkInv_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ClarkInv_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_Clark_F32"
	      SID		      "488"
	      Ports		      [1, 1]
	      Position		      [20, 210, 230, 260]
	      ZOrder		      5
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		865
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_Clark_F32"
		Description		"Clarke transformation 3ph -> 2ph in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB"
		" User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_Clark_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_Clark_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "489"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_3Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_Clark_SF"
		  SID			  "490"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_Clark_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "491"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    866
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "492"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    867
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_Clark_BAM_F32.mdl');text(10,75,'Clarke transformation.');text(10,60,'NXP 2020')"
		    ";text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "493"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_Clark_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_Clark_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_DecouplingPMSM_F32"
	      SID		      "494"
	      Ports		      [3, 1]
	      Position		      [20, 278, 275, 382]
	      ZOrder		      6
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		868
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_DecouplingPMSM_F32"
		Description		"Decoupling of d and q axis of PMSM model in 32-bit fixed-point fractional implementation. Refer to the"
		" AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32Kd'], 'BlockType'), 'Inport')\n        posblk = get_param(g"
		"cb, 'Position');\n\n        pos = get_param(    [gcb, '/f32Kd'], 'Position');\n        orient = get_param( [gcb, '/f"
		"32Kd'], 'Orientation');\n        delete_block(       [gcb, '/f32Kd']);\n        add_block('built-in/Ground', [gcb, '"
		"/f32Kd'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16KdShift'], 'Position');"
		"\n        orient = get_param( [gcb, '/s16KdShift'], 'Orientation');\n        delete_block(       [gcb, '/s16KdShift'"
		"]);\n        add_block('built-in/Ground', [gcb, '/s16KdShift'], 'Position', pos, 'Orientation', orient);\n\n        "
		"pos = get_param(    [gcb, '/f32Kq'], 'Position');\n        orient = get_param( [gcb, '/f32Kq'], 'Orientation');\n   "
		"     delete_block(       [gcb, '/f32Kq']);\n        add_block('built-in/Ground', [gcb, '/f32Kq'], 'Position', pos, '"
		"Orientation', orient);\n\n        pos = get_param(    [gcb, '/s16KqShift'], 'Position');\n        orient = get_param"
		"( [gcb, '/s16KqShift'], 'Orientation');\n        delete_block(       [gcb, '/s16KqShift']);\n        add_block('buil"
		"t-in/Ground', [gcb, '/s16KqShift'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param([gcb '/pUdq'],"
		" 'Port', '1');\n        set_param([gcb '/pIdq'], 'Port', '2');\n        set_param([gcb '/f32AngularVel'], 'Port', '3"
		"');\n\n        set_param([gcb '/pUdqDec'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','on','on'"
		",'on'});\n\n        if (posblk(4) - posblk(2)) > 100\n          height = 100;\n          set_param(gcb,'Position',[p"
		"osblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if "
		"strcmp(get_param([gcb '/f32Kd'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        po"
		"s = get_param(    [gcb, '/f32Kd'], 'Position');\n        orient = get_param( [gcb, '/f32Kd'], 'Orientation');\n     "
		"   delete_block(       [gcb, '/f32Kd']);\n        add_block('built-in/Inport', [gcb, '/f32Kd'], 'Position', pos, 'Or"
		"ientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/s16KdShift'], 'Position');\n "
		"       orient = get_param( [gcb, '/s16KdShift'], 'Orientation');\n        delete_block(       [gcb, '/s16KdShift']);"
		"\n        add_block('built-in/Inport', [gcb, '/s16KdShift'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr"
		"', 'int16');\n\n        pos = get_param(    [gcb, '/f32Kq'], 'Position');\n        orient = get_param( [gcb, '/f32Kq"
		"'], 'Orientation');\n        delete_block(       [gcb, '/f32Kq']);\n        add_block('built-in/Inport', [gcb, '/f32"
		"Kq'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'int32');\n\n        pos = get_param(    [gcb, '/s16"
		"KqShift'], 'Position');\n        orient = get_param( [gcb, '/s16KqShift'], 'Orientation');\n        delete_block(   "
		"    [gcb, '/s16KqShift']);\n        add_block('built-in/Inport', [gcb, '/s16KqShift'], 'Position', pos, 'Orientation"
		"', orient, 'OutDataTypeStr', 'int16');\n\n\n\n        set_param([gcb '/pUdq'], 'Port', '1');\n        set_param([gcb"
		" '/pIdq'], 'Port', '2');\n        set_param([gcb '/f32AngularVel'], 'Port', '3');\n        set_param([gcb '/f32Kd'],"
		" 'Port', '4');\n        set_param([gcb '/s16KdShift'], 'Port', '5');\n        set_param([gcb '/f32Kq'], 'Port', '6')"
		";\n        set_param([gcb '/s16KqShift'], 'Port', '7');\n\n        set_param([gcb '/pUdqDec'], 'Port', '1');\n\n    "
		"    set_param(gcb,'MaskEnables',{'on','off','off','off','off'});\n\n        if (posblk(4) - posblk(2)) < 200\n      "
		"    height = 200;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        "
		"end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GMCLIB_DecouplingPMSM_F32', 'horizontalAlignment', 'cente"
		"r');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performa"
		"nce)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  5
		  Object {
		    $ObjectID		    869
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off','off"
		    "','off'});\nend"
		  }
		  Object {
		    $ObjectID		    870
		    Type		    "edit"
		    Name		    "f32Kd"
		    Prompt		    "f32Kd (Coefficient k_d)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    871
		    Type		    "edit"
		    Name		    "s16KdShift"
		    Prompt		    "s16KdShift (Scaling coefficient k_d_shift)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    872
		    Type		    "edit"
		    Name		    "f32Kq"
		    Prompt		    "f32Kq (Coefficient k_q)"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    873
		    Type		    "edit"
		    Name		    "s16KqShift"
		    Prompt		    "s16KqShift (Scaling coefficient k_q_shift)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GMCLIB_DecouplingPMSM_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"22"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pUdq"
		  SID			  "494:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIdq"
		  SID			  "494:6"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32AngularVel"
		  SID			  "494:7"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_DecouplingPMSM_SF"
		  SID			  "494:4"
		  Ports			  [7, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_DecouplingPMSM_SF_F32"
		  Parameters		  "showStates,f32Kd,s16KdShift,f32Kq,s16KqShift"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "494:13"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  10
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    874
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "494:16"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  11
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    875
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_DecouplingPMSM_BAM_F32.mdl');text(10,75,'Decoupling of d and q axis of PMSM mod"
		    "el.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'24-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Kd"
		  SID			  "494:19"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  12
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32Kq"
		  SID			  "494:21"
		  Position		  [40, 398, 70, 412]
		  ZOrder		  14
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16KdShift"
		  SID			  "494:20"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  13
		}
		Block {
		  BlockType		  Ground
		  Name			  "s16KqShift"
		  SID			  "494:22"
		  Position		  [40, 438, 70, 452]
		  ZOrder		  15
		}
		Block {
		  BlockType		  Outport
		  Name			  "pUdqDec"
		  SID			  "494:12"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  9
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_DecouplingPMSM_SF"
		  SrcPort		  1
		  DstBlock		  "pUdqDec"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "s16KqShift"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  7
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32Kq"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  6
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "s16KdShift"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32Kd"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "f32AngularVel"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  7
		  SrcBlock		  "pIdq"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  8
		  SrcBlock		  "pUdq"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_ElimDcBusRip_F32"
	      SID		      "495"
	      Ports		      [2, 1]
	      Position		      [20, 405, 265, 480]
	      ZOrder		      7
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		876
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_ElimDcBusRip_F32"
		Description		"DC Bus voltage ripple elimination function in 32-bit fixed-point fractional implementation. Refer to t"
		"he AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/f32ModIndex'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32ModIndex'], 'Position');\n        orient = get_para"
		"m( [gcb, '/f32ModIndex'], 'Orientation');\n        delete_block(       [gcb, '/f32ModIndex']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/f32ModIndex'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param([gcb '/pIn"
		"'], 'Port', '1');\n        set_param([gcb '/f32ArgDcBusMsr'], 'Port', '2');\n\n        set_param([gcb '/pOut'], 'Por"
		"t', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n         "
		" height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n"
		"    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/f32ModIndex'], 'BlockType'), 'Ground')\n "
		"       posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/f32ModIndex'], 'Position');\n    "
		"    orient = get_param( [gcb, '/f32ModIndex'], 'Orientation');\n        delete_block(       [gcb, '/f32ModIndex']);\n"
		"        add_block('built-in/Inport', [gcb, '/f32ModIndex'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr'"
		", 'int32');\n\n\n\n        set_param([gcb '/pIn'], 'Port', '1');\n        set_param([gcb '/f32ArgDcBusMsr'], 'Port',"
		" '2');\n        set_param([gcb '/f32ModIndex'], 'Port', '3');\n\n        set_param([gcb '/pOut'], 'Port', '1');\n\n "
		"       set_param(gcb,'MaskEnables',{'on','off'});\n\n        if (posblk(4) - posblk(2)) < 100\n          height = 10"
		"0;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\ne"
		"nd\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GMCLIB_ElimDcBusRip_F32', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    877
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    878
		    Type		    "edit"
		    Name		    "f32ModIndex"
		    Prompt		    "f32ModIndex (Inverse Modulation Index)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GMCLIB_ElimDcBusRip_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"15"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "495:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32ArgDcBusMsr"
		  SID			  "495:6"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_ElimDcBusRip_SF"
		  SID			  "495:4"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_ElimDcBusRip_SF_F32"
		  Parameters		  "showStates,f32ModIndex"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "495:9"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    879
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "495:12"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    880
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_ElimDcBusRip_BAM_F32.mdl');text(10,75,'DC Bus voltage ripple elimination functi"
		    "on.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "f32ModIndex"
		  SID			  "495:15"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  8
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "495:8"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_ElimDcBusRip_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32ModIndex"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ElimDcBusRip_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32ArgDcBusMsr"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ElimDcBusRip_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ElimDcBusRip_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_ParkInv_F32"
	      SID		      "496"
	      Ports		      [2, 1]
	      Position		      [20, 500, 240, 575]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		881
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_ParkInv_F32"
		Description		"Inverse Park transformation 2ph rotational -> 2ph stationary in 32-bit fixed-point fractional implemen"
		"tation. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_ParkInv_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_ParkInv_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pInAngle"
		  SID			  "497"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "498"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_ParkInv_SF"
		  SID			  "499"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_ParkInv_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "500"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    882
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "501"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    883
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_ParkInv_BAM_F32.mdl');text(10,75,'Inverse Park transformation.');text(10,60,'NX"
		    "P 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "502"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_ParkInv_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ParkInv_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pInAngle"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ParkInv_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_Park_F32"
	      SID		      "503"
	      Ports		      [2, 1]
	      Position		      [20, 595, 225, 670]
	      ZOrder		      9
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		884
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_Park_F32"
		Description		"Park transformation 2ph stationary -> 2ph rotational in 32-bit fixed-point fractional implementation. "
		"Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_Park_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_Park_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pInAngle"
		  SID			  "504"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "505"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_Park_SF"
		  SID			  "506"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_Park_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "507"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    885
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "508"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    886
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_Park_BAM_F32.mdl');text(10,75,'Park transformation.');text(10,60,'NXP 2020');te"
		    "xt(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "509"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_Park_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_Park_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pInAngle"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_Park_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_PwmIct_F32"
	      SID		      "510"
	      Ports		      [1, 2]
	      Position		      [20, 690, 235, 765]
	      ZOrder		      10
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		887
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_PwmIct_F32"
		Description		"General Sinusoidal PWM in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Gu"
		"ide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_PwmIct_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_PwmIct_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "511"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_PwmIct_SF"
		  SID			  "512"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_PwmIct_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "513"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    888
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "514"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    889
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_PwmIct_BAM_F32.mdl');text(10,75,'General Sinusoidal PWM.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u32Sector"
		  SID			  "515"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "516"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_PwmIct_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_PwmIct_SF"
		  SrcPort		  1
		  DstBlock		  "u32Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_PwmIct_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_SvmSci_F32"
	      SID		      "517"
	      Ports		      [1, 2]
	      Position		      [20, 785, 235, 860]
	      ZOrder		      11
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		890
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_SvmSci_F32"
		Description		"General Sinusoidal Modulation with Injection of Third Harmonic in 32-bit fixed-point fractional implem"
		"entation. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_SvmSci_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_SvmSci_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "518"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_SvmSci_SF"
		  SID			  "519"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_SvmSci_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "520"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    891
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "521"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    892
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_SvmSci_BAM_F32.mdl');text(10,75,'General Sinusoidal Modulation with Injection o"
		    "f Third Harmonic.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u32Sector"
		  SID			  "522"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "523"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_SvmSci_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_SvmSci_SF"
		  SrcPort		  1
		  DstBlock		  "u32Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_SvmSci_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_SvmStd_F32"
	      SID		      "524"
	      Ports		      [1, 2]
	      Position		      [20, 880, 235, 955]
	      ZOrder		      12
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		893
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_SvmStd_F32"
		Description		"Standard Space Vector Modulation in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB"
		" User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_SvmStd_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_SvmStd_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "525"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_SvmStd_SF"
		  SID			  "526"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_SvmStd_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "527"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    894
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "528"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    895
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_SvmStd_BAM_F32.mdl');text(10,75,'Standard Space Vector Modulation.');text(10,60"
		    ",'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u32Sector"
		  SID			  "529"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "530"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_SvmStd_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_SvmStd_SF"
		  SrcPort		  1
		  DstBlock		  "u32Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_SvmStd_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_SvmU0n_F32"
	      SID		      "531"
	      Ports		      [1, 2]
	      Position		      [20, 975, 235, 1050]
	      ZOrder		      13
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		896
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_SvmU0n_F32"
		Description		"Special Space Vector Modulation with O_000 Nulls in 32-bit fixed-point fractional implementation. Refe"
		"r to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_SvmU0n_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_SvmU0n_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "532"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_SvmU0n_SF"
		  SID			  "533"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_SvmU0n_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "534"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    897
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "535"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    898
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_SvmU0n_BAM_F32.mdl');text(10,75,'Special Space Vector Modulation with O_000 Nul"
		    "ls.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u32Sector"
		  SID			  "536"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "537"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_SvmU0n_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_SvmU0n_SF"
		  SrcPort		  1
		  DstBlock		  "u32Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_SvmU0n_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_SvmU7n_F32"
	      SID		      "538"
	      Ports		      [1, 2]
	      Position		      [20, 1070, 235, 1145]
	      ZOrder		      14
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		899
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_SvmU7n_F32"
		Description		"Special Space Vector Modulation with O_111 Ones in 32-bit fixed-point fractional implementation. Refer"
		" to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_SvmU7n_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_SvmU7n_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "539"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_F32"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_SvmU7n_SF"
		  SID			  "540"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_SvmU7n_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "541"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    900
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "542"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    901
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_SvmU7n_BAM_F32.mdl');text(10,75,'Special Space Vector Modulation with O_111 One"
		    "s.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u32Sector"
		  SID			  "543"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "544"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_SvmU7n_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_SvmU7n_SF"
		  SrcPort		  1
		  DstBlock		  "u32Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_SvmU7n_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "FLT"
	  SID			  "545"
	  Ports			  []
	  Position		  [240, 0, 340, 100]
	  ZOrder		  3
	  RequestExecContextInheritance	off
	  System {
	    Name		    "FLT"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_BetaProjection3Ph_FLT"
	      SID		      "546"
	      Ports		      [1, 1]
	      Position		      [20, 0, 290, 50]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		902
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_BetaProjection3Ph_FLT"
		Description		"3-phase Beta-projection transformation in single precision floating-point implementation. Refer to the"
		" AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_BetaProjection3Ph_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_BetaProjection3Ph_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "547"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_3Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_BetaProjection3Ph_SF"
		  SID			  "548"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_BetaProjection3Ph_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "549"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    903
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "550"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    904
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_BetaProjection3Ph_BAM_FLT.mdl');text(10,75,'Beta Projection transformation.');t"
		    "ext(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "551"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_BetaProjection3Ph_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_BetaProjection3Ph_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_BetaProjection_FLT"
	      SID		      "552"
	      Ports		      [1, 1]
	      Position		      [20, 70, 275, 120]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		905
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_BetaProjection_FLT"
		Description		"Beta Projection transformation 3ph -> 2ph in single precision floating-point implementation. Refer to "
		"the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_BetaProjection_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_BetaProjection_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "553"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_3Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_BetaProjection_SF"
		  SID			  "554"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_BetaProjection_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "555"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    906
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "556"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    907
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_BetaProjection_BAM_FLT.mdl');text(10,75,'Beta Projection transformation.');text"
		    "(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "557"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_BetaProjection_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_BetaProjection_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_ClarkInv_FLT"
	      SID		      "558"
	      Ports		      [1, 1]
	      Position		      [20, 140, 245, 190]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		908
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_ClarkInv_FLT"
		Description		"Inverse Clarke transformation 2ph -> 3ph in single precision floating-point implementation. Refer to t"
		"he AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_ClarkInv_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_ClarkInv_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "559"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_ClarkInv_SF"
		  SID			  "560"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_ClarkInv_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "561"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    909
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "562"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    910
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_ClarkInv_BAM_FLT.mdl');text(10,75,'Inverse Clarke transformation');text(10,60,'"
		    "NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "563"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_ClarkInv_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ClarkInv_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_Clark_FLT"
	      SID		      "564"
	      Ports		      [1, 1]
	      Position		      [20, 210, 230, 260]
	      ZOrder		      5
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		911
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_Clark_FLT"
		Description		"Clarke transformation 3ph -> 2ph in single precision floating-point implementation. Refer to the AMMCL"
		"IB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_Clark_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_Clark_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "565"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_3Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_Clark_SF"
		  SID			  "566"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_Clark_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "567"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    912
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "568"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    913
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_Clark_BAM_FLT.mdl');text(10,75,'Clarke transformation.');text(10,60,'NXP 2020')"
		    ";text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "569"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_Clark_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_Clark_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_DecouplingPMSM_FLT"
	      SID		      "570"
	      Ports		      [3, 1]
	      Position		      [20, 279, 275, 381]
	      ZOrder		      6
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		914
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_DecouplingPMSM_FLT"
		Description		"Decoupling of d and q axis of PMSM model in single precision floating-point implementation. Refer to t"
		"he AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltLD'], 'BlockType'), 'Inport')\n        posblk = get_param(g"
		"cb, 'Position');\n\n        pos = get_param(    [gcb, '/fltLD'], 'Position');\n        orient = get_param( [gcb, '/f"
		"ltLD'], 'Orientation');\n        delete_block(       [gcb, '/fltLD']);\n        add_block('built-in/Ground', [gcb, '"
		"/fltLD'], 'Position', pos, 'Orientation', orient);\n\n        pos = get_param(    [gcb, '/fltLQ'], 'Position');\n   "
		"     orient = get_param( [gcb, '/fltLQ'], 'Orientation');\n        delete_block(       [gcb, '/fltLQ']);\n        ad"
		"d_block('built-in/Ground', [gcb, '/fltLQ'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param([gcb '"
		"/pUdq'], 'Port', '1');\n        set_param([gcb '/pIdq'], 'Port', '2');\n        set_param([gcb '/fltAngularVel'], 'P"
		"ort', '3');\n\n        set_param([gcb '/pUdqDec'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on','"
		"on'});\n\n        if (posblk(4) - posblk(2)) > 100\n          height = 100;\n          set_param(gcb,'Position',[pos"
		"blk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nelse\n    % shown state variables\n    if st"
		"rcmp(get_param([gcb '/fltLD'], 'BlockType'), 'Ground')\n        posblk = get_param(gcb, 'Position');\n\n        pos "
		"= get_param(    [gcb, '/fltLD'], 'Position');\n        orient = get_param( [gcb, '/fltLD'], 'Orientation');\n       "
		" delete_block(       [gcb, '/fltLD']);\n        add_block('built-in/Inport', [gcb, '/fltLD'], 'Position', pos, 'Orie"
		"ntation', orient, 'OutDataTypeStr', 'single');\n\n        pos = get_param(    [gcb, '/fltLQ'], 'Position');\n       "
		" orient = get_param( [gcb, '/fltLQ'], 'Orientation');\n        delete_block(       [gcb, '/fltLQ']);\n        add_bl"
		"ock('built-in/Inport', [gcb, '/fltLQ'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr', 'single');\n\n\n\n"
		"        set_param([gcb '/pUdq'], 'Port', '1');\n        set_param([gcb '/pIdq'], 'Port', '2');\n        set_param([g"
		"cb '/fltAngularVel'], 'Port', '3');\n        set_param([gcb '/fltLD'], 'Port', '4');\n        set_param([gcb '/fltLQ"
		"'], 'Port', '5');\n\n        set_param([gcb '/pUdqDec'], 'Port', '1');\n\n        set_param(gcb,'MaskEnables',{'on',"
		"'off','off'});\n\n        if (posblk(4) - posblk(2)) < 150\n          height = 150;\n          set_param(gcb,'Positi"
		"on',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\nend\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GMCLIB_DecouplingPMSM_FLT', 'horizontalAlignment', 'cente"
		"r');\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performa"
		"nce)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  3
		  Object {
		    $ObjectID		    915
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off','off'});\nend"
		  }
		  Object {
		    $ObjectID		    916
		    Type		    "edit"
		    Name		    "fltLD"
		    Prompt		    "fltLD (D component of motor inductance [H])"
		    Value		    "0"
		  }
		  Object {
		    $ObjectID		    917
		    Type		    "edit"
		    Name		    "fltLQ"
		    Prompt		    "fltLQ (Q component of motor inductance [H])"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GMCLIB_DecouplingPMSM_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"18"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pUdq"
		  SID			  "570:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIdq"
		  SID			  "570:6"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltAngularVel"
		  SID			  "570:7"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_DecouplingPMSM_SF"
		  SID			  "570:4"
		  Ports			  [5, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_DecouplingPMSM_SF_FLT"
		  Parameters		  "showStates,fltLD,fltLQ"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "570:11"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  8
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    918
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "570:14"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  9
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    919
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_DecouplingPMSM_BAM_FLT.mdl');text(10,75,'Decoupling of d and q axis of PMSM mod"
		    "el.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'24-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLD"
		  SID			  "570:17"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  10
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltLQ"
		  SID			  "570:18"
		  Position		  [40, 358, 70, 372]
		  ZOrder		  11
		}
		Block {
		  BlockType		  Outport
		  Name			  "pUdqDec"
		  SID			  "570:10"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  7
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_DecouplingPMSM_SF"
		  SrcPort		  1
		  DstBlock		  "pUdqDec"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltLQ"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  5
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltLD"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltAngularVel"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "pIdq"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  6
		  SrcBlock		  "pUdq"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_DecouplingPMSM_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_ElimDcBusRip_FLT"
	      SID		      "571"
	      Ports		      [2, 1]
	      Position		      [20, 400, 265, 475]
	      ZOrder		      7
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		920
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_ElimDcBusRip_FLT"
		Description		"DC Bus voltage ripple elimination function in single precision floating-point implementation. Refer to"
		" the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\nif showStates == 1\n    % h"
		"idden state variables\n    if strcmp(get_param([gcb '/fltModIndex'], 'BlockType'), 'Inport')\n        posblk = get_p"
		"aram(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltModIndex'], 'Position');\n        orient = get_para"
		"m( [gcb, '/fltModIndex'], 'Orientation');\n        delete_block(       [gcb, '/fltModIndex']);\n        add_block('b"
		"uilt-in/Ground', [gcb, '/fltModIndex'], 'Position', pos, 'Orientation', orient);\n\n\n\n        set_param([gcb '/pIn"
		"'], 'Port', '1');\n        set_param([gcb '/fltArgDcBusMsr'], 'Port', '2');\n\n        set_param([gcb '/pOut'], 'Por"
		"t', '1');\n\n        set_param(gcb,'MaskEnables',{'on','on'});\n\n        if (posblk(4) - posblk(2)) > 75\n         "
		" height = 75;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n"
		"    end\nelse\n    % shown state variables\n    if strcmp(get_param([gcb '/fltModIndex'], 'BlockType'), 'Ground')\n "
		"       posblk = get_param(gcb, 'Position');\n\n        pos = get_param(    [gcb, '/fltModIndex'], 'Position');\n    "
		"    orient = get_param( [gcb, '/fltModIndex'], 'Orientation');\n        delete_block(       [gcb, '/fltModIndex']);\n"
		"        add_block('built-in/Inport', [gcb, '/fltModIndex'], 'Position', pos, 'Orientation', orient, 'OutDataTypeStr'"
		", 'single');\n\n\n\n        set_param([gcb '/pIn'], 'Port', '1');\n        set_param([gcb '/fltArgDcBusMsr'], 'Port'"
		", '2');\n        set_param([gcb '/fltModIndex'], 'Port', '3');\n\n        set_param([gcb '/pOut'], 'Port', '1');\n\n"
		"        set_param(gcb,'MaskEnables',{'on','off'});\n\n        if (posblk(4) - posblk(2)) < 100\n          height = 1"
		"00;\n          set_param(gcb,'Position',[posblk(1), posblk(2), posblk(3), posblk(2)+height])\n        end\n    end\n"
		"end\n"
		SelfModifiable		"on"
		Display			"color('black');\npos = get_param(gcb, 'Position');\nwidth = pos(3) - pos(1);\nheight = pos(4) - pos(2);\n"
		"tX=width/2;\ntY=height - 8;\ncolor('black');\ntext(tX,tY, 'GMCLIB_ElimDcBusRip_FLT', 'horizontalAlignment', 'center'"
		");\nif showStates == 2\n  color('red');\n  text(tX,tY - 20, ['debugging mode' char(13) char(10) '(limited performanc"
		"e)'], 'horizontalAlignment', 'center');\nend\n"
		IconOpaque		"transparent"
		RunInitForIconRedraw	"on"
		IconUnits		"pixels"
		Array {
		  Type			  "Simulink.MaskParameter"
		  Dimension		  2
		  Object {
		    $ObjectID		    921
		    Type		    "popup"
		    Array {
		    Type		    "Cell"
		    Dimension		    2
		    Cell		    "Hide (faster execution)"
		    Cell		    "Show (allows debugging; connect feedback loops manually)"
		    PropName		    "TypeOptions"
		    }
		    Name		    "showStates"
		    Prompt		    "Show internal states"
		    Value		    "Hide (faster execution)"
		    Callback		    "maskStr = get_param(gcb,'showStates');\nif strcmp(maskStr,'Hide (faster execution)'),\n    set_pa"
		    "ram(gcb,'MaskEnables',{'on','on'});\nelse\n    set_param(gcb,'MaskEnables',{'on','off'});\nend"
		  }
		  Object {
		    $ObjectID		    922
		    Type		    "edit"
		    Name		    "fltModIndex"
		    Prompt		    "fltModIndex (Inverse Modulation Index)"
		    Value		    "0"
		  }
		  PropName		  "Parameters"
		}
	      }
	      System {
		Name			"GMCLIB_ElimDcBusRip_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SIDHighWatermark	"15"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "571:5"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltArgDcBusMsr"
		  SID			  "571:6"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_ElimDcBusRip_SF"
		  SID			  "571:4"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_ElimDcBusRip_SF_FLT"
		  Parameters		  "showStates,fltModIndex"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "571:9"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    923
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "571:12"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    924
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_ElimDcBusRip_BAM_FLT.mdl');text(10,75,'DC Bus voltage ripple elimination functi"
		    "on.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Ground
		  Name			  "fltModIndex"
		  SID			  "571:15"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  8
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "571:8"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_ElimDcBusRip_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltModIndex"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ElimDcBusRip_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltArgDcBusMsr"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ElimDcBusRip_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ElimDcBusRip_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_ParkInv_FLT"
	      SID		      "572"
	      Ports		      [2, 1]
	      Position		      [20, 495, 240, 570]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		925
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_ParkInv_FLT"
		Description		"Inverse Park transformation 2ph rotational -> 2ph stationary in single precision floating-point implem"
		"entation. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_ParkInv_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_ParkInv_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pInAngle"
		  SID			  "573"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "574"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_ParkInv_SF"
		  SID			  "575"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_ParkInv_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "576"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    926
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "577"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    927
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_ParkInv_BAM_FLT.mdl');text(10,75,'Inverse Park transformation.');text(10,60,'NX"
		    "P 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "578"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_ParkInv_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ParkInv_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pInAngle"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_ParkInv_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_Park_FLT"
	      SID		      "579"
	      Ports		      [2, 1]
	      Position		      [20, 590, 225, 665]
	      ZOrder		      9
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		928
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_Park_FLT"
		Description		"Park transformation 2ph stationary -> 2ph rotational in single precision floating-point implementation"
		". Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_Park_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_Park_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pInAngle"
		  SID			  "580"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "581"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_Park_SF"
		  SID			  "582"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_Park_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "583"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    929
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "584"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    930
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_Park_BAM_FLT.mdl');text(10,75,'Park transformation.');text(10,60,'NXP 2020');te"
		    "xt(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "585"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_Park_SF"
		  SrcPort		  1
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_Park_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pInAngle"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_Park_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_PwmIct_FLT"
	      SID		      "586"
	      Ports		      [1, 2]
	      Position		      [20, 685, 235, 760]
	      ZOrder		      10
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		931
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_PwmIct_FLT"
		Description		"General Sinusoidal PWM in single precision floating-point implementation. Refer to the AMMCLIB User's "
		"Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_PwmIct_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_PwmIct_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "587"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_PwmIct_SF"
		  SID			  "588"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_PwmIct_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "589"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    932
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "590"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    933
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_PwmIct_BAM_FLT.mdl');text(10,75,'General Sinusoidal PWM.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u32Sector"
		  SID			  "591"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "592"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_PwmIct_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_PwmIct_SF"
		  SrcPort		  1
		  DstBlock		  "u32Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_PwmIct_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_SvmSci_FLT"
	      SID		      "593"
	      Ports		      [1, 2]
	      Position		      [20, 780, 235, 855]
	      ZOrder		      11
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		934
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_SvmSci_FLT"
		Description		"General Sinusoidal Modulation with Injection of Third Harmonic in single precision floating-point impl"
		"ementation. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_SvmSci_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_SvmSci_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "594"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_SvmSci_SF"
		  SID			  "595"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_SvmSci_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "596"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    935
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "597"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    936
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_SvmSci_BAM_FLT.mdl');text(10,75,'General Sinusoidal Modulation with Injection o"
		    "f Third Harmonic.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u32Sector"
		  SID			  "598"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "599"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_SvmSci_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_SvmSci_SF"
		  SrcPort		  1
		  DstBlock		  "u32Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_SvmSci_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_SvmStd_FLT"
	      SID		      "600"
	      Ports		      [1, 2]
	      Position		      [20, 875, 235, 950]
	      ZOrder		      12
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		937
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_SvmStd_FLT"
		Description		"Standard Space Vector Modulation in single precision floating-point implementation. Refer to the AMMCL"
		"IB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_SvmStd_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_SvmStd_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "601"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_SvmStd_SF"
		  SID			  "602"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_SvmStd_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "603"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    938
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "604"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    939
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_SvmStd_BAM_FLT.mdl');text(10,75,'Standard Space Vector Modulation.');text(10,60"
		    ",'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u32Sector"
		  SID			  "605"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "606"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_SvmStd_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_SvmStd_SF"
		  SrcPort		  1
		  DstBlock		  "u32Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_SvmStd_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_SvmU0n_FLT"
	      SID		      "607"
	      Ports		      [1, 2]
	      Position		      [20, 970, 235, 1045]
	      ZOrder		      13
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		940
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_SvmU0n_FLT"
		Description		"Special Space Vector Modulation with O_000 Nulls in single precision floating-point implementation. Re"
		"fer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_SvmU0n_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_SvmU0n_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "608"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_SvmU0n_SF"
		  SID			  "609"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_SvmU0n_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "610"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    941
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "611"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    942
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_SvmU0n_BAM_FLT.mdl');text(10,75,'Special Space Vector Modulation with O_000 Nul"
		    "ls.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u32Sector"
		  SID			  "612"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "613"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_SvmU0n_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_SvmU0n_SF"
		  SrcPort		  1
		  DstBlock		  "u32Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_SvmU0n_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "GMCLIB_SvmU7n_FLT"
	      SID		      "614"
	      Ports		      [1, 2]
	      Position		      [20, 1065, 235, 1140]
	      ZOrder		      14
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		943
		$ClassName		"Simulink.Mask"
		Type			"GMCLIB_SvmU7n_FLT"
		Description		"Special Space Vector Modulation with O_111 Ones in single precision floating-point implementation. Ref"
		"er to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'GMCLIB_SvmU7n_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"GMCLIB_SvmU7n_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "pIn"
		  SID			  "615"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "Bus: SWLIBS_2Syst_FLT"
		  BusOutputAsStruct	  on
		}
		Block {
		  BlockType		  S-Function
		  Name			  "GMCLIB_SvmU7n_SF"
		  SID			  "616"
		  Ports			  [1, 2]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "GMCLIB_SvmU7n_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "617"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    944
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "618"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    945
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'GMCLIB_SvmU7n_BAM_FLT.mdl');text(10,75,'Special Space Vector Modulation with O_111 One"
		    "s.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u32Sector"
		  SID			  "619"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Block {
		  BlockType		  Outport
		  Name			  "pOut"
		  SID			  "620"
		  Position		  [340, 238, 370, 252]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "GMCLIB_SvmU7n_SF"
		  SrcPort		  2
		  DstBlock		  "pOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "GMCLIB_SvmU7n_SF"
		  SrcPort		  1
		  DstBlock		  "u32Sector"
		  DstPort		  1
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "pIn"
		  SrcPort		  1
		  DstBlock		  "GMCLIB_SvmU7n_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "MLIB"
      SID		      "621"
      Ports		      []
      Position		      [480, 0, 580, 100]
      ZOrder		      5
      RequestExecContextInheritance off
      System {
	Name			"MLIB"
	Location		[100, 100, 900, 600]
	Open			off
	PortBlocksUseCompactNotation off
	SetExecutionDomain	off
	ExecutionDomainType	"Deduce"
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	SimulinkSubDomain	"Simulink"
	Block {
	  BlockType		  SubSystem
	  Name			  "F16"
	  SID			  "622"
	  Ports			  []
	  Position		  [0, 0, 100, 100]
	  ZOrder		  1
	  RequestExecContextInheritance	off
	  System {
	    Name		    "F16"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_AbsSat_F16"
	      SID		      "623"
	      Ports		      [1, 1]
	      Position		      [20, 0, 225, 50]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		946
		$ClassName		"Simulink.Mask"
		Type			"MLIB_AbsSat_F16"
		Description		"Saturated absolute value in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's "
		"Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_AbsSat_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_AbsSat_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "624"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_AbsSat_SF"
		  SID			  "625"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_AbsSat_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "626"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    947
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "627"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    948
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_AbsSat_BAM_F16.mdl');text(10,75,'Saturated absolute value.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "628"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_AbsSat_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "MLIB_AbsSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Abs_F16"
	      SID		      "629"
	      Ports		      [1, 1]
	      Position		      [20, 70, 210, 120]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		949
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Abs_F16"
		Description		"Unsaturated absolute value in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User'"
		"s Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Abs_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Abs_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "630"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Abs_SF"
		  SID			  "631"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Abs_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "632"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    950
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "633"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    951
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Abs_BAM_F16.mdl');text(10,75,'Unsaturated absolute value.');text(10,60,'NXP 2020'"
		    ");text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "634"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Abs_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "MLIB_Abs_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_AddSat_F16"
	      SID		      "635"
	      Ports		      [2, 1]
	      Position		      [20, 140, 225, 215]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		952
		$ClassName		"Simulink.Mask"
		Type			"MLIB_AddSat_F16"
		Description		"Saturated addition in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide "
		"for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_AddSat_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_AddSat_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "636"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "637"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_AddSat_SF"
		  SID			  "638"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_AddSat_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "639"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    953
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "640"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    954
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_AddSat_BAM_F16.mdl');text(10,75,'Saturated addition.');text(10,60,'NXP 2020');tex"
		    "t(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "641"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_AddSat_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_AddSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_AddSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Add_F16"
	      SID		      "642"
	      Ports		      [2, 1]
	      Position		      [20, 235, 210, 310]
	      ZOrder		      5
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		955
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Add_F16"
		Description		"Unsaturated addition in 16-bit fixed-point fractional implementation."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Add_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Add_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "643"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "644"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Add_SF"
		  SID			  "645"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Add_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "646"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    956
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "647"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    957
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Add_BAM_F16.mdl');text(10,75,'Unsaturated addition.');text(10,60,'NXP 2020');text"
		    "(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "648"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Add_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Add_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Add_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ConvertPU_F16F32"
	      SID		      "649"
	      Ports		      [1, 1]
	      Position		      [20, 330, 240, 380]
	      ZOrder		      6
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		958
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ConvertPU_F16F32"
		Description		"Conversion of a 32-bit fixed-point fractional value to a 16-bit fixed-point fractional equivalent. Ref"
		"er to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ConvertPU_F16F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ConvertPU_F16F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "650"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ConvertPU_SF"
		  SID			  "651"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_ConvertPU_SF_F16F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "652"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    959
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "653"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    960
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ConvertPU_BAM_F16F32.mdl');text(10,75,'Converts the input value to a different re"
		    "presentation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "654"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ConvertPU_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "MLIB_ConvertPU_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ConvertPU_F16FLT"
	      SID		      "655"
	      Ports		      [1, 1]
	      Position		      [20, 400, 240, 450]
	      ZOrder		      7
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		961
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ConvertPU_F16FLT"
		Description		"Conversion of a single precision floating-point value to a 16-bit fixed-point fractional equivalent. R"
		"efer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ConvertPU_F16FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ConvertPU_F16FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "656"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ConvertPU_SF"
		  SID			  "657"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_ConvertPU_SF_F16FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "658"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    962
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "659"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    963
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ConvertPU_BAM_F16FLT.mdl');text(10,75,'Converts the input value to a different re"
		    "presentation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "660"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ConvertPU_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "MLIB_ConvertPU_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Convert_F16F32"
	      SID		      "661"
	      Ports		      [2, 1]
	      Position		      [20, 470, 230, 545]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		964
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Convert_F16F32"
		Description		"Scaled conversion of a 32-bit fixed-point fractional value to a 16-bit fixed-point fractional equivale"
		"nt. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Convert_F16F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Convert_F16F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "662"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "663"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Convert_SF"
		  SID			  "664"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Convert_SF_F16F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "665"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    965
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "666"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    966
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Convert_BAM_F16F32.mdl');text(10,75,'Converts the input value with scale to a dif"
		    "ferent representation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "667"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Convert_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Convert_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Convert_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Convert_F16FLT"
	      SID		      "668"
	      Ports		      [2, 1]
	      Position		      [20, 565, 230, 640]
	      ZOrder		      9
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		967
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Convert_F16FLT"
		Description		"Scaled conversion of a single precision floating-point value to a 16-bit fixed-point fractional equiva"
		"lent. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Convert_F16FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Convert_F16FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn1"
		  SID			  "669"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn2"
		  SID			  "670"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Convert_SF"
		  SID			  "671"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Convert_SF_F16FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "672"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    968
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "673"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    969
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Convert_BAM_F16FLT.mdl');text(10,75,'Converts the input value with scale to a dif"
		    "ferent representation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "674"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Convert_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Convert_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Convert_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_DivSat_F16"
	      SID		      "675"
	      Ports		      [2, 1]
	      Position		      [20, 660, 225, 735]
	      ZOrder		      10
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		970
		$ClassName		"Simulink.Mask"
		Type			"MLIB_DivSat_F16"
		Description		"Saturated division of two input values in 16-bit fixed-point fractional implementation. Refer to the A"
		"MMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_DivSat_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_DivSat_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "676"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "677"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_DivSat_SF"
		  SID			  "678"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_DivSat_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "679"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    971
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "680"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    972
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_DivSat_BAM_F16.mdl');text(10,75,'Saturated division.');text(10,60,'NXP 2020');tex"
		    "t(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "681"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_DivSat_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_DivSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_DivSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Div_F16"
	      SID		      "682"
	      Ports		      [2, 1]
	      Position		      [20, 755, 210, 830]
	      ZOrder		      11
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		973
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Div_F16"
		Description		"Division of two input values without saturation in 16-bit fixed-point fractional implementation. Refer"
		" to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Div_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Div_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "683"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "684"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Div_SF"
		  SID			  "685"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Div_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "686"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    974
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "687"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    975
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Div_BAM_F16.mdl');text(10,75,'Division of two input values.');text(10,60,'NXP 202"
		    "0');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "688"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Div_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Div_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Div_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_MacSat_F16"
	      SID		      "689"
	      Ports		      [3, 1]
	      Position		      [20, 850, 225, 950]
	      ZOrder		      12
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		976
		$ClassName		"Simulink.Mask"
		Type			"MLIB_MacSat_F16"
		Description		"Saturated multiply-accumulate of input values in 16-bit fixed-point fractional implementation. Refer t"
		"o the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_MacSat_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_MacSat_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "690"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "691"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In3"
		  SID			  "692"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_MacSat_SF"
		  SID			  "693"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_MacSat_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "694"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    977
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "695"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    978
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_MacSat_BAM_F16.mdl');text(10,75,'Saturated sum of two input values.');text(10,60,"
		    "'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "696"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_MacSat_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_MacSat_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_MacSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_MacSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Mac_F16"
	      SID		      "697"
	      Ports		      [3, 1]
	      Position		      [20, 970, 210, 1070]
	      ZOrder		      13
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		979
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Mac_F16"
		Description		"Unsaturated multiply-accumulate function in 16-bit fixed-point fractional implementation. Refer to the"
		" AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Mac_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Mac_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "698"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "699"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In3"
		  SID			  "700"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Mac_SF"
		  SID			  "701"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Mac_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "702"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    980
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "703"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    981
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Mac_BAM_F16.mdl');text(10,75,'Multiply-accumulte.');text(10,60,'NXP 2020');text(1"
		    "0,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "704"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Mac_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mac_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mac_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mac_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Mnac_F16"
	      SID		      "705"
	      Ports		      [3, 1]
	      Position		      [20, 1090, 215, 1190]
	      ZOrder		      14
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		982
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Mnac_F16"
		Description		"Unsaturated multiply-negative-accumulate function in 16-bit fixed-point fractional implementation. Ref"
		"er to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Mnac_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Mnac_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "706"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "707"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In3"
		  SID			  "708"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Mnac_SF"
		  SID			  "709"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Mnac_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "710"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    983
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "711"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    984
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Mnac_BAM_F16.mdl');text(10,75,'Unsaturated multiply-negative-accumulate.');text(1"
		    "0,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "712"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Mnac_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mnac_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mnac_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mnac_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Msu_F16"
	      SID		      "713"
	      Ports		      [3, 1]
	      Position		      [20, 1210, 210, 1310]
	      ZOrder		      15
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		985
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Msu_F16"
		Description		"Unsaturated multiply-subtract-from function in 16-bit fixed-point fractional implementation. Refer to "
		"the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Msu_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Msu_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "714"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "715"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In3"
		  SID			  "716"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Msu_SF"
		  SID			  "717"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Msu_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "718"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    986
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "719"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    987
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Msu_BAM_F16.mdl');text(10,75,'Unsaturated multiply-subtract-from.');text(10,60,'N"
		    "XP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "720"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Msu_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_Msu_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Msu_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Msu_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_MulSat_F16"
	      SID		      "721"
	      Ports		      [2, 1]
	      Position		      [20, 1330, 225, 1405]
	      ZOrder		      16
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		988
		$ClassName		"Simulink.Mask"
		Type			"MLIB_MulSat_F16"
		Description		"Saturated multiplication of two input values in 16-bit fixed-point fractional implementation. Refer to"
		" the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_MulSat_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_MulSat_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "722"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "723"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_MulSat_SF"
		  SID			  "724"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_MulSat_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "725"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    989
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "726"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    990
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_MulSat_BAM_F16.mdl');text(10,75,'Saturated multiplication.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "727"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_MulSat_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_MulSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_MulSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Mul_F16"
	      SID		      "728"
	      Ports		      [2, 1]
	      Position		      [20, 1425, 210, 1500]
	      ZOrder		      17
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		991
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Mul_F16"
		Description		"Unsaturated multiplication of two input values in 16-bit fixed-point fractional implementation. Refer "
		"to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Mul_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Mul_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "729"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "730"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Mul_SF"
		  SID			  "731"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Mul_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "732"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    992
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "733"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    993
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Mul_BAM_F16.mdl');text(10,75,'Unsaturated multiplication.');text(10,60,'NXP 2020'"
		    ");text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "734"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Mul_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mul_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mul_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_NegSat_F16"
	      SID		      "735"
	      Ports		      [1, 1]
	      Position		      [20, 1520, 225, 1570]
	      ZOrder		      18
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		994
		$ClassName		"Simulink.Mask"
		Type			"MLIB_NegSat_F16"
		Description		"Saturated negation in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide "
		"for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_NegSat_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_NegSat_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "736"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_NegSat_SF"
		  SID			  "737"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_NegSat_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "738"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    995
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "739"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    996
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_NegSat_BAM_F16.mdl');text(10,75,'Saturated negation.');text(10,60,'NXP 2020');tex"
		    "t(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "740"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_NegSat_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "MLIB_NegSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Neg_F16"
	      SID		      "741"
	      Ports		      [1, 1]
	      Position		      [20, 1590, 210, 1640]
	      ZOrder		      19
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		997
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Neg_F16"
		Description		"Unsaturated negation in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guid"
		"e for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Neg_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Neg_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "742"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Neg_SF"
		  SID			  "743"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Neg_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "744"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    998
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "745"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    999
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Neg_BAM_F16.mdl');text(10,75,'Unsaturated negation.');text(10,60,'NXP 2020');text"
		    "(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "746"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Neg_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "MLIB_Neg_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Norm_F16"
	      SID		      "747"
	      Ports		      [1, 1]
	      Position		      [20, 1660, 215, 1710]
	      ZOrder		      20
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1000
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Norm_F16"
		Description		"Normalization function in 16-bit fixed-point fractional implementation. The function counts the number"
		" of left shift needed for normalization of the input fractional value. Refer to the AMMCLIB User's Guide for further"
		" details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Norm_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Norm_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "748"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Norm_SF"
		  SID			  "749"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Norm_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "750"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1001
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "751"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1002
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Norm_BAM_F16.mdl');text(10,75,'Normalization of the input value.');text(10,60,'NX"
		    "P 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16Out"
		  SID			  "752"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Norm_SF"
		  SrcPort		  1
		  DstBlock		  "u16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "MLIB_Norm_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_RndSat_F16F32"
	      SID		      "753"
	      Ports		      [1, 1]
	      Position		      [20, 1730, 225, 1780]
	      ZOrder		      21
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1003
		$ClassName		"Simulink.Mask"
		Type			"MLIB_RndSat_F16F32"
		Description		"Saturated round to the nearest 16-bit fractional value. Refer to the AMMCLIB User's Guide for further "
		"details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_RndSat_F16F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_RndSat_F16F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "754"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_RndSat_SF"
		  SID			  "755"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_RndSat_SF_F16F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "756"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1004
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "757"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1005
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_RndSat_BAM_F16F32.mdl');text(10,75,'Saturated round to nearest.');text(10,60,'NXP"
		    " 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "758"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_RndSat_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "MLIB_RndSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Round_F16"
	      SID		      "759"
	      Ports		      [2, 1]
	      Position		      [20, 1800, 220, 1875]
	      ZOrder		      22
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1006
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Round_F16"
		Description		"Rounding function in 16-bit fixed-point fractional implementation. The function rounds the first input"
		" value to the number of digits defined by second input value and saturates the result. Refer to the AMMCLIB User's G"
		"uide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Round_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Round_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "760"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u16In2"
		  SID			  "761"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Round_SF"
		  SID			  "762"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Round_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "763"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1007
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "764"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1008
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Round_BAM_F16.mdl');text(10,75,'Round the first input value.');text(10,60,'NXP 20"
		    "20');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "765"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Round_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Round_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Round_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ShBiSat_F16"
	      SID		      "766"
	      Ports		      [2, 1]
	      Position		      [20, 1895, 230, 1970]
	      ZOrder		      23
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1009
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ShBiSat_F16"
		Description		"Saturated bidirectional shift in 16-bit fixed-point fractional implementation. The function shifts the"
		" first input value to the left (if the second input is negative) or right (if the second input is positive) by the a"
		"mount defined by second input value, saturating the result. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ShBiSat_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ShBiSat_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "767"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "s16In2"
		  SID			  "768"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ShBiSat_SF"
		  SID			  "769"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_ShBiSat_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "770"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1010
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "771"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1011
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ShBiSat_BAM_F16.mdl');text(10,75,'Saturated bidirectional shift.');text(10,60,'NX"
		    "P 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "772"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ShBiSat_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "s16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShBiSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShBiSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ShBi_F16"
	      SID		      "773"
	      Ports		      [2, 1]
	      Position		      [20, 1990, 215, 2065]
	      ZOrder		      24
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1012
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ShBi_F16"
		Description		"Unsaturated bidirectional shift in 16-bit fixed-point fractional implementation. The function shifts t"
		"he first input value to the left (if the second input is negative) or right (if the second input is positive) by the"
		" amount defined by second input value. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ShBi_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ShBi_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "774"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "s16In2"
		  SID			  "775"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ShBi_SF"
		  SID			  "776"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_ShBi_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "777"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1013
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "778"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1014
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ShBi_BAM_F16.mdl');text(10,75,'Unsaturated bidirectional shift.');text(10,60,'NXP"
		    " 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "779"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ShBi_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "s16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShBi_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShBi_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ShLSat_F16"
	      SID		      "780"
	      Ports		      [2, 1]
	      Position		      [20, 2085, 225, 2160]
	      ZOrder		      25
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1015
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ShLSat_F16"
		Description		"Saturated shift left in 16-bit fixed-point fractional implementation. The function shifts the first in"
		"put value to the left by the amount defined by the second input value, saturating the result. Refer to the AMMCLIB U"
		"ser's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ShLSat_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ShLSat_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "781"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u16In2"
		  SID			  "782"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ShLSat_SF"
		  SID			  "783"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_ShLSat_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "784"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1016
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "785"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1017
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ShLSat_BAM_F16.mdl');text(10,75,'Saturated shift left.');text(10,60,'NXP 2020');t"
		    "ext(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "786"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ShLSat_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShLSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShLSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ShL_F16"
	      SID		      "787"
	      Ports		      [2, 1]
	      Position		      [20, 2180, 210, 2255]
	      ZOrder		      26
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1018
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ShL_F16"
		Description		"Unsaturated shift left in 16-bit fixed-point fractional implementation. The function shifts the first "
		"input value to the left by the amount defined by the second input value. Refer to the AMMCLIB User's Guide for furth"
		"er details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ShL_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ShL_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "788"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u16In2"
		  SID			  "789"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ShL_SF"
		  SID			  "790"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_ShL_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "791"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1019
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "792"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1020
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ShL_BAM_F16.mdl');text(10,75,'Unsaturated shift left.');text(10,60,'NXP 2020');te"
		    "xt(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "793"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ShL_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShL_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShL_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ShR_F16"
	      SID		      "794"
	      Ports		      [2, 1]
	      Position		      [20, 2275, 210, 2350]
	      ZOrder		      27
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1021
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ShR_F16"
		Description		"Unsaturated shift right in 16-bit fixed-point fractional implementation. The function shifts the first"
		" input value to the right by the amount defined by the second input value. Refer to the AMMCLIB User's Guide for fur"
		"ther details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ShR_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ShR_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "795"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u16In2"
		  SID			  "796"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ShR_SF"
		  SID			  "797"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_ShR_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "798"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1022
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "799"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1023
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ShR_BAM_F16.mdl');text(10,75,'Unsaturated shift right.');text(10,60,'NXP 2020');t"
		    "ext(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "800"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ShR_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShR_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShR_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_SubSat_F16"
	      SID		      "801"
	      Ports		      [2, 1]
	      Position		      [20, 2370, 225, 2445]
	      ZOrder		      28
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1024
		$ClassName		"Simulink.Mask"
		Type			"MLIB_SubSat_F16"
		Description		"Saturated subtraction in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Gui"
		"de for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_SubSat_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_SubSat_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "802"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "803"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_SubSat_SF"
		  SID			  "804"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_SubSat_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "805"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1025
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "806"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1026
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_SubSat_BAM_F16.mdl');text(10,75,'Saturated subtraction.');text(10,60,'NXP 2020');"
		    "text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "807"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_SubSat_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_SubSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_SubSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Sub_F16"
	      SID		      "808"
	      Ports		      [2, 1]
	      Position		      [20, 2465, 210, 2540]
	      ZOrder		      29
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1027
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Sub_F16"
		Description		"Unsaturated subtraction in 16-bit fixed-point fractional implementation. Refer to the AMMCLIB User's G"
		"uide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Sub_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Sub_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "809"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "810"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Sub_SF"
		  SID			  "811"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Sub_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "812"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1028
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "813"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1029
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Sub_BAM_F16.mdl');text(10,75,'Unsaturated subtraction.');text(10,60,'NXP 2020');t"
		    "ext(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "814"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Sub_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Sub_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Sub_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_VMac_F16"
	      SID		      "815"
	      Ports		      [4, 1]
	      Position		      [20, 2562, 215, 2688]
	      ZOrder		      30
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1030
		$ClassName		"Simulink.Mask"
		Type			"MLIB_VMac_F16"
		Description		"Dot product of 2-element vectors with saturated multiplication and modulo accumulation in 16-bit fixed"
		"-point fractional implementation. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_VMac_F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_VMac_F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "816"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "817"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In3"
		  SID			  "818"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In4"
		  SID			  "819"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  5
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_VMac_SF"
		  SID			  "820"
		  Ports			  [4, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_VMac_SF_F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "821"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1031
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "822"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  8
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1032
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_VMac_BAM_F16.mdl');text(10,75,'Dot product of 2-element vectors with saturated mu"
		    "ltiplication and modulo accumulation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f16Out"
		  SID			  "823"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  6
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_VMac_SF"
		  SrcPort		  1
		  DstBlock		  "f16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In4"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "F32"
	  SID			  "824"
	  Ports			  []
	  Position		  [120, 0, 220, 100]
	  ZOrder		  2
	  RequestExecContextInheritance	off
	  System {
	    Name		    "F32"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_AbsSat_F32"
	      SID		      "825"
	      Ports		      [1, 1]
	      Position		      [20, 0, 225, 50]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1033
		$ClassName		"Simulink.Mask"
		Type			"MLIB_AbsSat_F32"
		Description		"Saturated absolute value in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's "
		"Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_AbsSat_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_AbsSat_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "826"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_AbsSat_SF"
		  SID			  "827"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_AbsSat_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "828"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1034
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "829"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1035
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_AbsSat_BAM_F32.mdl');text(10,75,'Saturated absolute value.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "830"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_AbsSat_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "MLIB_AbsSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Abs_F32"
	      SID		      "831"
	      Ports		      [1, 1]
	      Position		      [20, 70, 210, 120]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1036
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Abs_F32"
		Description		"Unsaturated absolute value in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User'"
		"s Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Abs_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Abs_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "832"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Abs_SF"
		  SID			  "833"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Abs_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "834"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1037
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "835"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1038
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Abs_BAM_F32.mdl');text(10,75,'Unsaturated absolute value.');text(10,60,'NXP 2020'"
		    ");text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "836"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Abs_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "MLIB_Abs_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_AddSat_F32"
	      SID		      "837"
	      Ports		      [2, 1]
	      Position		      [20, 140, 225, 215]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1039
		$ClassName		"Simulink.Mask"
		Type			"MLIB_AddSat_F32"
		Description		"Saturated addition in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide "
		"for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_AddSat_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_AddSat_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "838"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "839"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_AddSat_SF"
		  SID			  "840"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_AddSat_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "841"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1040
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "842"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1041
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_AddSat_BAM_F32.mdl');text(10,75,'Saturated addition.');text(10,60,'NXP 2020');tex"
		    "t(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "843"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_AddSat_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_AddSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_AddSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Add_F32"
	      SID		      "844"
	      Ports		      [2, 1]
	      Position		      [20, 235, 210, 310]
	      ZOrder		      5
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1042
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Add_F32"
		Description		"Unsaturated addition in 32-bit fixed-point fractional implementation."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Add_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Add_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "845"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "846"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Add_SF"
		  SID			  "847"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Add_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "848"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1043
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "849"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1044
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Add_BAM_F32.mdl');text(10,75,'Unsaturated addition.');text(10,60,'NXP 2020');text"
		    "(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "850"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Add_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Add_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Add_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ConvertPU_F32F16"
	      SID		      "851"
	      Ports		      [1, 1]
	      Position		      [20, 330, 240, 380]
	      ZOrder		      6
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1045
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ConvertPU_F32F16"
		Description		"Conversion of a 16-bit fixed-point fractional value to a 32-bit fixed-point fractional equivalent. Ref"
		"er to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ConvertPU_F32F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ConvertPU_F32F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "852"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ConvertPU_SF"
		  SID			  "853"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_ConvertPU_SF_F32F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "854"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1046
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "855"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1047
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ConvertPU_BAM_F32F16.mdl');text(10,75,'Converts the input value to a different re"
		    "presentation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "856"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ConvertPU_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "MLIB_ConvertPU_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ConvertPU_F32FLT"
	      SID		      "857"
	      Ports		      [1, 1]
	      Position		      [20, 400, 240, 450]
	      ZOrder		      7
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1048
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ConvertPU_F32FLT"
		Description		"Conversion of a single precision floating-point value to a 32-bit fixed-point fractional equivalent. R"
		"efer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ConvertPU_F32FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ConvertPU_F32FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "858"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ConvertPU_SF"
		  SID			  "859"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_ConvertPU_SF_F32FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "860"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1049
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "861"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1050
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ConvertPU_BAM_F32FLT.mdl');text(10,75,'Converts the input value to a different re"
		    "presentation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "862"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ConvertPU_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "MLIB_ConvertPU_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Convert_F32F16"
	      SID		      "863"
	      Ports		      [2, 1]
	      Position		      [20, 470, 230, 545]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1051
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Convert_F32F16"
		Description		"Scaled conversion of a 16-bit fixed-point fractional value to a 32-bit fixed-point fractional equivale"
		"nt. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Convert_F32F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Convert_F32F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "864"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "865"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Convert_SF"
		  SID			  "866"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Convert_SF_F32F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "867"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1052
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "868"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1053
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Convert_BAM_F32F16.mdl');text(10,75,'Converts the input value with scale to a dif"
		    "ferent representation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "869"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Convert_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Convert_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Convert_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Convert_F32FLT"
	      SID		      "870"
	      Ports		      [2, 1]
	      Position		      [20, 565, 230, 640]
	      ZOrder		      9
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1054
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Convert_F32FLT"
		Description		"Scaled conversion of a single precision floating-point value to a 32-bit fixed-point fractional equiva"
		"lent. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Convert_F32FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Convert_F32FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn1"
		  SID			  "871"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn2"
		  SID			  "872"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Convert_SF"
		  SID			  "873"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Convert_SF_F32FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "874"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1055
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "875"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1056
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Convert_BAM_F32FLT.mdl');text(10,75,'Converts the input value with scale to a dif"
		    "ferent representation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "876"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Convert_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Convert_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Convert_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_DivSat_F32"
	      SID		      "877"
	      Ports		      [2, 1]
	      Position		      [20, 660, 225, 735]
	      ZOrder		      10
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1057
		$ClassName		"Simulink.Mask"
		Type			"MLIB_DivSat_F32"
		Description		"Saturated division of two input values in 32-bit fixed-point fractional implementation. Refer to the A"
		"MMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_DivSat_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_DivSat_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "878"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "879"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_DivSat_SF"
		  SID			  "880"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_DivSat_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "881"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1058
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "882"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1059
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_DivSat_BAM_F32.mdl');text(10,75,'Saturated division.');text(10,60,'NXP 2020');tex"
		    "t(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "883"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_DivSat_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_DivSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_DivSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Div_F32"
	      SID		      "884"
	      Ports		      [2, 1]
	      Position		      [20, 755, 210, 830]
	      ZOrder		      11
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1060
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Div_F32"
		Description		"Division of two input values without saturation in 32-bit fixed-point fractional implementation. Refer"
		" to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Div_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Div_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "885"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "886"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Div_SF"
		  SID			  "887"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Div_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "888"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1061
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "889"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1062
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Div_BAM_F32.mdl');text(10,75,'Division of two input values.');text(10,60,'NXP 202"
		    "0');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "890"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Div_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Div_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Div_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_MacSat_F32"
	      SID		      "891"
	      Ports		      [3, 1]
	      Position		      [20, 850, 225, 950]
	      ZOrder		      12
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1063
		$ClassName		"Simulink.Mask"
		Type			"MLIB_MacSat_F32"
		Description		"Saturated multiply-accumulate of input values in 32-bit fixed-point fractional implementation. Refer t"
		"o the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_MacSat_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_MacSat_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "892"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "893"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In3"
		  SID			  "894"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_MacSat_SF"
		  SID			  "895"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_MacSat_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "896"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1064
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "897"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1065
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_MacSat_BAM_F32.mdl');text(10,75,'Saturated multiply-accumulate.');text(10,60,'NXP"
		    " 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "898"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_MacSat_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_MacSat_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_MacSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_MacSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Mac_F32"
	      SID		      "899"
	      Ports		      [3, 1]
	      Position		      [20, 970, 210, 1070]
	      ZOrder		      13
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1066
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Mac_F32"
		Description		"Unsaturated multiply-accumulate function in 32-bit fixed-point fractional implementation. Refer to the"
		" AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Mac_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Mac_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "900"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "901"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In3"
		  SID			  "902"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Mac_SF"
		  SID			  "903"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Mac_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "904"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1067
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "905"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1068
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Mac_BAM_F32.mdl');text(10,75,'Multiply-accumulte.');text(10,60,'NXP 2020');text(1"
		    "0,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "906"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Mac_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mac_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mac_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mac_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Mnac_F32"
	      SID		      "907"
	      Ports		      [3, 1]
	      Position		      [20, 1090, 215, 1190]
	      ZOrder		      14
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1069
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Mnac_F32"
		Description		"Unsaturated multiply-negative-accumulate function in 32-bit fixed-point fractional implementation. Ref"
		"er to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Mnac_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Mnac_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "908"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "909"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In3"
		  SID			  "910"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Mnac_SF"
		  SID			  "911"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Mnac_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "912"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1070
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "913"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1071
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Mnac_BAM_F32.mdl');text(10,75,'Unsaturated multiply-negative-accumulate.');text(1"
		    "0,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "914"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Mnac_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mnac_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mnac_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mnac_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Msu_F32"
	      SID		      "915"
	      Ports		      [3, 1]
	      Position		      [20, 1210, 210, 1310]
	      ZOrder		      15
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1072
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Msu_F32"
		Description		"Unsaturated multiply-subtract-from function in 32-bit fixed-point fractional implementation. Refer to "
		"the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Msu_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Msu_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "916"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "917"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In3"
		  SID			  "918"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Msu_SF"
		  SID			  "919"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Msu_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "920"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1073
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "921"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1074
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Msu_BAM_F32.mdl');text(10,75,'Unsaturated multiply-subtract-from.');text(10,60,'N"
		    "XP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "922"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Msu_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_Msu_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Msu_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Msu_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_MulSat_F32"
	      SID		      "923"
	      Ports		      [2, 1]
	      Position		      [20, 1330, 225, 1405]
	      ZOrder		      16
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1075
		$ClassName		"Simulink.Mask"
		Type			"MLIB_MulSat_F32"
		Description		"Saturated multiplication of two input values in 32-bit fixed-point fractional implementation. Refer to"
		" the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_MulSat_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_MulSat_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "924"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "925"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_MulSat_SF"
		  SID			  "926"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_MulSat_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "927"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1076
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "928"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1077
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_MulSat_BAM_F32.mdl');text(10,75,'Saturated multiplication.');text(10,60,'NXP 2020"
		    "');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "929"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_MulSat_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_MulSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_MulSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Mul_F32"
	      SID		      "930"
	      Ports		      [2, 1]
	      Position		      [20, 1425, 210, 1500]
	      ZOrder		      17
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1078
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Mul_F32"
		Description		"Unsaturated multiplication of two input values in 32-bit fixed-point fractional implementation. Refer "
		"to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Mul_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Mul_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "931"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "932"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Mul_SF"
		  SID			  "933"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Mul_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "934"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1079
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "935"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1080
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Mul_BAM_F32.mdl');text(10,75,'Unsaturated multiplication.');text(10,60,'NXP 2020'"
		    ");text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "936"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Mul_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mul_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mul_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_NegSat_F32"
	      SID		      "937"
	      Ports		      [1, 1]
	      Position		      [20, 1520, 225, 1570]
	      ZOrder		      18
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1081
		$ClassName		"Simulink.Mask"
		Type			"MLIB_NegSat_F32"
		Description		"Saturated negation in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guide "
		"for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_NegSat_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_NegSat_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "938"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_NegSat_SF"
		  SID			  "939"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_NegSat_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "940"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1082
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "941"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1083
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_NegSat_BAM_F32.mdl');text(10,75,'Saturated negation.');text(10,60,'NXP 2020');tex"
		    "t(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "942"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_NegSat_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "MLIB_NegSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Neg_F32"
	      SID		      "943"
	      Ports		      [1, 1]
	      Position		      [20, 1590, 210, 1640]
	      ZOrder		      19
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1084
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Neg_F32"
		Description		"Unsaturated negation in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Guid"
		"e for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Neg_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Neg_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "944"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Neg_SF"
		  SID			  "945"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Neg_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "946"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1085
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "947"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1086
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Neg_BAM_F32.mdl');text(10,75,'Unsaturated negation.');text(10,60,'NXP 2020');text"
		    "(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "948"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Neg_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "MLIB_Neg_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Norm_F32"
	      SID		      "949"
	      Ports		      [1, 1]
	      Position		      [20, 1660, 215, 1710]
	      ZOrder		      20
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1087
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Norm_F32"
		Description		"Normalization function in 32-bit fixed-point fractional implementation. The function counts the number"
		" of left shift needed for normalization of the input fractional value. Refer to the AMMCLIB User's Guide for further"
		" details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Norm_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Norm_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "950"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Norm_SF"
		  SID			  "951"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Norm_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "952"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1088
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "953"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1089
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Norm_BAM_F32.mdl');text(10,75,'Normalization of the input value.');text(10,60,'NX"
		    "P 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "u16Out"
		  SID			  "954"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Norm_SF"
		  SrcPort		  1
		  DstBlock		  "u16Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "MLIB_Norm_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Round_F32"
	      SID		      "955"
	      Ports		      [2, 1]
	      Position		      [20, 1730, 220, 1805]
	      ZOrder		      21
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1090
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Round_F32"
		Description		"Rounding function in 32-bit fixed-point fractional implementation. The function rounds the first input"
		" value to the number of digits defined by second input value and saturates the result. Refer to the AMMCLIB User's G"
		"uide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Round_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Round_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "956"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u16In2"
		  SID			  "957"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Round_SF"
		  SID			  "958"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Round_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "959"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1091
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "960"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1092
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Round_BAM_F32.mdl');text(10,75,'Round the first input value.');text(10,60,'NXP 20"
		    "20');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "961"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Round_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Round_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Round_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ShBiSat_F32"
	      SID		      "962"
	      Ports		      [2, 1]
	      Position		      [20, 1825, 230, 1900]
	      ZOrder		      22
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1093
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ShBiSat_F32"
		Description		"Saturated bidirectional shift in 32-bit fixed-point fractional implementation. The function shifts the"
		" first input value to the left (if the second input is negative) or right (if the second input is positive) by the a"
		"mount defined by second input value, saturating the result. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ShBiSat_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ShBiSat_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "963"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "s16In2"
		  SID			  "964"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ShBiSat_SF"
		  SID			  "965"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_ShBiSat_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "966"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1094
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "967"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1095
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ShBiSat_BAM_F32.mdl');text(10,75,'Saturated bidirectional shift.');text(10,60,'NX"
		    "P 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "968"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ShBiSat_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "s16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShBiSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShBiSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ShBi_F32"
	      SID		      "969"
	      Ports		      [2, 1]
	      Position		      [20, 1920, 215, 1995]
	      ZOrder		      23
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1096
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ShBi_F32"
		Description		"Unsaturated bidirectional shift in 32-bit fixed-point fractional implementation. The function shifts t"
		"he first input value to the left (if the second input is negative) or right (if the second input is positive) by the"
		" amount defined by second input value. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ShBi_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ShBi_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "970"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "s16In2"
		  SID			  "971"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ShBi_SF"
		  SID			  "972"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_ShBi_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "973"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1097
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "974"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1098
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ShBi_BAM_F32.mdl');text(10,75,'Unsaturated bidirectional shift.');text(10,60,'NXP"
		    " 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "975"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ShBi_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "s16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShBi_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShBi_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ShLSat_F32"
	      SID		      "976"
	      Ports		      [2, 1]
	      Position		      [20, 2015, 225, 2090]
	      ZOrder		      24
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1099
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ShLSat_F32"
		Description		"Saturated shift left in 32-bit fixed-point fractional implementation. The function shifts the first in"
		"put value to the left by the amount defined by the second input value, saturating the result. Refer to the AMMCLIB U"
		"ser's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ShLSat_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ShLSat_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "977"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u16In2"
		  SID			  "978"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ShLSat_SF"
		  SID			  "979"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_ShLSat_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "980"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1100
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "981"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1101
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ShLSat_BAM_F32.mdl');text(10,75,'Saturated shift left.');text(10,60,'NXP 2020');t"
		    "ext(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "982"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ShLSat_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShLSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShLSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ShL_F32"
	      SID		      "983"
	      Ports		      [2, 1]
	      Position		      [20, 2110, 210, 2185]
	      ZOrder		      25
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1102
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ShL_F32"
		Description		"Unsaturated shift left in 32-bit fixed-point fractional implementation. The function shifts the first "
		"input value to the left by the amount defined by the second input value. Refer to the AMMCLIB User's Guide for furth"
		"er details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ShL_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ShL_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "984"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u16In2"
		  SID			  "985"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ShL_SF"
		  SID			  "986"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_ShL_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "987"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1103
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "988"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1104
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ShL_BAM_F32.mdl');text(10,75,'Unsaturated shift left.');text(10,60,'NXP 2020');te"
		    "xt(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "989"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ShL_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShL_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShL_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ShR_F32"
	      SID		      "990"
	      Ports		      [2, 1]
	      Position		      [20, 2205, 210, 2280]
	      ZOrder		      26
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1105
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ShR_F32"
		Description		"Unsaturated shift right in 32-bit fixed-point fractional implementation. The function shifts the first"
		" input value to the right by the amount defined by the second input value. Refer to the AMMCLIB User's Guide for fur"
		"ther details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ShR_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ShR_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "991"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "u16In2"
		  SID			  "992"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "uint16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ShR_SF"
		  SID			  "993"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_ShR_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "994"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1106
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "995"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1107
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ShR_BAM_F32.mdl');text(10,75,'Unsaturated shift right.');text(10,60,'NXP 2020');t"
		    "ext(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "996"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ShR_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "u16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShR_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_ShR_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_SubSat_F32"
	      SID		      "997"
	      Ports		      [2, 1]
	      Position		      [20, 2300, 225, 2375]
	      ZOrder		      27
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1108
		$ClassName		"Simulink.Mask"
		Type			"MLIB_SubSat_F32"
		Description		"Saturated subtraction in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's Gui"
		"de for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_SubSat_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_SubSat_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "998"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "999"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_SubSat_SF"
		  SID			  "1000"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_SubSat_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1001"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1109
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1002"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1110
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_SubSat_BAM_F32.mdl');text(10,75,'Saturated subtraction.');text(10,60,'NXP 2020');"
		    "text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "1003"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_SubSat_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_SubSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_SubSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Sub_F32"
	      SID		      "1004"
	      Ports		      [2, 1]
	      Position		      [20, 2395, 210, 2470]
	      ZOrder		      28
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1111
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Sub_F32"
		Description		"Unsaturated subtraction in 32-bit fixed-point fractional implementation. Refer to the AMMCLIB User's G"
		"uide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Sub_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Sub_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "1005"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "1006"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Sub_SF"
		  SID			  "1007"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Sub_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1008"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1112
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1009"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1113
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Sub_BAM_F32.mdl');text(10,75,'Unsaturated subtraction.');text(10,60,'NXP 2020');t"
		    "ext(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "1010"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Sub_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Sub_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Sub_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_VMac_F32"
	      SID		      "1011"
	      Ports		      [4, 1]
	      Position		      [20, 2492, 215, 2618]
	      ZOrder		      29
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1114
		$ClassName		"Simulink.Mask"
		Type			"MLIB_VMac_F32"
		Description		"Dot product of 2-element vectors with saturated multiplication and modulo accumulation in 32-bit fixed"
		"-point fractional implementation. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_VMac_F32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_VMac_F32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "1012"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "1013"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In3"
		  SID			  "1014"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In4"
		  SID			  "1015"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  5
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_VMac_SF"
		  SID			  "1016"
		  Ports			  [4, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_VMac_SF_F32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1017"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1115
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1018"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  8
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1116
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_VMac_BAM_F32.mdl');text(10,75,'Dot product of 2-element vectors with saturated mu"
		    "ltiplication and modulo accumulation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "1019"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  6
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_VMac_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In4"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "F32F16F16"
	  SID			  "1020"
	  Ports			  []
	  Position		  [240, 0, 340, 100]
	  ZOrder		  3
	  RequestExecContextInheritance	off
	  System {
	    Name		    "F32F16F16"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_MacSat_F32F16F16"
	      SID		      "1021"
	      Ports		      [3, 1]
	      Position		      [20, 0, 225, 100]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1117
		$ClassName		"Simulink.Mask"
		Type			"MLIB_MacSat_F32F16F16"
		Description		"Saturated multiply-accumulate of input values in 16/32-bit fixed-point fractional implementation. Refe"
		"r to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_MacSat_F32F16F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_MacSat_F32F16F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "1022"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "1023"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In3"
		  SID			  "1024"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_MacSat_SF"
		  SID			  "1025"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_MacSat_SF_F32F16F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1026"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1118
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1027"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1119
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_MacSat_BAM_F32F16F16.mdl');text(10,75,'Saturated multiply-accumulate.');text(10,6"
		    "0,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "1028"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_MacSat_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_MacSat_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_MacSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_MacSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Mac_F32F16F16"
	      SID		      "1029"
	      Ports		      [3, 1]
	      Position		      [20, 120, 210, 220]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1120
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Mac_F32F16F16"
		Description		"Unsaturated multiply-accumulate function in 16/32-bit fixed-point fractional implementation. Refer to "
		"the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Mac_F32F16F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Mac_F32F16F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "1030"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "1031"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In3"
		  SID			  "1032"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Mac_SF"
		  SID			  "1033"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Mac_SF_F32F16F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1034"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1121
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1035"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1122
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Mac_BAM_F32F16F16.mdl');text(10,75,'Multiply-accumulte.');text(10,60,'NXP 2020');"
		    "text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "1036"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Mac_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mac_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mac_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mac_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Mnac_F32F16F16"
	      SID		      "1037"
	      Ports		      [3, 1]
	      Position		      [20, 240, 215, 340]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1123
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Mnac_F32F16F16"
		Description		"Unsaturated multiply-negative-accumulate function in 16/32-bit fixed-point fractional implementation. "
		"Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Mnac_F32F16F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Mnac_F32F16F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "1038"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "1039"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In3"
		  SID			  "1040"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Mnac_SF"
		  SID			  "1041"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Mnac_SF_F32F16F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1042"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1124
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1043"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1125
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Mnac_BAM_F32F16F16.mdl');text(10,75,'Unsaturated multiply-negative-accumulate.');"
		    "text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "1044"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Mnac_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mnac_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mnac_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mnac_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Msu_F32F16F16"
	      SID		      "1045"
	      Ports		      [3, 1]
	      Position		      [20, 360, 210, 460]
	      ZOrder		      5
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1126
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Msu_F32F16F16"
		Description		"Unsaturated multiply-subtract-from function in 16/32-bit fixed-point fractional implementation. Refer "
		"to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Msu_F32F16F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Msu_F32F16F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "1046"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "1047"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In3"
		  SID			  "1048"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Msu_SF"
		  SID			  "1049"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Msu_SF_F32F16F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1050"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1127
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1051"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1128
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Msu_BAM_F32F16F16.mdl');text(10,75,'Unsaturated multiply-subtract-from.');text(10"
		    ",60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "1052"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Msu_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_Msu_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Msu_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Msu_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_MulSat_F32F16F16"
	      SID		      "1053"
	      Ports		      [2, 1]
	      Position		      [20, 480, 225, 555]
	      ZOrder		      6
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1129
		$ClassName		"Simulink.Mask"
		Type			"MLIB_MulSat_F32F16F16"
		Description		"Saturated multiplication of two input values in 16/32-bit fixed-point fractional implementation. Refer"
		" to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_MulSat_F32F16F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_MulSat_F32F16F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "1054"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "1055"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_MulSat_SF"
		  SID			  "1056"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_MulSat_SF_F32F16F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1057"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1130
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1058"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1131
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_MulSat_BAM_F32F16F16.mdl');text(10,75,'Saturated multiplication.');text(10,60,'NX"
		    "P 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "1059"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_MulSat_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_MulSat_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_MulSat_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Mul_F32F16F16"
	      SID		      "1060"
	      Ports		      [2, 1]
	      Position		      [20, 575, 210, 650]
	      ZOrder		      7
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1132
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Mul_F32F16F16"
		Description		"Unsaturated multiplication of two input values in 16/32-bit fixed-point fractional implementation. Ref"
		"er to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Mul_F32F16F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Mul_F32F16F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "1061"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "1062"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Mul_SF"
		  SID			  "1063"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Mul_SF_F32F16F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1064"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1133
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1065"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1134
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Mul_BAM_F32F16F16.mdl');text(10,75,'Unsaturated multiplication.');text(10,60,'NXP"
		    " 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "1066"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Mul_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mul_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mul_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_VMac_F32F16F16"
	      SID		      "1067"
	      Ports		      [4, 1]
	      Position		      [20, 672, 215, 798]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1135
		$ClassName		"Simulink.Mask"
		Type			"MLIB_VMac_F32F16F16"
		Description		"Dot product of 2-element vectors with saturated multiplication and modulo accumulation in 16/32-bit fi"
		"xed-point fractional implementation. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_VMac_F32F16F16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_VMac_F32F16F16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "1068"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "1069"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In3"
		  SID			  "1070"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In4"
		  SID			  "1071"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  5
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_VMac_SF"
		  SID			  "1072"
		  Ports			  [4, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_VMac_SF_F32F16F16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1073"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1136
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1074"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  8
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1137
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_VMac_BAM_F32F16F16.mdl');text(10,75,'Dot product of 2-element vectors with satura"
		    "ted multiplication and modulo accumulation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020')"
		    ";"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "f32Out"
		  SID			  "1075"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  6
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_VMac_SF"
		  SrcPort		  1
		  DstBlock		  "f32Out"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In4"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In3"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "FLT"
	  SID			  "1076"
	  Ports			  []
	  Position		  [360, 0, 460, 100]
	  ZOrder		  4
	  RequestExecContextInheritance	off
	  System {
	    Name		    "FLT"
	    Location		    [100, 100, 900, 600]
	    Open		    off
	    PortBlocksUseCompactNotation off
	    SetExecutionDomain	    off
	    ExecutionDomainType	    "Deduce"
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SimulinkSubDomain	    "Simulink"
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Abs_FLT"
	      SID		      "1077"
	      Ports		      [1, 1]
	      Position		      [20, 0, 210, 50]
	      ZOrder		      2
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1138
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Abs_FLT"
		Description		"Absolute value in single precision floating-point implementation. Refer to the AMMCLIB User's Guide fo"
		"r further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Abs_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Abs_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "1078"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Abs_SF"
		  SID			  "1079"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Abs_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1080"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1139
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1081"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1140
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Abs_BAM_FLT.mdl');text(10,75,'Absolute value.');text(10,60,'NXP 2020');text(10,45"
		    ",'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1082"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Abs_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "MLIB_Abs_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Add_FLT"
	      SID		      "1083"
	      Ports		      [2, 1]
	      Position		      [20, 70, 210, 145]
	      ZOrder		      3
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1141
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Add_FLT"
		Description		"Addition in single precision floating-point implementation."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Add_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Add_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn1"
		  SID			  "1084"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn2"
		  SID			  "1085"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Add_SF"
		  SID			  "1086"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Add_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1087"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1142
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1088"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1143
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Add_BAM_FLT.mdl');text(10,75,'Addition.');text(10,60,'NXP 2020');text(10,45,'1.0'"
		    ");text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1089"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Add_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Add_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Add_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ConvertPU_FLTF16"
	      SID		      "1090"
	      Ports		      [1, 1]
	      Position		      [20, 165, 240, 215]
	      ZOrder		      4
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1144
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ConvertPU_FLTF16"
		Description		"Conversion of a 16-bit fixed-point fractional value to a single precision floating-point equivalent. R"
		"efer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ConvertPU_FLTF16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ConvertPU_FLTF16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In"
		  SID			  "1091"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ConvertPU_SF"
		  SID			  "1092"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_ConvertPU_SF_FLTF16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1093"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1145
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1094"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1146
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ConvertPU_BAM_FLTF16.mdl');text(10,75,'Converts the input value to a different re"
		    "presentation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1095"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ConvertPU_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In"
		  SrcPort		  1
		  DstBlock		  "MLIB_ConvertPU_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_ConvertPU_FLTF32"
	      SID		      "1096"
	      Ports		      [1, 1]
	      Position		      [20, 235, 240, 285]
	      ZOrder		      5
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1147
		$ClassName		"Simulink.Mask"
		Type			"MLIB_ConvertPU_FLTF32"
		Description		"Conversion of a 32-bit fixed-point fractional value to a single precision floating-point equivalent. R"
		"efer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_ConvertPU_FLTF32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_ConvertPU_FLTF32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In"
		  SID			  "1097"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_ConvertPU_SF"
		  SID			  "1098"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_ConvertPU_SF_FLTF32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1099"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1148
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1100"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1149
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_ConvertPU_BAM_FLTF32.mdl');text(10,75,'Converts the input value to a different re"
		    "presentation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1101"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_ConvertPU_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In"
		  SrcPort		  1
		  DstBlock		  "MLIB_ConvertPU_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Convert_FLTF16"
	      SID		      "1102"
	      Ports		      [2, 1]
	      Position		      [20, 305, 230, 380]
	      ZOrder		      6
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1150
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Convert_FLTF16"
		Description		"Scaled conversion of a 16-bit fixed-point fractional value to a single precision floating-point equiva"
		"lent. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Convert_FLTF16', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Convert_FLTF16"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f16In1"
		  SID			  "1103"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f16In2"
		  SID			  "1104"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int16"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Convert_SF"
		  SID			  "1105"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Convert_SF_FLTF16"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1106"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1151
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1107"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1152
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Convert_BAM_FLTF16.mdl');text(10,75,'Converts the input value with scale to a dif"
		    "ferent representation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1108"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Convert_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f16In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Convert_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f16In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Convert_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Convert_FLTF32"
	      SID		      "1109"
	      Ports		      [2, 1]
	      Position		      [20, 400, 230, 475]
	      ZOrder		      7
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1153
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Convert_FLTF32"
		Description		"Scaled conversion of a 32-bit fixed-point fractional value to a single precision floating-point equiva"
		"lent. Refer to the AMMCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Convert_FLTF32', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Convert_FLTF32"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "f32In1"
		  SID			  "1110"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  Inport
		  Name			  "f32In2"
		  SID			  "1111"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "int32"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Convert_SF"
		  SID			  "1112"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Convert_SF_FLTF32"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1113"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1154
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1114"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1155
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Convert_BAM_FLTF32.mdl');text(10,75,'Converts the input value with scale to a dif"
		    "ferent representation.');text(10,60,'NXP 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1115"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Convert_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "f32In2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Convert_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "f32In1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Convert_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Div_FLT"
	      SID		      "1116"
	      Ports		      [2, 1]
	      Position		      [20, 495, 210, 570]
	      ZOrder		      8
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1156
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Div_FLT"
		Description		"Division of two input values in single precision floating-point implementation. Refer to the AMMCLIB U"
		"ser's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Div_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Div_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn1"
		  SID			  "1117"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn2"
		  SID			  "1118"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Div_SF"
		  SID			  "1119"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Div_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1120"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1157
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1121"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1158
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Div_BAM_FLT.mdl');text(10,75,'Division of two input values.');text(10,60,'NXP 202"
		    "0');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1122"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Div_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Div_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Div_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Mac_FLT"
	      SID		      "1123"
	      Ports		      [3, 1]
	      Position		      [20, 590, 210, 690]
	      ZOrder		      9
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1159
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Mac_FLT"
		Description		"Multiply accumulate function in single precision floating-point implementation. Refer to the AMMCLIB U"
		"ser's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Mac_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Mac_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn1"
		  SID			  "1124"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn2"
		  SID			  "1125"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn3"
		  SID			  "1126"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Mac_SF"
		  SID			  "1127"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Mac_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1128"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1160
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1129"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1161
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Mac_BAM_FLT.mdl');text(10,75,'Multiply-accumulte.');text(10,60,'NXP 2020');text(1"
		    "0,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1130"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Mac_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn3"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mac_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mac_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltIn1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mac_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Mnac_FLT"
	      SID		      "1131"
	      Ports		      [3, 1]
	      Position		      [20, 710, 215, 810]
	      ZOrder		      10
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1162
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Mnac_FLT"
		Description		"Multiply-negative-accumulate function in 32-bit fixed-point fractional implementation. Refer to the AM"
		"MCLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Mnac_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Mnac_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn1"
		  SID			  "1132"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn2"
		  SID			  "1133"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn3"
		  SID			  "1134"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Mnac_SF"
		  SID			  "1135"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Mnac_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1136"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1163
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1137"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1164
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Mnac_BAM_FLT.mdl');text(10,75,'Multiply-negative-accumulate.');text(10,60,'NXP 20"
		    "20');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1138"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Mnac_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn3"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mnac_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mnac_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltIn1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mnac_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Msu_FLT"
	      SID		      "1139"
	      Ports		      [3, 1]
	      Position		      [20, 830, 210, 930]
	      ZOrder		      11
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1165
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Msu_FLT"
		Description		"Multiply-subtract-from function in single precision floating-point implementation. Refer to the AMMCLI"
		"B User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Msu_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Msu_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn1"
		  SID			  "1140"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn2"
		  SID			  "1141"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn3"
		  SID			  "1142"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Msu_SF"
		  SID			  "1143"
		  Ports			  [3, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Msu_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1144"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1166
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1145"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1167
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Msu_BAM_FLT.mdl');text(10,75,'Multiply-subtract-from.');text(10,60,'NXP 2020');te"
		    "xt(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1146"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  5
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Msu_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn3"
		  SrcPort		  1
		  DstBlock		  "MLIB_Msu_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Msu_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltIn1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Msu_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Mul_FLT"
	      SID		      "1147"
	      Ports		      [2, 1]
	      Position		      [20, 950, 210, 1025]
	      ZOrder		      12
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1168
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Mul_FLT"
		Description		"Multiplication of two input values in single precision floating-point implementation. Refer to the AMM"
		"CLIB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Mul_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Mul_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn1"
		  SID			  "1148"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn2"
		  SID			  "1149"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Mul_SF"
		  SID			  "1150"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Mul_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1151"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1169
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1152"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1170
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Mul_BAM_FLT.mdl');text(10,75,'Multiplication.');text(10,60,'NXP 2020');text(10,45"
		    ",'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1153"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Mul_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mul_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Mul_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Neg_FLT"
	      SID		      "1154"
	      Ports		      [1, 1]
	      Position		      [20, 1045, 210, 1095]
	      ZOrder		      13
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1171
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Neg_FLT"
		Description		"Negation in single precision floating-point implementation. Refer to the AMMCLIB User's Guide for furt"
		"her details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Neg_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Neg_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn"
		  SID			  "1155"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Neg_SF"
		  SID			  "1156"
		  Ports			  [1, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_Neg_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1157"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  4
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1172
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1158"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1173
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Neg_BAM_FLT.mdl');text(10,75,'Negation.');text(10,60,'NXP 2020');text(10,45,'1.0'"
		    ");text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1159"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  3
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Neg_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn"
		  SrcPort		  1
		  DstBlock		  "MLIB_Neg_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_Sub_FLT"
	      SID		      "1160"
	      Ports		      [2, 1]
	      Position		      [20, 1115, 210, 1190]
	      ZOrder		      14
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1174
		$ClassName		"Simulink.Mask"
		Type			"MLIB_Sub_FLT"
		Description		"Subtraction in single precision floating-point implementation. Refer to the AMMCLIB User's Guide for f"
		"urther details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_Sub_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_Sub_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn1"
		  SID			  "1161"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn2"
		  SID			  "1162"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_Sub_SF"
		  SID			  "1163"
		  Ports			  [2, 1]
		  Position		  [135, 182, 285, 233]
		  ZOrder		  1
		  FunctionName		  "MLIB_Sub_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1164"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  5
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1175
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1165"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  6
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1176
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_Sub_BAM_FLT.mdl');text(10,75,'Subtraction.');text(10,60,'NXP 2020');text(10,45,'1"
		    ".0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1166"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  4
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_Sub_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn2"
		  SrcPort		  1
		  DstBlock		  "MLIB_Sub_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn1"
		  SrcPort		  1
		  DstBlock		  "MLIB_Sub_SF"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "MLIB_VMac_FLT"
	      SID		      "1167"
	      Ports		      [4, 1]
	      Position		      [20, 1212, 215, 1338]
	      ZOrder		      15
	      TreatAsAtomicUnit	      on
	      RTWSystemCode	      "Inline"
	      RequestExecContextInheritance off
	      Object {
		$PropName		"MaskObject"
		$ObjectID		1177
		$ClassName		"Simulink.Mask"
		Type			"MLIB_VMac_FLT"
		Description		"Dot product of 2-element vectors in single precision floating-point implementation. Refer to the AMMCL"
		"IB User's Guide for further details."
		Initialization		"if ~evalin('base','exist(''tS8'',''var'')')\n  if (2 ~= exist('SWLIBS_Typedefs.mat','file'))\n     "
		" error('File SWLIBS_Typedefs.mat is not on the Matlab path. Please add the AMMCLIB \"bam\" folder in the Matlab Sear"
		"ch Path.');\n  else\n      evalin('base', 'load(''SWLIBS_Typedefs.mat'')');\n  end\nend\n"
		Display			"pos = get_param(gcb, 'Position');width = pos(3) - pos(1); height = pos(4) - pos(2);tX=width/2;tY=height -"
		" 8;color('black');text(tX,tY, 'MLIB_VMac_FLT', 'horizontalAlignment', 'center');"
		IconOpaque		"transparent"
		IconUnits		"pixels"
	      }
	      System {
		Name			"MLIB_VMac_FLT"
		Location		[433, 403, 931, 703]
		Open			off
		PortBlocksUseCompactNotation off
		SetExecutionDomain	off
		ExecutionDomainType	"Deduce"
		ModelBrowserVisibility	off
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		SimulinkSubDomain	"Simulink"
		Block {
		  BlockType		  Inport
		  Name			  "fltIn1"
		  SID			  "1168"
		  Position		  [40, 198, 70, 212]
		  ZOrder		  2
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn2"
		  SID			  "1169"
		  Position		  [40, 238, 70, 252]
		  ZOrder		  3
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn3"
		  SID			  "1170"
		  Position		  [40, 278, 70, 292]
		  ZOrder		  4
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  Inport
		  Name			  "fltIn4"
		  SID			  "1171"
		  Position		  [40, 318, 70, 332]
		  ZOrder		  5
		  BackgroundColor	  "[0.854900, 0.819600, 0.776470]"
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataTypeStr	  "single"
		}
		Block {
		  BlockType		  S-Function
		  Name			  "MLIB_VMac_SF"
		  SID			  "1172"
		  Ports			  [4, 1]
		  Position		  [135, 180, 285, 230]
		  ZOrder		  1
		  FunctionName		  "MLIB_VMac_SF_FLT"
		  SFunctionDeploymentMode off
		  EnableBusSupport	  off
		  SFcnIsStateOwnerBlock	  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright"
		  SID			  "1173"
		  Ports			  []
		  Position		  [0, 0, 75, 100]
		  ZOrder		  7
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1178
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'FILE:');text(10,75,'DESRIPTION:');text(10,60,'COPYRIGHT:');text(10,45,'VERSION:');text"
		    "(10,30,'DATE:')"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "copyright2"
		  SID			  "1174"
		  Ports			  []
		  Position		  [100, 0, 600, 100]
		  ZOrder		  8
		  ShowName		  off
		  RequestExecContextInheritance	off
		  Object {
		    $PropName		    "MaskObject"
		    $ObjectID		    1179
		    $ClassName		    "Simulink.Mask"
		    Display		    "text(10,90,'MLIB_VMac_BAM_FLT.mdl');text(10,75,'Dot product of 2-element vectors.');text(10,60,'NX"
		    "P 2020');text(10,45,'1.0');text(10,30,'18-Mar-2020');"
		    IconFrame		    "off"
		    IconUnits		    "pixels"
		  }
		  System {
		    Name		    "copyright2"
		    Location		    [433, 403, 931, 703]
		    Open		    off
		    PortBlocksUseCompactNotation off
		    SetExecutionDomain	    off
		    ExecutionDomainType	    "Deduce"
		    ModelBrowserVisibility  off
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    SimulinkSubDomain	    "Simulink"
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "fltOut"
		  SID			  "1175"
		  Position		  [340, 198, 370, 212]
		  ZOrder		  6
		  BackgroundColor	  "[0.450980, 0.749019, 0.843137]"
		  IconDisplay		  "Port number"
		}
		Line {
		  ZOrder		  1
		  SrcBlock		  "MLIB_VMac_SF"
		  SrcPort		  1
		  DstBlock		  "fltOut"
		  DstPort		  1
		}
		Line {
		  ZOrder		  2
		  SrcBlock		  "fltIn4"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  4
		}
		Line {
		  ZOrder		  3
		  SrcBlock		  "fltIn3"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  3
		}
		Line {
		  ZOrder		  4
		  SrcBlock		  "fltIn2"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  2
		}
		Line {
		  ZOrder		  5
		  SrcBlock		  "fltIn1"
		  SrcPort		  1
		  DstBlock		  "MLIB_VMac_SF"
		  DstPort		  1
		}
	      }
	    }
	  }
	}
      }
    }
  }
}
